
src/models.rs,182
pub struct Message {Message7,137
    pub id: i32,id8,158
    pub content: String,content9,175
pub struct NewMessage {NewMessage14,271
    pub content: String,content15,295

src/schema.rs,0

src/main.rs,1719
mod models;models13,334
mod schema;schema14,346
type DbPool = r2d2::Pool<ConnectionManager<PgConnection>>;DbPool19,429
struct Broadcast(String);Broadcast23,539
type SharedUsers = Arc<Mutex<Vec<Recipient<Broadcast>>>>;SharedUsers25,566
type SharedMessages = Arc<Mutex<Vec<String>>>;SharedMessages26,624
struct AppState {AppState29,689
    users: SharedUsers,users30,707
    messages: SharedMessages,messages31,731
    pool: DbPoolpool32,761
struct WsUser {WsUser35,781
    users: SharedUsers,users36,797
    app_data: web::Data<AppState>,app_data37,821
impl Actor for WsUser {WsUser40,859
    type Context = ws::WebsocketContext<Self>;Context41,883
    fn started(&mut self, ctx: &mut Self::Context) {started43,931
    fn stopped(&mut self, _ctx: &mut Self::Context) {stopped48,1084
impl StreamHandler<Result<ws::Message, ws::ProtocolError>> for WsUser {WsUser55,1296
    fn handle(&mut self, msg: Result<ws::Message, ws::ProtocolError>, _ctx: &mut Self::Context) handle56,1368
impl Handler<Broadcast> for WsUser {WsUser69,1796
    type Result = ();Result70,1833
    fn handle(&mut self, msg: Broadcast, ctx: &mut Self::Context) {handle72,1856
async fn add_message(data: web::Data<AppState>, msg: web::Json<NewMessage>) -> HttpResponse {add_message78,1981
async fn delete_message(data: web::Data<AppState>, id: web::Path<usize>) -> HttpResponse {delete_message92,2487
async fn get_messages(data: web::Data<AppState>) -> HttpResponse {get_messages103,2973
async fn broadcast_message(data: web::Data<AppState>, msg: web::Json<String>) -> HttpResponse {broadcast_message112,3327
async fn ws_route(ws_route121,3623
async fn main() -> std::io::Result<()> {main135,3937

target/debug/build/typenum-fd16e0fdc0485eed/out/tests.rs,522526
fn test_0_BitAnd_0() {test_0_BitAnd_08,94
    type A = UTerm;A9,117
    type B = UTerm;B10,137
    type U0 = UTerm;U011,157
    type U0BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U0BitAndU014,214
fn test_0_BitOr_0() {test_0_BitOr_020,400
    type A = UTerm;A21,422
    type B = UTerm;B22,442
    type U0 = UTerm;U023,462
    type U0BitOrU0 = <<A as BitOr<B>>::Output as Same<U0>>::Output;U0BitOrU026,519
fn test_0_BitXor_0() {test_0_BitXor_032,702
    type A = UTerm;A33,725
    type B = UTerm;B34,745
    type U0 = UTerm;U035,765
    type U0BitXorU0 = <<A as BitXor<B>>::Output as Same<U0>>::Output;U0BitXorU038,822
fn test_0_Shl_0() {test_0_Shl_044,1008
    type A = UTerm;A45,1028
    type B = UTerm;B46,1048
    type U0 = UTerm;U047,1068
    type U0ShlU0 = <<A as Shl<B>>::Output as Same<U0>>::Output;U0ShlU050,1125
fn test_0_Shr_0() {test_0_Shr_056,1302
    type A = UTerm;A57,1322
    type B = UTerm;B58,1342
    type U0 = UTerm;U059,1362
    type U0ShrU0 = <<A as Shr<B>>::Output as Same<U0>>::Output;U0ShrU062,1419
fn test_0_Add_0() {test_0_Add_068,1596
    type A = UTerm;A69,1616
    type B = UTerm;B70,1636
    type U0 = UTerm;U071,1656
    type U0AddU0 = <<A as Add<B>>::Output as Same<U0>>::Output;U0AddU074,1713
fn test_0_Mul_0() {test_0_Mul_080,1890
    type A = UTerm;A81,1910
    type B = UTerm;B82,1930
    type U0 = UTerm;U083,1950
    type U0MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;U0MulU086,2007
fn test_0_Pow_0() {test_0_Pow_092,2184
    type A = UTerm;A93,2204
    type B = UTerm;B94,2224
    type U1 = UInt<UTerm, B1>;U195,2244
    type U0PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;U0PowU098,2311
fn test_0_Min_0() {test_0_Min_0104,2488
    type A = UTerm;A105,2508
    type B = UTerm;B106,2528
    type U0 = UTerm;U0107,2548
    type U0MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;U0MinU0110,2605
fn test_0_Max_0() {test_0_Max_0116,2782
    type A = UTerm;A117,2802
    type B = UTerm;B118,2822
    type U0 = UTerm;U0119,2842
    type U0MaxU0 = <<A as Max<B>>::Output as Same<U0>>::Output;U0MaxU0122,2899
fn test_0_Gcd_0() {test_0_Gcd_0128,3076
    type A = UTerm;A129,3096
    type B = UTerm;B130,3116
    type U0 = UTerm;U0131,3136
    type U0GcdU0 = <<A as Gcd<B>>::Output as Same<U0>>::Output;U0GcdU0134,3193
fn test_0_Sub_0() {test_0_Sub_0140,3370
    type A = UTerm;A141,3390
    type B = UTerm;B142,3410
    type U0 = UTerm;U0143,3430
    type U0SubU0 = <<A as Sub<B>>::Output as Same<U0>>::Output;U0SubU0146,3487
fn test_0_Cmp_0() {test_0_Cmp_0152,3664
    type A = UTerm;A153,3684
    type B = UTerm;B154,3704
    type U0CmpU0 = <A as Cmp<B>>::Output;U0CmpU0157,3760
fn test_0_BitAnd_1() {test_0_BitAnd_1162,3903
    type A = UTerm;A163,3926
    type B = UInt<UTerm, B1>;B164,3946
    type U0 = UTerm;U0165,3976
    type U0BitAndU1 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U0BitAndU1168,4033
fn test_0_BitOr_1() {test_0_BitOr_1174,4219
    type A = UTerm;A175,4241
    type B = UInt<UTerm, B1>;B176,4261
    type U1 = UInt<UTerm, B1>;U1177,4291
    type U0BitOrU1 = <<A as BitOr<B>>::Output as Same<U1>>::Output;U0BitOrU1180,4358
fn test_0_BitXor_1() {test_0_BitXor_1186,4541
    type A = UTerm;A187,4564
    type B = UInt<UTerm, B1>;B188,4584
    type U1 = UInt<UTerm, B1>;U1189,4614
    type U0BitXorU1 = <<A as BitXor<B>>::Output as Same<U1>>::Output;U0BitXorU1192,4681
fn test_0_Shl_1() {test_0_Shl_1198,4867
    type A = UTerm;A199,4887
    type B = UInt<UTerm, B1>;B200,4907
    type U0 = UTerm;U0201,4937
    type U0ShlU1 = <<A as Shl<B>>::Output as Same<U0>>::Output;U0ShlU1204,4994
fn test_0_Shr_1() {test_0_Shr_1210,5171
    type A = UTerm;A211,5191
    type B = UInt<UTerm, B1>;B212,5211
    type U0 = UTerm;U0213,5241
    type U0ShrU1 = <<A as Shr<B>>::Output as Same<U0>>::Output;U0ShrU1216,5298
fn test_0_Add_1() {test_0_Add_1222,5475
    type A = UTerm;A223,5495
    type B = UInt<UTerm, B1>;B224,5515
    type U1 = UInt<UTerm, B1>;U1225,5545
    type U0AddU1 = <<A as Add<B>>::Output as Same<U1>>::Output;U0AddU1228,5612
fn test_0_Mul_1() {test_0_Mul_1234,5789
    type A = UTerm;A235,5809
    type B = UInt<UTerm, B1>;B236,5829
    type U0 = UTerm;U0237,5859
    type U0MulU1 = <<A as Mul<B>>::Output as Same<U0>>::Output;U0MulU1240,5916
fn test_0_Pow_1() {test_0_Pow_1246,6093
    type A = UTerm;A247,6113
    type B = UInt<UTerm, B1>;B248,6133
    type U0 = UTerm;U0249,6163
    type U0PowU1 = <<A as Pow<B>>::Output as Same<U0>>::Output;U0PowU1252,6220
fn test_0_Min_1() {test_0_Min_1258,6397
    type A = UTerm;A259,6417
    type B = UInt<UTerm, B1>;B260,6437
    type U0 = UTerm;U0261,6467
    type U0MinU1 = <<A as Min<B>>::Output as Same<U0>>::Output;U0MinU1264,6524
fn test_0_Max_1() {test_0_Max_1270,6701
    type A = UTerm;A271,6721
    type B = UInt<UTerm, B1>;B272,6741
    type U1 = UInt<UTerm, B1>;U1273,6771
    type U0MaxU1 = <<A as Max<B>>::Output as Same<U1>>::Output;U0MaxU1276,6838
fn test_0_Gcd_1() {test_0_Gcd_1282,7015
    type A = UTerm;A283,7035
    type B = UInt<UTerm, B1>;B284,7055
    type U1 = UInt<UTerm, B1>;U1285,7085
    type U0GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U0GcdU1288,7152
fn test_0_Div_1() {test_0_Div_1294,7329
    type A = UTerm;A295,7349
    type B = UInt<UTerm, B1>;B296,7369
    type U0 = UTerm;U0297,7399
    type U0DivU1 = <<A as Div<B>>::Output as Same<U0>>::Output;U0DivU1300,7456
fn test_0_Rem_1() {test_0_Rem_1306,7633
    type A = UTerm;A307,7653
    type B = UInt<UTerm, B1>;B308,7673
    type U0 = UTerm;U0309,7703
    type U0RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;U0RemU1312,7760
fn test_0_PartialDiv_1() {test_0_PartialDiv_1318,7937
    type A = UTerm;A319,7964
    type B = UInt<UTerm, B1>;B320,7984
    type U0 = UTerm;U0321,8014
    type U0PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;U0PartialDivU1324,8071
fn test_0_Cmp_1() {test_0_Cmp_1330,8269
    type A = UTerm;A331,8289
    type B = UInt<UTerm, B1>;B332,8309
    type U0CmpU1 = <A as Cmp<B>>::Output;U0CmpU1335,8375
fn test_0_BitAnd_2() {test_0_BitAnd_2340,8517
    type A = UTerm;A341,8540
    type B = UInt<UInt<UTerm, B1>, B0>;B342,8560
    type U0 = UTerm;U0343,8600
    type U0BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U0BitAndU2346,8657
fn test_0_BitOr_2() {test_0_BitOr_2352,8843
    type A = UTerm;A353,8865
    type B = UInt<UInt<UTerm, B1>, B0>;B354,8885
    type U2 = UInt<UInt<UTerm, B1>, B0>;U2355,8925
    type U0BitOrU2 = <<A as BitOr<B>>::Output as Same<U2>>::Output;U0BitOrU2358,9002
fn test_0_BitXor_2() {test_0_BitXor_2364,9185
    type A = UTerm;A365,9208
    type B = UInt<UInt<UTerm, B1>, B0>;B366,9228
    type U2 = UInt<UInt<UTerm, B1>, B0>;U2367,9268
    type U0BitXorU2 = <<A as BitXor<B>>::Output as Same<U2>>::Output;U0BitXorU2370,9345
fn test_0_Shl_2() {test_0_Shl_2376,9531
    type A = UTerm;A377,9551
    type B = UInt<UInt<UTerm, B1>, B0>;B378,9571
    type U0 = UTerm;U0379,9611
    type U0ShlU2 = <<A as Shl<B>>::Output as Same<U0>>::Output;U0ShlU2382,9668
fn test_0_Shr_2() {test_0_Shr_2388,9845
    type A = UTerm;A389,9865
    type B = UInt<UInt<UTerm, B1>, B0>;B390,9885
    type U0 = UTerm;U0391,9925
    type U0ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;U0ShrU2394,9982
fn test_0_Add_2() {test_0_Add_2400,10159
    type A = UTerm;A401,10179
    type B = UInt<UInt<UTerm, B1>, B0>;B402,10199
    type U2 = UInt<UInt<UTerm, B1>, B0>;U2403,10239
    type U0AddU2 = <<A as Add<B>>::Output as Same<U2>>::Output;U0AddU2406,10316
fn test_0_Mul_2() {test_0_Mul_2412,10493
    type A = UTerm;A413,10513
    type B = UInt<UInt<UTerm, B1>, B0>;B414,10533
    type U0 = UTerm;U0415,10573
    type U0MulU2 = <<A as Mul<B>>::Output as Same<U0>>::Output;U0MulU2418,10630
fn test_0_Pow_2() {test_0_Pow_2424,10807
    type A = UTerm;A425,10827
    type B = UInt<UInt<UTerm, B1>, B0>;B426,10847
    type U0 = UTerm;U0427,10887
    type U0PowU2 = <<A as Pow<B>>::Output as Same<U0>>::Output;U0PowU2430,10944
fn test_0_Min_2() {test_0_Min_2436,11121
    type A = UTerm;A437,11141
    type B = UInt<UInt<UTerm, B1>, B0>;B438,11161
    type U0 = UTerm;U0439,11201
    type U0MinU2 = <<A as Min<B>>::Output as Same<U0>>::Output;U0MinU2442,11258
fn test_0_Max_2() {test_0_Max_2448,11435
    type A = UTerm;A449,11455
    type B = UInt<UInt<UTerm, B1>, B0>;B450,11475
    type U2 = UInt<UInt<UTerm, B1>, B0>;U2451,11515
    type U0MaxU2 = <<A as Max<B>>::Output as Same<U2>>::Output;U0MaxU2454,11592
fn test_0_Gcd_2() {test_0_Gcd_2460,11769
    type A = UTerm;A461,11789
    type B = UInt<UInt<UTerm, B1>, B0>;B462,11809
    type U2 = UInt<UInt<UTerm, B1>, B0>;U2463,11849
    type U0GcdU2 = <<A as Gcd<B>>::Output as Same<U2>>::Output;U0GcdU2466,11926
fn test_0_Div_2() {test_0_Div_2472,12103
    type A = UTerm;A473,12123
    type B = UInt<UInt<UTerm, B1>, B0>;B474,12143
    type U0 = UTerm;U0475,12183
    type U0DivU2 = <<A as Div<B>>::Output as Same<U0>>::Output;U0DivU2478,12240
fn test_0_Rem_2() {test_0_Rem_2484,12417
    type A = UTerm;A485,12437
    type B = UInt<UInt<UTerm, B1>, B0>;B486,12457
    type U0 = UTerm;U0487,12497
    type U0RemU2 = <<A as Rem<B>>::Output as Same<U0>>::Output;U0RemU2490,12554
fn test_0_PartialDiv_2() {test_0_PartialDiv_2496,12731
    type A = UTerm;A497,12758
    type B = UInt<UInt<UTerm, B1>, B0>;B498,12778
    type U0 = UTerm;U0499,12818
    type U0PartialDivU2 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;U0PartialDivU2502,12875
fn test_0_Cmp_2() {test_0_Cmp_2508,13073
    type A = UTerm;A509,13093
    type B = UInt<UInt<UTerm, B1>, B0>;B510,13113
    type U0CmpU2 = <A as Cmp<B>>::Output;U0CmpU2513,13189
fn test_0_BitAnd_3() {test_0_BitAnd_3518,13331
    type A = UTerm;A519,13354
    type B = UInt<UInt<UTerm, B1>, B1>;B520,13374
    type U0 = UTerm;U0521,13414
    type U0BitAndU3 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U0BitAndU3524,13471
fn test_0_BitOr_3() {test_0_BitOr_3530,13657
    type A = UTerm;A531,13679
    type B = UInt<UInt<UTerm, B1>, B1>;B532,13699
    type U3 = UInt<UInt<UTerm, B1>, B1>;U3533,13739
    type U0BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U0BitOrU3536,13816
fn test_0_BitXor_3() {test_0_BitXor_3542,13999
    type A = UTerm;A543,14022
    type B = UInt<UInt<UTerm, B1>, B1>;B544,14042
    type U3 = UInt<UInt<UTerm, B1>, B1>;U3545,14082
    type U0BitXorU3 = <<A as BitXor<B>>::Output as Same<U3>>::Output;U0BitXorU3548,14159
fn test_0_Shl_3() {test_0_Shl_3554,14345
    type A = UTerm;A555,14365
    type B = UInt<UInt<UTerm, B1>, B1>;B556,14385
    type U0 = UTerm;U0557,14425
    type U0ShlU3 = <<A as Shl<B>>::Output as Same<U0>>::Output;U0ShlU3560,14482
fn test_0_Shr_3() {test_0_Shr_3566,14659
    type A = UTerm;A567,14679
    type B = UInt<UInt<UTerm, B1>, B1>;B568,14699
    type U0 = UTerm;U0569,14739
    type U0ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;U0ShrU3572,14796
fn test_0_Add_3() {test_0_Add_3578,14973
    type A = UTerm;A579,14993
    type B = UInt<UInt<UTerm, B1>, B1>;B580,15013
    type U3 = UInt<UInt<UTerm, B1>, B1>;U3581,15053
    type U0AddU3 = <<A as Add<B>>::Output as Same<U3>>::Output;U0AddU3584,15130
fn test_0_Mul_3() {test_0_Mul_3590,15307
    type A = UTerm;A591,15327
    type B = UInt<UInt<UTerm, B1>, B1>;B592,15347
    type U0 = UTerm;U0593,15387
    type U0MulU3 = <<A as Mul<B>>::Output as Same<U0>>::Output;U0MulU3596,15444
fn test_0_Pow_3() {test_0_Pow_3602,15621
    type A = UTerm;A603,15641
    type B = UInt<UInt<UTerm, B1>, B1>;B604,15661
    type U0 = UTerm;U0605,15701
    type U0PowU3 = <<A as Pow<B>>::Output as Same<U0>>::Output;U0PowU3608,15758
fn test_0_Min_3() {test_0_Min_3614,15935
    type A = UTerm;A615,15955
    type B = UInt<UInt<UTerm, B1>, B1>;B616,15975
    type U0 = UTerm;U0617,16015
    type U0MinU3 = <<A as Min<B>>::Output as Same<U0>>::Output;U0MinU3620,16072
fn test_0_Max_3() {test_0_Max_3626,16249
    type A = UTerm;A627,16269
    type B = UInt<UInt<UTerm, B1>, B1>;B628,16289
    type U3 = UInt<UInt<UTerm, B1>, B1>;U3629,16329
    type U0MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;U0MaxU3632,16406
fn test_0_Gcd_3() {test_0_Gcd_3638,16583
    type A = UTerm;A639,16603
    type B = UInt<UInt<UTerm, B1>, B1>;B640,16623
    type U3 = UInt<UInt<UTerm, B1>, B1>;U3641,16663
    type U0GcdU3 = <<A as Gcd<B>>::Output as Same<U3>>::Output;U0GcdU3644,16740
fn test_0_Div_3() {test_0_Div_3650,16917
    type A = UTerm;A651,16937
    type B = UInt<UInt<UTerm, B1>, B1>;B652,16957
    type U0 = UTerm;U0653,16997
    type U0DivU3 = <<A as Div<B>>::Output as Same<U0>>::Output;U0DivU3656,17054
fn test_0_Rem_3() {test_0_Rem_3662,17231
    type A = UTerm;A663,17251
    type B = UInt<UInt<UTerm, B1>, B1>;B664,17271
    type U0 = UTerm;U0665,17311
    type U0RemU3 = <<A as Rem<B>>::Output as Same<U0>>::Output;U0RemU3668,17368
fn test_0_PartialDiv_3() {test_0_PartialDiv_3674,17545
    type A = UTerm;A675,17572
    type B = UInt<UInt<UTerm, B1>, B1>;B676,17592
    type U0 = UTerm;U0677,17632
    type U0PartialDivU3 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;U0PartialDivU3680,17689
fn test_0_Cmp_3() {test_0_Cmp_3686,17887
    type A = UTerm;A687,17907
    type B = UInt<UInt<UTerm, B1>, B1>;B688,17927
    type U0CmpU3 = <A as Cmp<B>>::Output;U0CmpU3691,18003
fn test_0_BitAnd_4() {test_0_BitAnd_4696,18145
    type A = UTerm;A697,18168
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B698,18188
    type U0 = UTerm;U0699,18238
    type U0BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U0BitAndU4702,18295
fn test_0_BitOr_4() {test_0_BitOr_4708,18481
    type A = UTerm;A709,18503
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B710,18523
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U4711,18573
    type U0BitOrU4 = <<A as BitOr<B>>::Output as Same<U4>>::Output;U0BitOrU4714,18660
fn test_0_BitXor_4() {test_0_BitXor_4720,18843
    type A = UTerm;A721,18866
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B722,18886
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U4723,18936
    type U0BitXorU4 = <<A as BitXor<B>>::Output as Same<U4>>::Output;U0BitXorU4726,19023
fn test_0_Shl_4() {test_0_Shl_4732,19209
    type A = UTerm;A733,19229
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B734,19249
    type U0 = UTerm;U0735,19299
    type U0ShlU4 = <<A as Shl<B>>::Output as Same<U0>>::Output;U0ShlU4738,19356
fn test_0_Shr_4() {test_0_Shr_4744,19533
    type A = UTerm;A745,19553
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B746,19573
    type U0 = UTerm;U0747,19623
    type U0ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;U0ShrU4750,19680
fn test_0_Add_4() {test_0_Add_4756,19857
    type A = UTerm;A757,19877
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B758,19897
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U4759,19947
    type U0AddU4 = <<A as Add<B>>::Output as Same<U4>>::Output;U0AddU4762,20034
fn test_0_Mul_4() {test_0_Mul_4768,20211
    type A = UTerm;A769,20231
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B770,20251
    type U0 = UTerm;U0771,20301
    type U0MulU4 = <<A as Mul<B>>::Output as Same<U0>>::Output;U0MulU4774,20358
fn test_0_Pow_4() {test_0_Pow_4780,20535
    type A = UTerm;A781,20555
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B782,20575
    type U0 = UTerm;U0783,20625
    type U0PowU4 = <<A as Pow<B>>::Output as Same<U0>>::Output;U0PowU4786,20682
fn test_0_Min_4() {test_0_Min_4792,20859
    type A = UTerm;A793,20879
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B794,20899
    type U0 = UTerm;U0795,20949
    type U0MinU4 = <<A as Min<B>>::Output as Same<U0>>::Output;U0MinU4798,21006
fn test_0_Max_4() {test_0_Max_4804,21183
    type A = UTerm;A805,21203
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B806,21223
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U4807,21273
    type U0MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;U0MaxU4810,21360
fn test_0_Gcd_4() {test_0_Gcd_4816,21537
    type A = UTerm;A817,21557
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B818,21577
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U4819,21627
    type U0GcdU4 = <<A as Gcd<B>>::Output as Same<U4>>::Output;U0GcdU4822,21714
fn test_0_Div_4() {test_0_Div_4828,21891
    type A = UTerm;A829,21911
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B830,21931
    type U0 = UTerm;U0831,21981
    type U0DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;U0DivU4834,22038
fn test_0_Rem_4() {test_0_Rem_4840,22215
    type A = UTerm;A841,22235
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B842,22255
    type U0 = UTerm;U0843,22305
    type U0RemU4 = <<A as Rem<B>>::Output as Same<U0>>::Output;U0RemU4846,22362
fn test_0_PartialDiv_4() {test_0_PartialDiv_4852,22539
    type A = UTerm;A853,22566
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B854,22586
    type U0 = UTerm;U0855,22636
    type U0PartialDivU4 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;U0PartialDivU4858,22693
fn test_0_Cmp_4() {test_0_Cmp_4864,22891
    type A = UTerm;A865,22911
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B866,22931
    type U0CmpU4 = <A as Cmp<B>>::Output;U0CmpU4869,23017
fn test_0_BitAnd_5() {test_0_BitAnd_5874,23159
    type A = UTerm;A875,23182
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B876,23202
    type U0 = UTerm;U0877,23252
    type U0BitAndU5 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U0BitAndU5880,23309
fn test_0_BitOr_5() {test_0_BitOr_5886,23495
    type A = UTerm;A887,23517
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B888,23537
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U5889,23587
    type U0BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U0BitOrU5892,23674
fn test_0_BitXor_5() {test_0_BitXor_5898,23857
    type A = UTerm;A899,23880
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B900,23900
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U5901,23950
    type U0BitXorU5 = <<A as BitXor<B>>::Output as Same<U5>>::Output;U0BitXorU5904,24037
fn test_0_Shl_5() {test_0_Shl_5910,24223
    type A = UTerm;A911,24243
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B912,24263
    type U0 = UTerm;U0913,24313
    type U0ShlU5 = <<A as Shl<B>>::Output as Same<U0>>::Output;U0ShlU5916,24370
fn test_0_Shr_5() {test_0_Shr_5922,24547
    type A = UTerm;A923,24567
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B924,24587
    type U0 = UTerm;U0925,24637
    type U0ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;U0ShrU5928,24694
fn test_0_Add_5() {test_0_Add_5934,24871
    type A = UTerm;A935,24891
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B936,24911
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U5937,24961
    type U0AddU5 = <<A as Add<B>>::Output as Same<U5>>::Output;U0AddU5940,25048
fn test_0_Mul_5() {test_0_Mul_5946,25225
    type A = UTerm;A947,25245
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B948,25265
    type U0 = UTerm;U0949,25315
    type U0MulU5 = <<A as Mul<B>>::Output as Same<U0>>::Output;U0MulU5952,25372
fn test_0_Pow_5() {test_0_Pow_5958,25549
    type A = UTerm;A959,25569
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B960,25589
    type U0 = UTerm;U0961,25639
    type U0PowU5 = <<A as Pow<B>>::Output as Same<U0>>::Output;U0PowU5964,25696
fn test_0_Min_5() {test_0_Min_5970,25873
    type A = UTerm;A971,25893
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B972,25913
    type U0 = UTerm;U0973,25963
    type U0MinU5 = <<A as Min<B>>::Output as Same<U0>>::Output;U0MinU5976,26020
fn test_0_Max_5() {test_0_Max_5982,26197
    type A = UTerm;A983,26217
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B984,26237
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U5985,26287
    type U0MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;U0MaxU5988,26374
fn test_0_Gcd_5() {test_0_Gcd_5994,26551
    type A = UTerm;A995,26571
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B996,26591
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U5997,26641
    type U0GcdU5 = <<A as Gcd<B>>::Output as Same<U5>>::Output;U0GcdU51000,26728
fn test_0_Div_5() {test_0_Div_51006,26905
    type A = UTerm;A1007,26925
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1008,26945
    type U0 = UTerm;U01009,26995
    type U0DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;U0DivU51012,27052
fn test_0_Rem_5() {test_0_Rem_51018,27229
    type A = UTerm;A1019,27249
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1020,27269
    type U0 = UTerm;U01021,27319
    type U0RemU5 = <<A as Rem<B>>::Output as Same<U0>>::Output;U0RemU51024,27376
fn test_0_PartialDiv_5() {test_0_PartialDiv_51030,27553
    type A = UTerm;A1031,27580
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1032,27600
    type U0 = UTerm;U01033,27650
    type U0PartialDivU5 = <<A as PartialDiv<B>>::Output as Same<U0>>::Output;U0PartialDivU51036,27707
fn test_0_Cmp_5() {test_0_Cmp_51042,27905
    type A = UTerm;A1043,27925
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1044,27945
    type U0CmpU5 = <A as Cmp<B>>::Output;U0CmpU51047,28031
fn test_1_BitAnd_0() {test_1_BitAnd_01052,28173
    type A = UInt<UTerm, B1>;A1053,28196
    type B = UTerm;B1054,28226
    type U0 = UTerm;U01055,28246
    type U1BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U1BitAndU01058,28303
fn test_1_BitOr_0() {test_1_BitOr_01064,28489
    type A = UInt<UTerm, B1>;A1065,28511
    type B = UTerm;B1066,28541
    type U1 = UInt<UTerm, B1>;U11067,28561
    type U1BitOrU0 = <<A as BitOr<B>>::Output as Same<U1>>::Output;U1BitOrU01070,28628
fn test_1_BitXor_0() {test_1_BitXor_01076,28811
    type A = UInt<UTerm, B1>;A1077,28834
    type B = UTerm;B1078,28864
    type U1 = UInt<UTerm, B1>;U11079,28884
    type U1BitXorU0 = <<A as BitXor<B>>::Output as Same<U1>>::Output;U1BitXorU01082,28951
fn test_1_Shl_0() {test_1_Shl_01088,29137
    type A = UInt<UTerm, B1>;A1089,29157
    type B = UTerm;B1090,29187
    type U1 = UInt<UTerm, B1>;U11091,29207
    type U1ShlU0 = <<A as Shl<B>>::Output as Same<U1>>::Output;U1ShlU01094,29274
fn test_1_Shr_0() {test_1_Shr_01100,29451
    type A = UInt<UTerm, B1>;A1101,29471
    type B = UTerm;B1102,29501
    type U1 = UInt<UTerm, B1>;U11103,29521
    type U1ShrU0 = <<A as Shr<B>>::Output as Same<U1>>::Output;U1ShrU01106,29588
fn test_1_Add_0() {test_1_Add_01112,29765
    type A = UInt<UTerm, B1>;A1113,29785
    type B = UTerm;B1114,29815
    type U1 = UInt<UTerm, B1>;U11115,29835
    type U1AddU0 = <<A as Add<B>>::Output as Same<U1>>::Output;U1AddU01118,29902
fn test_1_Mul_0() {test_1_Mul_01124,30079
    type A = UInt<UTerm, B1>;A1125,30099
    type B = UTerm;B1126,30129
    type U0 = UTerm;U01127,30149
    type U1MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;U1MulU01130,30206
fn test_1_Pow_0() {test_1_Pow_01136,30383
    type A = UInt<UTerm, B1>;A1137,30403
    type B = UTerm;B1138,30433
    type U1 = UInt<UTerm, B1>;U11139,30453
    type U1PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;U1PowU01142,30520
fn test_1_Min_0() {test_1_Min_01148,30697
    type A = UInt<UTerm, B1>;A1149,30717
    type B = UTerm;B1150,30747
    type U0 = UTerm;U01151,30767
    type U1MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;U1MinU01154,30824
fn test_1_Max_0() {test_1_Max_01160,31001
    type A = UInt<UTerm, B1>;A1161,31021
    type B = UTerm;B1162,31051
    type U1 = UInt<UTerm, B1>;U11163,31071
    type U1MaxU0 = <<A as Max<B>>::Output as Same<U1>>::Output;U1MaxU01166,31138
fn test_1_Gcd_0() {test_1_Gcd_01172,31315
    type A = UInt<UTerm, B1>;A1173,31335
    type B = UTerm;B1174,31365
    type U1 = UInt<UTerm, B1>;U11175,31385
    type U1GcdU0 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U1GcdU01178,31452
fn test_1_Sub_0() {test_1_Sub_01184,31629
    type A = UInt<UTerm, B1>;A1185,31649
    type B = UTerm;B1186,31679
    type U1 = UInt<UTerm, B1>;U11187,31699
    type U1SubU0 = <<A as Sub<B>>::Output as Same<U1>>::Output;U1SubU01190,31766
fn test_1_Cmp_0() {test_1_Cmp_01196,31943
    type A = UInt<UTerm, B1>;A1197,31963
    type B = UTerm;B1198,31993
    type U1CmpU0 = <A as Cmp<B>>::Output;U1CmpU01201,32049
fn test_1_BitAnd_1() {test_1_BitAnd_11206,32194
    type A = UInt<UTerm, B1>;A1207,32217
    type B = UInt<UTerm, B1>;B1208,32247
    type U1 = UInt<UTerm, B1>;U11209,32277
    type U1BitAndU1 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U1BitAndU11212,32344
fn test_1_BitOr_1() {test_1_BitOr_11218,32530
    type A = UInt<UTerm, B1>;A1219,32552
    type B = UInt<UTerm, B1>;B1220,32582
    type U1 = UInt<UTerm, B1>;U11221,32612
    type U1BitOrU1 = <<A as BitOr<B>>::Output as Same<U1>>::Output;U1BitOrU11224,32679
fn test_1_BitXor_1() {test_1_BitXor_11230,32862
    type A = UInt<UTerm, B1>;A1231,32885
    type B = UInt<UTerm, B1>;B1232,32915
    type U0 = UTerm;U01233,32945
    type U1BitXorU1 = <<A as BitXor<B>>::Output as Same<U0>>::Output;U1BitXorU11236,33002
fn test_1_Shl_1() {test_1_Shl_11242,33188
    type A = UInt<UTerm, B1>;A1243,33208
    type B = UInt<UTerm, B1>;B1244,33238
    type U2 = UInt<UInt<UTerm, B1>, B0>;U21245,33268
    type U1ShlU1 = <<A as Shl<B>>::Output as Same<U2>>::Output;U1ShlU11248,33345
fn test_1_Shr_1() {test_1_Shr_11254,33522
    type A = UInt<UTerm, B1>;A1255,33542
    type B = UInt<UTerm, B1>;B1256,33572
    type U0 = UTerm;U01257,33602
    type U1ShrU1 = <<A as Shr<B>>::Output as Same<U0>>::Output;U1ShrU11260,33659
fn test_1_Add_1() {test_1_Add_11266,33836
    type A = UInt<UTerm, B1>;A1267,33856
    type B = UInt<UTerm, B1>;B1268,33886
    type U2 = UInt<UInt<UTerm, B1>, B0>;U21269,33916
    type U1AddU1 = <<A as Add<B>>::Output as Same<U2>>::Output;U1AddU11272,33993
fn test_1_Mul_1() {test_1_Mul_11278,34170
    type A = UInt<UTerm, B1>;A1279,34190
    type B = UInt<UTerm, B1>;B1280,34220
    type U1 = UInt<UTerm, B1>;U11281,34250
    type U1MulU1 = <<A as Mul<B>>::Output as Same<U1>>::Output;U1MulU11284,34317
fn test_1_Pow_1() {test_1_Pow_11290,34494
    type A = UInt<UTerm, B1>;A1291,34514
    type B = UInt<UTerm, B1>;B1292,34544
    type U1 = UInt<UTerm, B1>;U11293,34574
    type U1PowU1 = <<A as Pow<B>>::Output as Same<U1>>::Output;U1PowU11296,34641
fn test_1_Min_1() {test_1_Min_11302,34818
    type A = UInt<UTerm, B1>;A1303,34838
    type B = UInt<UTerm, B1>;B1304,34868
    type U1 = UInt<UTerm, B1>;U11305,34898
    type U1MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;U1MinU11308,34965
fn test_1_Max_1() {test_1_Max_11314,35142
    type A = UInt<UTerm, B1>;A1315,35162
    type B = UInt<UTerm, B1>;B1316,35192
    type U1 = UInt<UTerm, B1>;U11317,35222
    type U1MaxU1 = <<A as Max<B>>::Output as Same<U1>>::Output;U1MaxU11320,35289
fn test_1_Gcd_1() {test_1_Gcd_11326,35466
    type A = UInt<UTerm, B1>;A1327,35486
    type B = UInt<UTerm, B1>;B1328,35516
    type U1 = UInt<UTerm, B1>;U11329,35546
    type U1GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U1GcdU11332,35613
fn test_1_Sub_1() {test_1_Sub_11338,35790
    type A = UInt<UTerm, B1>;A1339,35810
    type B = UInt<UTerm, B1>;B1340,35840
    type U0 = UTerm;U01341,35870
    type U1SubU1 = <<A as Sub<B>>::Output as Same<U0>>::Output;U1SubU11344,35927
fn test_1_Div_1() {test_1_Div_11350,36104
    type A = UInt<UTerm, B1>;A1351,36124
    type B = UInt<UTerm, B1>;B1352,36154
    type U1 = UInt<UTerm, B1>;U11353,36184
    type U1DivU1 = <<A as Div<B>>::Output as Same<U1>>::Output;U1DivU11356,36251
fn test_1_Rem_1() {test_1_Rem_11362,36428
    type A = UInt<UTerm, B1>;A1363,36448
    type B = UInt<UTerm, B1>;B1364,36478
    type U0 = UTerm;U01365,36508
    type U1RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;U1RemU11368,36565
fn test_1_PartialDiv_1() {test_1_PartialDiv_11374,36742
    type A = UInt<UTerm, B1>;A1375,36769
    type B = UInt<UTerm, B1>;B1376,36799
    type U1 = UInt<UTerm, B1>;U11377,36829
    type U1PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;U1PartialDivU11380,36896
fn test_1_Cmp_1() {test_1_Cmp_11386,37094
    type A = UInt<UTerm, B1>;A1387,37114
    type B = UInt<UTerm, B1>;B1388,37144
    type U1CmpU1 = <A as Cmp<B>>::Output;U1CmpU11391,37210
fn test_1_BitAnd_2() {test_1_BitAnd_21396,37353
    type A = UInt<UTerm, B1>;A1397,37376
    type B = UInt<UInt<UTerm, B1>, B0>;B1398,37406
    type U0 = UTerm;U01399,37446
    type U1BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U1BitAndU21402,37503
fn test_1_BitOr_2() {test_1_BitOr_21408,37689
    type A = UInt<UTerm, B1>;A1409,37711
    type B = UInt<UInt<UTerm, B1>, B0>;B1410,37741
    type U3 = UInt<UInt<UTerm, B1>, B1>;U31411,37781
    type U1BitOrU2 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U1BitOrU21414,37858
fn test_1_BitXor_2() {test_1_BitXor_21420,38041
    type A = UInt<UTerm, B1>;A1421,38064
    type B = UInt<UInt<UTerm, B1>, B0>;B1422,38094
    type U3 = UInt<UInt<UTerm, B1>, B1>;U31423,38134
    type U1BitXorU2 = <<A as BitXor<B>>::Output as Same<U3>>::Output;U1BitXorU21426,38211
fn test_1_Shl_2() {test_1_Shl_21432,38397
    type A = UInt<UTerm, B1>;A1433,38417
    type B = UInt<UInt<UTerm, B1>, B0>;B1434,38447
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U41435,38487
    type U1ShlU2 = <<A as Shl<B>>::Output as Same<U4>>::Output;U1ShlU21438,38574
fn test_1_Shr_2() {test_1_Shr_21444,38751
    type A = UInt<UTerm, B1>;A1445,38771
    type B = UInt<UInt<UTerm, B1>, B0>;B1446,38801
    type U0 = UTerm;U01447,38841
    type U1ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;U1ShrU21450,38898
fn test_1_Add_2() {test_1_Add_21456,39075
    type A = UInt<UTerm, B1>;A1457,39095
    type B = UInt<UInt<UTerm, B1>, B0>;B1458,39125
    type U3 = UInt<UInt<UTerm, B1>, B1>;U31459,39165
    type U1AddU2 = <<A as Add<B>>::Output as Same<U3>>::Output;U1AddU21462,39242
fn test_1_Mul_2() {test_1_Mul_21468,39419
    type A = UInt<UTerm, B1>;A1469,39439
    type B = UInt<UInt<UTerm, B1>, B0>;B1470,39469
    type U2 = UInt<UInt<UTerm, B1>, B0>;U21471,39509
    type U1MulU2 = <<A as Mul<B>>::Output as Same<U2>>::Output;U1MulU21474,39586
fn test_1_Pow_2() {test_1_Pow_21480,39763
    type A = UInt<UTerm, B1>;A1481,39783
    type B = UInt<UInt<UTerm, B1>, B0>;B1482,39813
    type U1 = UInt<UTerm, B1>;U11483,39853
    type U1PowU2 = <<A as Pow<B>>::Output as Same<U1>>::Output;U1PowU21486,39920
fn test_1_Min_2() {test_1_Min_21492,40097
    type A = UInt<UTerm, B1>;A1493,40117
    type B = UInt<UInt<UTerm, B1>, B0>;B1494,40147
    type U1 = UInt<UTerm, B1>;U11495,40187
    type U1MinU2 = <<A as Min<B>>::Output as Same<U1>>::Output;U1MinU21498,40254
fn test_1_Max_2() {test_1_Max_21504,40431
    type A = UInt<UTerm, B1>;A1505,40451
    type B = UInt<UInt<UTerm, B1>, B0>;B1506,40481
    type U2 = UInt<UInt<UTerm, B1>, B0>;U21507,40521
    type U1MaxU2 = <<A as Max<B>>::Output as Same<U2>>::Output;U1MaxU21510,40598
fn test_1_Gcd_2() {test_1_Gcd_21516,40775
    type A = UInt<UTerm, B1>;A1517,40795
    type B = UInt<UInt<UTerm, B1>, B0>;B1518,40825
    type U1 = UInt<UTerm, B1>;U11519,40865
    type U1GcdU2 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U1GcdU21522,40932
fn test_1_Div_2() {test_1_Div_21528,41109
    type A = UInt<UTerm, B1>;A1529,41129
    type B = UInt<UInt<UTerm, B1>, B0>;B1530,41159
    type U0 = UTerm;U01531,41199
    type U1DivU2 = <<A as Div<B>>::Output as Same<U0>>::Output;U1DivU21534,41256
fn test_1_Rem_2() {test_1_Rem_21540,41433
    type A = UInt<UTerm, B1>;A1541,41453
    type B = UInt<UInt<UTerm, B1>, B0>;B1542,41483
    type U1 = UInt<UTerm, B1>;U11543,41523
    type U1RemU2 = <<A as Rem<B>>::Output as Same<U1>>::Output;U1RemU21546,41590
fn test_1_Cmp_2() {test_1_Cmp_21552,41767
    type A = UInt<UTerm, B1>;A1553,41787
    type B = UInt<UInt<UTerm, B1>, B0>;B1554,41817
    type U1CmpU2 = <A as Cmp<B>>::Output;U1CmpU21557,41893
fn test_1_BitAnd_3() {test_1_BitAnd_31562,42035
    type A = UInt<UTerm, B1>;A1563,42058
    type B = UInt<UInt<UTerm, B1>, B1>;B1564,42088
    type U1 = UInt<UTerm, B1>;U11565,42128
    type U1BitAndU3 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U1BitAndU31568,42195
fn test_1_BitOr_3() {test_1_BitOr_31574,42381
    type A = UInt<UTerm, B1>;A1575,42403
    type B = UInt<UInt<UTerm, B1>, B1>;B1576,42433
    type U3 = UInt<UInt<UTerm, B1>, B1>;U31577,42473
    type U1BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U1BitOrU31580,42550
fn test_1_BitXor_3() {test_1_BitXor_31586,42733
    type A = UInt<UTerm, B1>;A1587,42756
    type B = UInt<UInt<UTerm, B1>, B1>;B1588,42786
    type U2 = UInt<UInt<UTerm, B1>, B0>;U21589,42826
    type U1BitXorU3 = <<A as BitXor<B>>::Output as Same<U2>>::Output;U1BitXorU31592,42903
fn test_1_Shl_3() {test_1_Shl_31598,43089
    type A = UInt<UTerm, B1>;A1599,43109
    type B = UInt<UInt<UTerm, B1>, B1>;B1600,43139
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U81601,43179
    type U1ShlU3 = <<A as Shl<B>>::Output as Same<U8>>::Output;U1ShlU31604,43276
fn test_1_Shr_3() {test_1_Shr_31610,43453
    type A = UInt<UTerm, B1>;A1611,43473
    type B = UInt<UInt<UTerm, B1>, B1>;B1612,43503
    type U0 = UTerm;U01613,43543
    type U1ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;U1ShrU31616,43600
fn test_1_Add_3() {test_1_Add_31622,43777
    type A = UInt<UTerm, B1>;A1623,43797
    type B = UInt<UInt<UTerm, B1>, B1>;B1624,43827
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U41625,43867
    type U1AddU3 = <<A as Add<B>>::Output as Same<U4>>::Output;U1AddU31628,43954
fn test_1_Mul_3() {test_1_Mul_31634,44131
    type A = UInt<UTerm, B1>;A1635,44151
    type B = UInt<UInt<UTerm, B1>, B1>;B1636,44181
    type U3 = UInt<UInt<UTerm, B1>, B1>;U31637,44221
    type U1MulU3 = <<A as Mul<B>>::Output as Same<U3>>::Output;U1MulU31640,44298
fn test_1_Pow_3() {test_1_Pow_31646,44475
    type A = UInt<UTerm, B1>;A1647,44495
    type B = UInt<UInt<UTerm, B1>, B1>;B1648,44525
    type U1 = UInt<UTerm, B1>;U11649,44565
    type U1PowU3 = <<A as Pow<B>>::Output as Same<U1>>::Output;U1PowU31652,44632
fn test_1_Min_3() {test_1_Min_31658,44809
    type A = UInt<UTerm, B1>;A1659,44829
    type B = UInt<UInt<UTerm, B1>, B1>;B1660,44859
    type U1 = UInt<UTerm, B1>;U11661,44899
    type U1MinU3 = <<A as Min<B>>::Output as Same<U1>>::Output;U1MinU31664,44966
fn test_1_Max_3() {test_1_Max_31670,45143
    type A = UInt<UTerm, B1>;A1671,45163
    type B = UInt<UInt<UTerm, B1>, B1>;B1672,45193
    type U3 = UInt<UInt<UTerm, B1>, B1>;U31673,45233
    type U1MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;U1MaxU31676,45310
fn test_1_Gcd_3() {test_1_Gcd_31682,45487
    type A = UInt<UTerm, B1>;A1683,45507
    type B = UInt<UInt<UTerm, B1>, B1>;B1684,45537
    type U1 = UInt<UTerm, B1>;U11685,45577
    type U1GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U1GcdU31688,45644
fn test_1_Div_3() {test_1_Div_31694,45821
    type A = UInt<UTerm, B1>;A1695,45841
    type B = UInt<UInt<UTerm, B1>, B1>;B1696,45871
    type U0 = UTerm;U01697,45911
    type U1DivU3 = <<A as Div<B>>::Output as Same<U0>>::Output;U1DivU31700,45968
fn test_1_Rem_3() {test_1_Rem_31706,46145
    type A = UInt<UTerm, B1>;A1707,46165
    type B = UInt<UInt<UTerm, B1>, B1>;B1708,46195
    type U1 = UInt<UTerm, B1>;U11709,46235
    type U1RemU3 = <<A as Rem<B>>::Output as Same<U1>>::Output;U1RemU31712,46302
fn test_1_Cmp_3() {test_1_Cmp_31718,46479
    type A = UInt<UTerm, B1>;A1719,46499
    type B = UInt<UInt<UTerm, B1>, B1>;B1720,46529
    type U1CmpU3 = <A as Cmp<B>>::Output;U1CmpU31723,46605
fn test_1_BitAnd_4() {test_1_BitAnd_41728,46747
    type A = UInt<UTerm, B1>;A1729,46770
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1730,46800
    type U0 = UTerm;U01731,46850
    type U1BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U1BitAndU41734,46907
fn test_1_BitOr_4() {test_1_BitOr_41740,47093
    type A = UInt<UTerm, B1>;A1741,47115
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1742,47145
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U51743,47195
    type U1BitOrU4 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U1BitOrU41746,47282
fn test_1_BitXor_4() {test_1_BitXor_41752,47465
    type A = UInt<UTerm, B1>;A1753,47488
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1754,47518
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U51755,47568
    type U1BitXorU4 = <<A as BitXor<B>>::Output as Same<U5>>::Output;U1BitXorU41758,47655
fn test_1_Shl_4() {test_1_Shl_41764,47841
    type A = UInt<UTerm, B1>;A1765,47861
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1766,47891
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;U161767,47941
    type U1ShlU4 = <<A as Shl<B>>::Output as Same<U16>>::Output;U1ShlU41770,48049
fn test_1_Shr_4() {test_1_Shr_41776,48228
    type A = UInt<UTerm, B1>;A1777,48248
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1778,48278
    type U0 = UTerm;U01779,48328
    type U1ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;U1ShrU41782,48385
fn test_1_Add_4() {test_1_Add_41788,48562
    type A = UInt<UTerm, B1>;A1789,48582
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1790,48612
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U51791,48662
    type U1AddU4 = <<A as Add<B>>::Output as Same<U5>>::Output;U1AddU41794,48749
fn test_1_Mul_4() {test_1_Mul_41800,48926
    type A = UInt<UTerm, B1>;A1801,48946
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1802,48976
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U41803,49026
    type U1MulU4 = <<A as Mul<B>>::Output as Same<U4>>::Output;U1MulU41806,49113
fn test_1_Pow_4() {test_1_Pow_41812,49290
    type A = UInt<UTerm, B1>;A1813,49310
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1814,49340
    type U1 = UInt<UTerm, B1>;U11815,49390
    type U1PowU4 = <<A as Pow<B>>::Output as Same<U1>>::Output;U1PowU41818,49457
fn test_1_Min_4() {test_1_Min_41824,49634
    type A = UInt<UTerm, B1>;A1825,49654
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1826,49684
    type U1 = UInt<UTerm, B1>;U11827,49734
    type U1MinU4 = <<A as Min<B>>::Output as Same<U1>>::Output;U1MinU41830,49801
fn test_1_Max_4() {test_1_Max_41836,49978
    type A = UInt<UTerm, B1>;A1837,49998
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1838,50028
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U41839,50078
    type U1MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;U1MaxU41842,50165
fn test_1_Gcd_4() {test_1_Gcd_41848,50342
    type A = UInt<UTerm, B1>;A1849,50362
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1850,50392
    type U1 = UInt<UTerm, B1>;U11851,50442
    type U1GcdU4 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U1GcdU41854,50509
fn test_1_Div_4() {test_1_Div_41860,50686
    type A = UInt<UTerm, B1>;A1861,50706
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1862,50736
    type U0 = UTerm;U01863,50786
    type U1DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;U1DivU41866,50843
fn test_1_Rem_4() {test_1_Rem_41872,51020
    type A = UInt<UTerm, B1>;A1873,51040
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1874,51070
    type U1 = UInt<UTerm, B1>;U11875,51120
    type U1RemU4 = <<A as Rem<B>>::Output as Same<U1>>::Output;U1RemU41878,51187
fn test_1_Cmp_4() {test_1_Cmp_41884,51364
    type A = UInt<UTerm, B1>;A1885,51384
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B1886,51414
    type U1CmpU4 = <A as Cmp<B>>::Output;U1CmpU41889,51500
fn test_1_BitAnd_5() {test_1_BitAnd_51894,51642
    type A = UInt<UTerm, B1>;A1895,51665
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1896,51695
    type U1 = UInt<UTerm, B1>;U11897,51745
    type U1BitAndU5 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U1BitAndU51900,51812
fn test_1_BitOr_5() {test_1_BitOr_51906,51998
    type A = UInt<UTerm, B1>;A1907,52020
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1908,52050
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U51909,52100
    type U1BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U1BitOrU51912,52187
fn test_1_BitXor_5() {test_1_BitXor_51918,52370
    type A = UInt<UTerm, B1>;A1919,52393
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1920,52423
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U41921,52473
    type U1BitXorU5 = <<A as BitXor<B>>::Output as Same<U4>>::Output;U1BitXorU51924,52560
fn test_1_Shl_5() {test_1_Shl_51930,52746
    type A = UInt<UTerm, B1>;A1931,52766
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1932,52796
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;U321933,52846
    type U1ShlU5 = <<A as Shl<B>>::Output as Same<U32>>::Output;U1ShlU51936,52964
fn test_1_Shr_5() {test_1_Shr_51942,53143
    type A = UInt<UTerm, B1>;A1943,53163
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1944,53193
    type U0 = UTerm;U01945,53243
    type U1ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;U1ShrU51948,53300
fn test_1_Add_5() {test_1_Add_51954,53477
    type A = UInt<UTerm, B1>;A1955,53497
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1956,53527
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U61957,53577
    type U1AddU5 = <<A as Add<B>>::Output as Same<U6>>::Output;U1AddU51960,53664
fn test_1_Mul_5() {test_1_Mul_51966,53841
    type A = UInt<UTerm, B1>;A1967,53861
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1968,53891
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U51969,53941
    type U1MulU5 = <<A as Mul<B>>::Output as Same<U5>>::Output;U1MulU51972,54028
fn test_1_Pow_5() {test_1_Pow_51978,54205
    type A = UInt<UTerm, B1>;A1979,54225
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1980,54255
    type U1 = UInt<UTerm, B1>;U11981,54305
    type U1PowU5 = <<A as Pow<B>>::Output as Same<U1>>::Output;U1PowU51984,54372
fn test_1_Min_5() {test_1_Min_51990,54549
    type A = UInt<UTerm, B1>;A1991,54569
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B1992,54599
    type U1 = UInt<UTerm, B1>;U11993,54649
    type U1MinU5 = <<A as Min<B>>::Output as Same<U1>>::Output;U1MinU51996,54716
fn test_1_Max_5() {test_1_Max_52002,54893
    type A = UInt<UTerm, B1>;A2003,54913
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2004,54943
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U52005,54993
    type U1MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;U1MaxU52008,55080
fn test_1_Gcd_5() {test_1_Gcd_52014,55257
    type A = UInt<UTerm, B1>;A2015,55277
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2016,55307
    type U1 = UInt<UTerm, B1>;U12017,55357
    type U1GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U1GcdU52020,55424
fn test_1_Div_5() {test_1_Div_52026,55601
    type A = UInt<UTerm, B1>;A2027,55621
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2028,55651
    type U0 = UTerm;U02029,55701
    type U1DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;U1DivU52032,55758
fn test_1_Rem_5() {test_1_Rem_52038,55935
    type A = UInt<UTerm, B1>;A2039,55955
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2040,55985
    type U1 = UInt<UTerm, B1>;U12041,56035
    type U1RemU5 = <<A as Rem<B>>::Output as Same<U1>>::Output;U1RemU52044,56102
fn test_1_Cmp_5() {test_1_Cmp_52050,56279
    type A = UInt<UTerm, B1>;A2051,56299
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2052,56329
    type U1CmpU5 = <A as Cmp<B>>::Output;U1CmpU52055,56415
fn test_2_BitAnd_0() {test_2_BitAnd_02060,56557
    type A = UInt<UInt<UTerm, B1>, B0>;A2061,56580
    type B = UTerm;B2062,56620
    type U0 = UTerm;U02063,56640
    type U2BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U2BitAndU02066,56697
fn test_2_BitOr_0() {test_2_BitOr_02072,56883
    type A = UInt<UInt<UTerm, B1>, B0>;A2073,56905
    type B = UTerm;B2074,56945
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22075,56965
    type U2BitOrU0 = <<A as BitOr<B>>::Output as Same<U2>>::Output;U2BitOrU02078,57042
fn test_2_BitXor_0() {test_2_BitXor_02084,57225
    type A = UInt<UInt<UTerm, B1>, B0>;A2085,57248
    type B = UTerm;B2086,57288
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22087,57308
    type U2BitXorU0 = <<A as BitXor<B>>::Output as Same<U2>>::Output;U2BitXorU02090,57385
fn test_2_Shl_0() {test_2_Shl_02096,57571
    type A = UInt<UInt<UTerm, B1>, B0>;A2097,57591
    type B = UTerm;B2098,57631
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22099,57651
    type U2ShlU0 = <<A as Shl<B>>::Output as Same<U2>>::Output;U2ShlU02102,57728
fn test_2_Shr_0() {test_2_Shr_02108,57905
    type A = UInt<UInt<UTerm, B1>, B0>;A2109,57925
    type B = UTerm;B2110,57965
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22111,57985
    type U2ShrU0 = <<A as Shr<B>>::Output as Same<U2>>::Output;U2ShrU02114,58062
fn test_2_Add_0() {test_2_Add_02120,58239
    type A = UInt<UInt<UTerm, B1>, B0>;A2121,58259
    type B = UTerm;B2122,58299
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22123,58319
    type U2AddU0 = <<A as Add<B>>::Output as Same<U2>>::Output;U2AddU02126,58396
fn test_2_Mul_0() {test_2_Mul_02132,58573
    type A = UInt<UInt<UTerm, B1>, B0>;A2133,58593
    type B = UTerm;B2134,58633
    type U0 = UTerm;U02135,58653
    type U2MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;U2MulU02138,58710
fn test_2_Pow_0() {test_2_Pow_02144,58887
    type A = UInt<UInt<UTerm, B1>, B0>;A2145,58907
    type B = UTerm;B2146,58947
    type U1 = UInt<UTerm, B1>;U12147,58967
    type U2PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;U2PowU02150,59034
fn test_2_Min_0() {test_2_Min_02156,59211
    type A = UInt<UInt<UTerm, B1>, B0>;A2157,59231
    type B = UTerm;B2158,59271
    type U0 = UTerm;U02159,59291
    type U2MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;U2MinU02162,59348
fn test_2_Max_0() {test_2_Max_02168,59525
    type A = UInt<UInt<UTerm, B1>, B0>;A2169,59545
    type B = UTerm;B2170,59585
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22171,59605
    type U2MaxU0 = <<A as Max<B>>::Output as Same<U2>>::Output;U2MaxU02174,59682
fn test_2_Gcd_0() {test_2_Gcd_02180,59859
    type A = UInt<UInt<UTerm, B1>, B0>;A2181,59879
    type B = UTerm;B2182,59919
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22183,59939
    type U2GcdU0 = <<A as Gcd<B>>::Output as Same<U2>>::Output;U2GcdU02186,60016
fn test_2_Sub_0() {test_2_Sub_02192,60193
    type A = UInt<UInt<UTerm, B1>, B0>;A2193,60213
    type B = UTerm;B2194,60253
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22195,60273
    type U2SubU0 = <<A as Sub<B>>::Output as Same<U2>>::Output;U2SubU02198,60350
fn test_2_Cmp_0() {test_2_Cmp_02204,60527
    type A = UInt<UInt<UTerm, B1>, B0>;A2205,60547
    type B = UTerm;B2206,60587
    type U2CmpU0 = <A as Cmp<B>>::Output;U2CmpU02209,60643
fn test_2_BitAnd_1() {test_2_BitAnd_12214,60788
    type A = UInt<UInt<UTerm, B1>, B0>;A2215,60811
    type B = UInt<UTerm, B1>;B2216,60851
    type U0 = UTerm;U02217,60881
    type U2BitAndU1 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U2BitAndU12220,60938
fn test_2_BitOr_1() {test_2_BitOr_12226,61124
    type A = UInt<UInt<UTerm, B1>, B0>;A2227,61146
    type B = UInt<UTerm, B1>;B2228,61186
    type U3 = UInt<UInt<UTerm, B1>, B1>;U32229,61216
    type U2BitOrU1 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U2BitOrU12232,61293
fn test_2_BitXor_1() {test_2_BitXor_12238,61476
    type A = UInt<UInt<UTerm, B1>, B0>;A2239,61499
    type B = UInt<UTerm, B1>;B2240,61539
    type U3 = UInt<UInt<UTerm, B1>, B1>;U32241,61569
    type U2BitXorU1 = <<A as BitXor<B>>::Output as Same<U3>>::Output;U2BitXorU12244,61646
fn test_2_Shl_1() {test_2_Shl_12250,61832
    type A = UInt<UInt<UTerm, B1>, B0>;A2251,61852
    type B = UInt<UTerm, B1>;B2252,61892
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U42253,61922
    type U2ShlU1 = <<A as Shl<B>>::Output as Same<U4>>::Output;U2ShlU12256,62009
fn test_2_Shr_1() {test_2_Shr_12262,62186
    type A = UInt<UInt<UTerm, B1>, B0>;A2263,62206
    type B = UInt<UTerm, B1>;B2264,62246
    type U1 = UInt<UTerm, B1>;U12265,62276
    type U2ShrU1 = <<A as Shr<B>>::Output as Same<U1>>::Output;U2ShrU12268,62343
fn test_2_Add_1() {test_2_Add_12274,62520
    type A = UInt<UInt<UTerm, B1>, B0>;A2275,62540
    type B = UInt<UTerm, B1>;B2276,62580
    type U3 = UInt<UInt<UTerm, B1>, B1>;U32277,62610
    type U2AddU1 = <<A as Add<B>>::Output as Same<U3>>::Output;U2AddU12280,62687
fn test_2_Mul_1() {test_2_Mul_12286,62864
    type A = UInt<UInt<UTerm, B1>, B0>;A2287,62884
    type B = UInt<UTerm, B1>;B2288,62924
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22289,62954
    type U2MulU1 = <<A as Mul<B>>::Output as Same<U2>>::Output;U2MulU12292,63031
fn test_2_Pow_1() {test_2_Pow_12298,63208
    type A = UInt<UInt<UTerm, B1>, B0>;A2299,63228
    type B = UInt<UTerm, B1>;B2300,63268
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22301,63298
    type U2PowU1 = <<A as Pow<B>>::Output as Same<U2>>::Output;U2PowU12304,63375
fn test_2_Min_1() {test_2_Min_12310,63552
    type A = UInt<UInt<UTerm, B1>, B0>;A2311,63572
    type B = UInt<UTerm, B1>;B2312,63612
    type U1 = UInt<UTerm, B1>;U12313,63642
    type U2MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;U2MinU12316,63709
fn test_2_Max_1() {test_2_Max_12322,63886
    type A = UInt<UInt<UTerm, B1>, B0>;A2323,63906
    type B = UInt<UTerm, B1>;B2324,63946
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22325,63976
    type U2MaxU1 = <<A as Max<B>>::Output as Same<U2>>::Output;U2MaxU12328,64053
fn test_2_Gcd_1() {test_2_Gcd_12334,64230
    type A = UInt<UInt<UTerm, B1>, B0>;A2335,64250
    type B = UInt<UTerm, B1>;B2336,64290
    type U1 = UInt<UTerm, B1>;U12337,64320
    type U2GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U2GcdU12340,64387
fn test_2_Sub_1() {test_2_Sub_12346,64564
    type A = UInt<UInt<UTerm, B1>, B0>;A2347,64584
    type B = UInt<UTerm, B1>;B2348,64624
    type U1 = UInt<UTerm, B1>;U12349,64654
    type U2SubU1 = <<A as Sub<B>>::Output as Same<U1>>::Output;U2SubU12352,64721
fn test_2_Div_1() {test_2_Div_12358,64898
    type A = UInt<UInt<UTerm, B1>, B0>;A2359,64918
    type B = UInt<UTerm, B1>;B2360,64958
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22361,64988
    type U2DivU1 = <<A as Div<B>>::Output as Same<U2>>::Output;U2DivU12364,65065
fn test_2_Rem_1() {test_2_Rem_12370,65242
    type A = UInt<UInt<UTerm, B1>, B0>;A2371,65262
    type B = UInt<UTerm, B1>;B2372,65302
    type U0 = UTerm;U02373,65332
    type U2RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;U2RemU12376,65389
fn test_2_PartialDiv_1() {test_2_PartialDiv_12382,65566
    type A = UInt<UInt<UTerm, B1>, B0>;A2383,65593
    type B = UInt<UTerm, B1>;B2384,65633
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22385,65663
    type U2PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U2>>::Output;U2PartialDivU12388,65740
fn test_2_Cmp_1() {test_2_Cmp_12394,65938
    type A = UInt<UInt<UTerm, B1>, B0>;A2395,65958
    type B = UInt<UTerm, B1>;B2396,65998
    type U2CmpU1 = <A as Cmp<B>>::Output;U2CmpU12399,66064
fn test_2_BitAnd_2() {test_2_BitAnd_22404,66209
    type A = UInt<UInt<UTerm, B1>, B0>;A2405,66232
    type B = UInt<UInt<UTerm, B1>, B0>;B2406,66272
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22407,66312
    type U2BitAndU2 = <<A as BitAnd<B>>::Output as Same<U2>>::Output;U2BitAndU22410,66389
fn test_2_BitOr_2() {test_2_BitOr_22416,66575
    type A = UInt<UInt<UTerm, B1>, B0>;A2417,66597
    type B = UInt<UInt<UTerm, B1>, B0>;B2418,66637
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22419,66677
    type U2BitOrU2 = <<A as BitOr<B>>::Output as Same<U2>>::Output;U2BitOrU22422,66754
fn test_2_BitXor_2() {test_2_BitXor_22428,66937
    type A = UInt<UInt<UTerm, B1>, B0>;A2429,66960
    type B = UInt<UInt<UTerm, B1>, B0>;B2430,67000
    type U0 = UTerm;U02431,67040
    type U2BitXorU2 = <<A as BitXor<B>>::Output as Same<U0>>::Output;U2BitXorU22434,67097
fn test_2_Shl_2() {test_2_Shl_22440,67283
    type A = UInt<UInt<UTerm, B1>, B0>;A2441,67303
    type B = UInt<UInt<UTerm, B1>, B0>;B2442,67343
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U82443,67383
    type U2ShlU2 = <<A as Shl<B>>::Output as Same<U8>>::Output;U2ShlU22446,67480
fn test_2_Shr_2() {test_2_Shr_22452,67657
    type A = UInt<UInt<UTerm, B1>, B0>;A2453,67677
    type B = UInt<UInt<UTerm, B1>, B0>;B2454,67717
    type U0 = UTerm;U02455,67757
    type U2ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;U2ShrU22458,67814
fn test_2_Add_2() {test_2_Add_22464,67991
    type A = UInt<UInt<UTerm, B1>, B0>;A2465,68011
    type B = UInt<UInt<UTerm, B1>, B0>;B2466,68051
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U42467,68091
    type U2AddU2 = <<A as Add<B>>::Output as Same<U4>>::Output;U2AddU22470,68178
fn test_2_Mul_2() {test_2_Mul_22476,68355
    type A = UInt<UInt<UTerm, B1>, B0>;A2477,68375
    type B = UInt<UInt<UTerm, B1>, B0>;B2478,68415
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U42479,68455
    type U2MulU2 = <<A as Mul<B>>::Output as Same<U4>>::Output;U2MulU22482,68542
fn test_2_Pow_2() {test_2_Pow_22488,68719
    type A = UInt<UInt<UTerm, B1>, B0>;A2489,68739
    type B = UInt<UInt<UTerm, B1>, B0>;B2490,68779
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U42491,68819
    type U2PowU2 = <<A as Pow<B>>::Output as Same<U4>>::Output;U2PowU22494,68906
fn test_2_Min_2() {test_2_Min_22500,69083
    type A = UInt<UInt<UTerm, B1>, B0>;A2501,69103
    type B = UInt<UInt<UTerm, B1>, B0>;B2502,69143
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22503,69183
    type U2MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;U2MinU22506,69260
fn test_2_Max_2() {test_2_Max_22512,69437
    type A = UInt<UInt<UTerm, B1>, B0>;A2513,69457
    type B = UInt<UInt<UTerm, B1>, B0>;B2514,69497
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22515,69537
    type U2MaxU2 = <<A as Max<B>>::Output as Same<U2>>::Output;U2MaxU22518,69614
fn test_2_Gcd_2() {test_2_Gcd_22524,69791
    type A = UInt<UInt<UTerm, B1>, B0>;A2525,69811
    type B = UInt<UInt<UTerm, B1>, B0>;B2526,69851
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22527,69891
    type U2GcdU2 = <<A as Gcd<B>>::Output as Same<U2>>::Output;U2GcdU22530,69968
fn test_2_Sub_2() {test_2_Sub_22536,70145
    type A = UInt<UInt<UTerm, B1>, B0>;A2537,70165
    type B = UInt<UInt<UTerm, B1>, B0>;B2538,70205
    type U0 = UTerm;U02539,70245
    type U2SubU2 = <<A as Sub<B>>::Output as Same<U0>>::Output;U2SubU22542,70302
fn test_2_Div_2() {test_2_Div_22548,70479
    type A = UInt<UInt<UTerm, B1>, B0>;A2549,70499
    type B = UInt<UInt<UTerm, B1>, B0>;B2550,70539
    type U1 = UInt<UTerm, B1>;U12551,70579
    type U2DivU2 = <<A as Div<B>>::Output as Same<U1>>::Output;U2DivU22554,70646
fn test_2_Rem_2() {test_2_Rem_22560,70823
    type A = UInt<UInt<UTerm, B1>, B0>;A2561,70843
    type B = UInt<UInt<UTerm, B1>, B0>;B2562,70883
    type U0 = UTerm;U02563,70923
    type U2RemU2 = <<A as Rem<B>>::Output as Same<U0>>::Output;U2RemU22566,70980
fn test_2_PartialDiv_2() {test_2_PartialDiv_22572,71157
    type A = UInt<UInt<UTerm, B1>, B0>;A2573,71184
    type B = UInt<UInt<UTerm, B1>, B0>;B2574,71224
    type U1 = UInt<UTerm, B1>;U12575,71264
    type U2PartialDivU2 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;U2PartialDivU22578,71331
fn test_2_Cmp_2() {test_2_Cmp_22584,71529
    type A = UInt<UInt<UTerm, B1>, B0>;A2585,71549
    type B = UInt<UInt<UTerm, B1>, B0>;B2586,71589
    type U2CmpU2 = <A as Cmp<B>>::Output;U2CmpU22589,71665
fn test_2_BitAnd_3() {test_2_BitAnd_32594,71808
    type A = UInt<UInt<UTerm, B1>, B0>;A2595,71831
    type B = UInt<UInt<UTerm, B1>, B1>;B2596,71871
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22597,71911
    type U2BitAndU3 = <<A as BitAnd<B>>::Output as Same<U2>>::Output;U2BitAndU32600,71988
fn test_2_BitOr_3() {test_2_BitOr_32606,72174
    type A = UInt<UInt<UTerm, B1>, B0>;A2607,72196
    type B = UInt<UInt<UTerm, B1>, B1>;B2608,72236
    type U3 = UInt<UInt<UTerm, B1>, B1>;U32609,72276
    type U2BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U2BitOrU32612,72353
fn test_2_BitXor_3() {test_2_BitXor_32618,72536
    type A = UInt<UInt<UTerm, B1>, B0>;A2619,72559
    type B = UInt<UInt<UTerm, B1>, B1>;B2620,72599
    type U1 = UInt<UTerm, B1>;U12621,72639
    type U2BitXorU3 = <<A as BitXor<B>>::Output as Same<U1>>::Output;U2BitXorU32624,72706
fn test_2_Shl_3() {test_2_Shl_32630,72892
    type A = UInt<UInt<UTerm, B1>, B0>;A2631,72912
    type B = UInt<UInt<UTerm, B1>, B1>;B2632,72952
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;U162633,72992
    type U2ShlU3 = <<A as Shl<B>>::Output as Same<U16>>::Output;U2ShlU32636,73100
fn test_2_Shr_3() {test_2_Shr_32642,73279
    type A = UInt<UInt<UTerm, B1>, B0>;A2643,73299
    type B = UInt<UInt<UTerm, B1>, B1>;B2644,73339
    type U0 = UTerm;U02645,73379
    type U2ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;U2ShrU32648,73436
fn test_2_Add_3() {test_2_Add_32654,73613
    type A = UInt<UInt<UTerm, B1>, B0>;A2655,73633
    type B = UInt<UInt<UTerm, B1>, B1>;B2656,73673
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U52657,73713
    type U2AddU3 = <<A as Add<B>>::Output as Same<U5>>::Output;U2AddU32660,73800
fn test_2_Mul_3() {test_2_Mul_32666,73977
    type A = UInt<UInt<UTerm, B1>, B0>;A2667,73997
    type B = UInt<UInt<UTerm, B1>, B1>;B2668,74037
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U62669,74077
    type U2MulU3 = <<A as Mul<B>>::Output as Same<U6>>::Output;U2MulU32672,74164
fn test_2_Pow_3() {test_2_Pow_32678,74341
    type A = UInt<UInt<UTerm, B1>, B0>;A2679,74361
    type B = UInt<UInt<UTerm, B1>, B1>;B2680,74401
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U82681,74441
    type U2PowU3 = <<A as Pow<B>>::Output as Same<U8>>::Output;U2PowU32684,74538
fn test_2_Min_3() {test_2_Min_32690,74715
    type A = UInt<UInt<UTerm, B1>, B0>;A2691,74735
    type B = UInt<UInt<UTerm, B1>, B1>;B2692,74775
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22693,74815
    type U2MinU3 = <<A as Min<B>>::Output as Same<U2>>::Output;U2MinU32696,74892
fn test_2_Max_3() {test_2_Max_32702,75069
    type A = UInt<UInt<UTerm, B1>, B0>;A2703,75089
    type B = UInt<UInt<UTerm, B1>, B1>;B2704,75129
    type U3 = UInt<UInt<UTerm, B1>, B1>;U32705,75169
    type U2MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;U2MaxU32708,75246
fn test_2_Gcd_3() {test_2_Gcd_32714,75423
    type A = UInt<UInt<UTerm, B1>, B0>;A2715,75443
    type B = UInt<UInt<UTerm, B1>, B1>;B2716,75483
    type U1 = UInt<UTerm, B1>;U12717,75523
    type U2GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U2GcdU32720,75590
fn test_2_Div_3() {test_2_Div_32726,75767
    type A = UInt<UInt<UTerm, B1>, B0>;A2727,75787
    type B = UInt<UInt<UTerm, B1>, B1>;B2728,75827
    type U0 = UTerm;U02729,75867
    type U2DivU3 = <<A as Div<B>>::Output as Same<U0>>::Output;U2DivU32732,75924
fn test_2_Rem_3() {test_2_Rem_32738,76101
    type A = UInt<UInt<UTerm, B1>, B0>;A2739,76121
    type B = UInt<UInt<UTerm, B1>, B1>;B2740,76161
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22741,76201
    type U2RemU3 = <<A as Rem<B>>::Output as Same<U2>>::Output;U2RemU32744,76278
fn test_2_Cmp_3() {test_2_Cmp_32750,76455
    type A = UInt<UInt<UTerm, B1>, B0>;A2751,76475
    type B = UInt<UInt<UTerm, B1>, B1>;B2752,76515
    type U2CmpU3 = <A as Cmp<B>>::Output;U2CmpU32755,76591
fn test_2_BitAnd_4() {test_2_BitAnd_42760,76733
    type A = UInt<UInt<UTerm, B1>, B0>;A2761,76756
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2762,76796
    type U0 = UTerm;U02763,76846
    type U2BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U2BitAndU42766,76903
fn test_2_BitOr_4() {test_2_BitOr_42772,77089
    type A = UInt<UInt<UTerm, B1>, B0>;A2773,77111
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2774,77151
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U62775,77201
    type U2BitOrU4 = <<A as BitOr<B>>::Output as Same<U6>>::Output;U2BitOrU42778,77288
fn test_2_BitXor_4() {test_2_BitXor_42784,77471
    type A = UInt<UInt<UTerm, B1>, B0>;A2785,77494
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2786,77534
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U62787,77584
    type U2BitXorU4 = <<A as BitXor<B>>::Output as Same<U6>>::Output;U2BitXorU42790,77671
fn test_2_Shl_4() {test_2_Shl_42796,77857
    type A = UInt<UInt<UTerm, B1>, B0>;A2797,77877
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2798,77917
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;U322799,77967
    type U2ShlU4 = <<A as Shl<B>>::Output as Same<U32>>::Output;U2ShlU42802,78085
fn test_2_Shr_4() {test_2_Shr_42808,78264
    type A = UInt<UInt<UTerm, B1>, B0>;A2809,78284
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2810,78324
    type U0 = UTerm;U02811,78374
    type U2ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;U2ShrU42814,78431
fn test_2_Add_4() {test_2_Add_42820,78608
    type A = UInt<UInt<UTerm, B1>, B0>;A2821,78628
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2822,78668
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U62823,78718
    type U2AddU4 = <<A as Add<B>>::Output as Same<U6>>::Output;U2AddU42826,78805
fn test_2_Mul_4() {test_2_Mul_42832,78982
    type A = UInt<UInt<UTerm, B1>, B0>;A2833,79002
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2834,79042
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U82835,79092
    type U2MulU4 = <<A as Mul<B>>::Output as Same<U8>>::Output;U2MulU42838,79189
fn test_2_Pow_4() {test_2_Pow_42844,79366
    type A = UInt<UInt<UTerm, B1>, B0>;A2845,79386
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2846,79426
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;U162847,79476
    type U2PowU4 = <<A as Pow<B>>::Output as Same<U16>>::Output;U2PowU42850,79584
fn test_2_Min_4() {test_2_Min_42856,79763
    type A = UInt<UInt<UTerm, B1>, B0>;A2857,79783
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2858,79823
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22859,79873
    type U2MinU4 = <<A as Min<B>>::Output as Same<U2>>::Output;U2MinU42862,79950
fn test_2_Max_4() {test_2_Max_42868,80127
    type A = UInt<UInt<UTerm, B1>, B0>;A2869,80147
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2870,80187
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U42871,80237
    type U2MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;U2MaxU42874,80324
fn test_2_Gcd_4() {test_2_Gcd_42880,80501
    type A = UInt<UInt<UTerm, B1>, B0>;A2881,80521
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2882,80561
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22883,80611
    type U2GcdU4 = <<A as Gcd<B>>::Output as Same<U2>>::Output;U2GcdU42886,80688
fn test_2_Div_4() {test_2_Div_42892,80865
    type A = UInt<UInt<UTerm, B1>, B0>;A2893,80885
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2894,80925
    type U0 = UTerm;U02895,80975
    type U2DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;U2DivU42898,81032
fn test_2_Rem_4() {test_2_Rem_42904,81209
    type A = UInt<UInt<UTerm, B1>, B0>;A2905,81229
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2906,81269
    type U2 = UInt<UInt<UTerm, B1>, B0>;U22907,81319
    type U2RemU4 = <<A as Rem<B>>::Output as Same<U2>>::Output;U2RemU42910,81396
fn test_2_Cmp_4() {test_2_Cmp_42916,81573
    type A = UInt<UInt<UTerm, B1>, B0>;A2917,81593
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B2918,81633
    type U2CmpU4 = <A as Cmp<B>>::Output;U2CmpU42921,81719
fn test_2_BitAnd_5() {test_2_BitAnd_52926,81861
    type A = UInt<UInt<UTerm, B1>, B0>;A2927,81884
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2928,81924
    type U0 = UTerm;U02929,81974
    type U2BitAndU5 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U2BitAndU52932,82031
fn test_2_BitOr_5() {test_2_BitOr_52938,82217
    type A = UInt<UInt<UTerm, B1>, B0>;A2939,82239
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2940,82279
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U72941,82329
    type U2BitOrU5 = <<A as BitOr<B>>::Output as Same<U7>>::Output;U2BitOrU52944,82416
fn test_2_BitXor_5() {test_2_BitXor_52950,82599
    type A = UInt<UInt<UTerm, B1>, B0>;A2951,82622
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2952,82662
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U72953,82712
    type U2BitXorU5 = <<A as BitXor<B>>::Output as Same<U7>>::Output;U2BitXorU52956,82799
fn test_2_Shl_5() {test_2_Shl_52962,82985
    type A = UInt<UInt<UTerm, B1>, B0>;A2963,83005
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2964,83045
    type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;U642965,83095
    type U2ShlU5 = <<A as Shl<B>>::Output as Same<U64>>::Output;U2ShlU52968,83223
fn test_2_Shr_5() {test_2_Shr_52974,83402
    type A = UInt<UInt<UTerm, B1>, B0>;A2975,83422
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2976,83462
    type U0 = UTerm;U02977,83512
    type U2ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;U2ShrU52980,83569
fn test_2_Add_5() {test_2_Add_52986,83746
    type A = UInt<UInt<UTerm, B1>, B0>;A2987,83766
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B2988,83806
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U72989,83856
    type U2AddU5 = <<A as Add<B>>::Output as Same<U7>>::Output;U2AddU52992,83943
fn test_2_Mul_5() {test_2_Mul_52998,84120
    type A = UInt<UInt<UTerm, B1>, B0>;A2999,84140
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3000,84180
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;U103001,84230
    type U2MulU5 = <<A as Mul<B>>::Output as Same<U10>>::Output;U2MulU53004,84328
fn test_2_Pow_5() {test_2_Pow_53010,84507
    type A = UInt<UInt<UTerm, B1>, B0>;A3011,84527
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3012,84567
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;U323013,84617
    type U2PowU5 = <<A as Pow<B>>::Output as Same<U32>>::Output;U2PowU53016,84735
fn test_2_Min_5() {test_2_Min_53022,84914
    type A = UInt<UInt<UTerm, B1>, B0>;A3023,84934
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3024,84974
    type U2 = UInt<UInt<UTerm, B1>, B0>;U23025,85024
    type U2MinU5 = <<A as Min<B>>::Output as Same<U2>>::Output;U2MinU53028,85101
fn test_2_Max_5() {test_2_Max_53034,85278
    type A = UInt<UInt<UTerm, B1>, B0>;A3035,85298
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3036,85338
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U53037,85388
    type U2MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;U2MaxU53040,85475
fn test_2_Gcd_5() {test_2_Gcd_53046,85652
    type A = UInt<UInt<UTerm, B1>, B0>;A3047,85672
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3048,85712
    type U1 = UInt<UTerm, B1>;U13049,85762
    type U2GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U2GcdU53052,85829
fn test_2_Div_5() {test_2_Div_53058,86006
    type A = UInt<UInt<UTerm, B1>, B0>;A3059,86026
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3060,86066
    type U0 = UTerm;U03061,86116
    type U2DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;U2DivU53064,86173
fn test_2_Rem_5() {test_2_Rem_53070,86350
    type A = UInt<UInt<UTerm, B1>, B0>;A3071,86370
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3072,86410
    type U2 = UInt<UInt<UTerm, B1>, B0>;U23073,86460
    type U2RemU5 = <<A as Rem<B>>::Output as Same<U2>>::Output;U2RemU53076,86537
fn test_2_Cmp_5() {test_2_Cmp_53082,86714
    type A = UInt<UInt<UTerm, B1>, B0>;A3083,86734
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3084,86774
    type U2CmpU5 = <A as Cmp<B>>::Output;U2CmpU53087,86860
fn test_3_BitAnd_0() {test_3_BitAnd_03092,87002
    type A = UInt<UInt<UTerm, B1>, B1>;A3093,87025
    type B = UTerm;B3094,87065
    type U0 = UTerm;U03095,87085
    type U3BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U3BitAndU03098,87142
fn test_3_BitOr_0() {test_3_BitOr_03104,87328
    type A = UInt<UInt<UTerm, B1>, B1>;A3105,87350
    type B = UTerm;B3106,87390
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33107,87410
    type U3BitOrU0 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U3BitOrU03110,87487
fn test_3_BitXor_0() {test_3_BitXor_03116,87670
    type A = UInt<UInt<UTerm, B1>, B1>;A3117,87693
    type B = UTerm;B3118,87733
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33119,87753
    type U3BitXorU0 = <<A as BitXor<B>>::Output as Same<U3>>::Output;U3BitXorU03122,87830
fn test_3_Shl_0() {test_3_Shl_03128,88016
    type A = UInt<UInt<UTerm, B1>, B1>;A3129,88036
    type B = UTerm;B3130,88076
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33131,88096
    type U3ShlU0 = <<A as Shl<B>>::Output as Same<U3>>::Output;U3ShlU03134,88173
fn test_3_Shr_0() {test_3_Shr_03140,88350
    type A = UInt<UInt<UTerm, B1>, B1>;A3141,88370
    type B = UTerm;B3142,88410
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33143,88430
    type U3ShrU0 = <<A as Shr<B>>::Output as Same<U3>>::Output;U3ShrU03146,88507
fn test_3_Add_0() {test_3_Add_03152,88684
    type A = UInt<UInt<UTerm, B1>, B1>;A3153,88704
    type B = UTerm;B3154,88744
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33155,88764
    type U3AddU0 = <<A as Add<B>>::Output as Same<U3>>::Output;U3AddU03158,88841
fn test_3_Mul_0() {test_3_Mul_03164,89018
    type A = UInt<UInt<UTerm, B1>, B1>;A3165,89038
    type B = UTerm;B3166,89078
    type U0 = UTerm;U03167,89098
    type U3MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;U3MulU03170,89155
fn test_3_Pow_0() {test_3_Pow_03176,89332
    type A = UInt<UInt<UTerm, B1>, B1>;A3177,89352
    type B = UTerm;B3178,89392
    type U1 = UInt<UTerm, B1>;U13179,89412
    type U3PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;U3PowU03182,89479
fn test_3_Min_0() {test_3_Min_03188,89656
    type A = UInt<UInt<UTerm, B1>, B1>;A3189,89676
    type B = UTerm;B3190,89716
    type U0 = UTerm;U03191,89736
    type U3MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;U3MinU03194,89793
fn test_3_Max_0() {test_3_Max_03200,89970
    type A = UInt<UInt<UTerm, B1>, B1>;A3201,89990
    type B = UTerm;B3202,90030
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33203,90050
    type U3MaxU0 = <<A as Max<B>>::Output as Same<U3>>::Output;U3MaxU03206,90127
fn test_3_Gcd_0() {test_3_Gcd_03212,90304
    type A = UInt<UInt<UTerm, B1>, B1>;A3213,90324
    type B = UTerm;B3214,90364
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33215,90384
    type U3GcdU0 = <<A as Gcd<B>>::Output as Same<U3>>::Output;U3GcdU03218,90461
fn test_3_Sub_0() {test_3_Sub_03224,90638
    type A = UInt<UInt<UTerm, B1>, B1>;A3225,90658
    type B = UTerm;B3226,90698
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33227,90718
    type U3SubU0 = <<A as Sub<B>>::Output as Same<U3>>::Output;U3SubU03230,90795
fn test_3_Cmp_0() {test_3_Cmp_03236,90972
    type A = UInt<UInt<UTerm, B1>, B1>;A3237,90992
    type B = UTerm;B3238,91032
    type U3CmpU0 = <A as Cmp<B>>::Output;U3CmpU03241,91088
fn test_3_BitAnd_1() {test_3_BitAnd_13246,91233
    type A = UInt<UInt<UTerm, B1>, B1>;A3247,91256
    type B = UInt<UTerm, B1>;B3248,91296
    type U1 = UInt<UTerm, B1>;U13249,91326
    type U3BitAndU1 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U3BitAndU13252,91393
fn test_3_BitOr_1() {test_3_BitOr_13258,91579
    type A = UInt<UInt<UTerm, B1>, B1>;A3259,91601
    type B = UInt<UTerm, B1>;B3260,91641
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33261,91671
    type U3BitOrU1 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U3BitOrU13264,91748
fn test_3_BitXor_1() {test_3_BitXor_13270,91931
    type A = UInt<UInt<UTerm, B1>, B1>;A3271,91954
    type B = UInt<UTerm, B1>;B3272,91994
    type U2 = UInt<UInt<UTerm, B1>, B0>;U23273,92024
    type U3BitXorU1 = <<A as BitXor<B>>::Output as Same<U2>>::Output;U3BitXorU13276,92101
fn test_3_Shl_1() {test_3_Shl_13282,92287
    type A = UInt<UInt<UTerm, B1>, B1>;A3283,92307
    type B = UInt<UTerm, B1>;B3284,92347
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U63285,92377
    type U3ShlU1 = <<A as Shl<B>>::Output as Same<U6>>::Output;U3ShlU13288,92464
fn test_3_Shr_1() {test_3_Shr_13294,92641
    type A = UInt<UInt<UTerm, B1>, B1>;A3295,92661
    type B = UInt<UTerm, B1>;B3296,92701
    type U1 = UInt<UTerm, B1>;U13297,92731
    type U3ShrU1 = <<A as Shr<B>>::Output as Same<U1>>::Output;U3ShrU13300,92798
fn test_3_Add_1() {test_3_Add_13306,92975
    type A = UInt<UInt<UTerm, B1>, B1>;A3307,92995
    type B = UInt<UTerm, B1>;B3308,93035
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U43309,93065
    type U3AddU1 = <<A as Add<B>>::Output as Same<U4>>::Output;U3AddU13312,93152
fn test_3_Mul_1() {test_3_Mul_13318,93329
    type A = UInt<UInt<UTerm, B1>, B1>;A3319,93349
    type B = UInt<UTerm, B1>;B3320,93389
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33321,93419
    type U3MulU1 = <<A as Mul<B>>::Output as Same<U3>>::Output;U3MulU13324,93496
fn test_3_Pow_1() {test_3_Pow_13330,93673
    type A = UInt<UInt<UTerm, B1>, B1>;A3331,93693
    type B = UInt<UTerm, B1>;B3332,93733
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33333,93763
    type U3PowU1 = <<A as Pow<B>>::Output as Same<U3>>::Output;U3PowU13336,93840
fn test_3_Min_1() {test_3_Min_13342,94017
    type A = UInt<UInt<UTerm, B1>, B1>;A3343,94037
    type B = UInt<UTerm, B1>;B3344,94077
    type U1 = UInt<UTerm, B1>;U13345,94107
    type U3MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;U3MinU13348,94174
fn test_3_Max_1() {test_3_Max_13354,94351
    type A = UInt<UInt<UTerm, B1>, B1>;A3355,94371
    type B = UInt<UTerm, B1>;B3356,94411
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33357,94441
    type U3MaxU1 = <<A as Max<B>>::Output as Same<U3>>::Output;U3MaxU13360,94518
fn test_3_Gcd_1() {test_3_Gcd_13366,94695
    type A = UInt<UInt<UTerm, B1>, B1>;A3367,94715
    type B = UInt<UTerm, B1>;B3368,94755
    type U1 = UInt<UTerm, B1>;U13369,94785
    type U3GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U3GcdU13372,94852
fn test_3_Sub_1() {test_3_Sub_13378,95029
    type A = UInt<UInt<UTerm, B1>, B1>;A3379,95049
    type B = UInt<UTerm, B1>;B3380,95089
    type U2 = UInt<UInt<UTerm, B1>, B0>;U23381,95119
    type U3SubU1 = <<A as Sub<B>>::Output as Same<U2>>::Output;U3SubU13384,95196
fn test_3_Div_1() {test_3_Div_13390,95373
    type A = UInt<UInt<UTerm, B1>, B1>;A3391,95393
    type B = UInt<UTerm, B1>;B3392,95433
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33393,95463
    type U3DivU1 = <<A as Div<B>>::Output as Same<U3>>::Output;U3DivU13396,95540
fn test_3_Rem_1() {test_3_Rem_13402,95717
    type A = UInt<UInt<UTerm, B1>, B1>;A3403,95737
    type B = UInt<UTerm, B1>;B3404,95777
    type U0 = UTerm;U03405,95807
    type U3RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;U3RemU13408,95864
fn test_3_PartialDiv_1() {test_3_PartialDiv_13414,96041
    type A = UInt<UInt<UTerm, B1>, B1>;A3415,96068
    type B = UInt<UTerm, B1>;B3416,96108
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33417,96138
    type U3PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U3>>::Output;U3PartialDivU13420,96215
fn test_3_Cmp_1() {test_3_Cmp_13426,96413
    type A = UInt<UInt<UTerm, B1>, B1>;A3427,96433
    type B = UInt<UTerm, B1>;B3428,96473
    type U3CmpU1 = <A as Cmp<B>>::Output;U3CmpU13431,96539
fn test_3_BitAnd_2() {test_3_BitAnd_23436,96684
    type A = UInt<UInt<UTerm, B1>, B1>;A3437,96707
    type B = UInt<UInt<UTerm, B1>, B0>;B3438,96747
    type U2 = UInt<UInt<UTerm, B1>, B0>;U23439,96787
    type U3BitAndU2 = <<A as BitAnd<B>>::Output as Same<U2>>::Output;U3BitAndU23442,96864
fn test_3_BitOr_2() {test_3_BitOr_23448,97050
    type A = UInt<UInt<UTerm, B1>, B1>;A3449,97072
    type B = UInt<UInt<UTerm, B1>, B0>;B3450,97112
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33451,97152
    type U3BitOrU2 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U3BitOrU23454,97229
fn test_3_BitXor_2() {test_3_BitXor_23460,97412
    type A = UInt<UInt<UTerm, B1>, B1>;A3461,97435
    type B = UInt<UInt<UTerm, B1>, B0>;B3462,97475
    type U1 = UInt<UTerm, B1>;U13463,97515
    type U3BitXorU2 = <<A as BitXor<B>>::Output as Same<U1>>::Output;U3BitXorU23466,97582
fn test_3_Shl_2() {test_3_Shl_23472,97768
    type A = UInt<UInt<UTerm, B1>, B1>;A3473,97788
    type B = UInt<UInt<UTerm, B1>, B0>;B3474,97828
    type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;U123475,97868
    type U3ShlU2 = <<A as Shl<B>>::Output as Same<U12>>::Output;U3ShlU23478,97966
fn test_3_Shr_2() {test_3_Shr_23484,98145
    type A = UInt<UInt<UTerm, B1>, B1>;A3485,98165
    type B = UInt<UInt<UTerm, B1>, B0>;B3486,98205
    type U0 = UTerm;U03487,98245
    type U3ShrU2 = <<A as Shr<B>>::Output as Same<U0>>::Output;U3ShrU23490,98302
fn test_3_Add_2() {test_3_Add_23496,98479
    type A = UInt<UInt<UTerm, B1>, B1>;A3497,98499
    type B = UInt<UInt<UTerm, B1>, B0>;B3498,98539
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U53499,98579
    type U3AddU2 = <<A as Add<B>>::Output as Same<U5>>::Output;U3AddU23502,98666
fn test_3_Mul_2() {test_3_Mul_23508,98843
    type A = UInt<UInt<UTerm, B1>, B1>;A3509,98863
    type B = UInt<UInt<UTerm, B1>, B0>;B3510,98903
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U63511,98943
    type U3MulU2 = <<A as Mul<B>>::Output as Same<U6>>::Output;U3MulU23514,99030
fn test_3_Pow_2() {test_3_Pow_23520,99207
    type A = UInt<UInt<UTerm, B1>, B1>;A3521,99227
    type B = UInt<UInt<UTerm, B1>, B0>;B3522,99267
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;U93523,99307
    type U3PowU2 = <<A as Pow<B>>::Output as Same<U9>>::Output;U3PowU23526,99404
fn test_3_Min_2() {test_3_Min_23532,99581
    type A = UInt<UInt<UTerm, B1>, B1>;A3533,99601
    type B = UInt<UInt<UTerm, B1>, B0>;B3534,99641
    type U2 = UInt<UInt<UTerm, B1>, B0>;U23535,99681
    type U3MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;U3MinU23538,99758
fn test_3_Max_2() {test_3_Max_23544,99935
    type A = UInt<UInt<UTerm, B1>, B1>;A3545,99955
    type B = UInt<UInt<UTerm, B1>, B0>;B3546,99995
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33547,100035
    type U3MaxU2 = <<A as Max<B>>::Output as Same<U3>>::Output;U3MaxU23550,100112
fn test_3_Gcd_2() {test_3_Gcd_23556,100289
    type A = UInt<UInt<UTerm, B1>, B1>;A3557,100309
    type B = UInt<UInt<UTerm, B1>, B0>;B3558,100349
    type U1 = UInt<UTerm, B1>;U13559,100389
    type U3GcdU2 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U3GcdU23562,100456
fn test_3_Sub_2() {test_3_Sub_23568,100633
    type A = UInt<UInt<UTerm, B1>, B1>;A3569,100653
    type B = UInt<UInt<UTerm, B1>, B0>;B3570,100693
    type U1 = UInt<UTerm, B1>;U13571,100733
    type U3SubU2 = <<A as Sub<B>>::Output as Same<U1>>::Output;U3SubU23574,100800
fn test_3_Div_2() {test_3_Div_23580,100977
    type A = UInt<UInt<UTerm, B1>, B1>;A3581,100997
    type B = UInt<UInt<UTerm, B1>, B0>;B3582,101037
    type U1 = UInt<UTerm, B1>;U13583,101077
    type U3DivU2 = <<A as Div<B>>::Output as Same<U1>>::Output;U3DivU23586,101144
fn test_3_Rem_2() {test_3_Rem_23592,101321
    type A = UInt<UInt<UTerm, B1>, B1>;A3593,101341
    type B = UInt<UInt<UTerm, B1>, B0>;B3594,101381
    type U1 = UInt<UTerm, B1>;U13595,101421
    type U3RemU2 = <<A as Rem<B>>::Output as Same<U1>>::Output;U3RemU23598,101488
fn test_3_Cmp_2() {test_3_Cmp_23604,101665
    type A = UInt<UInt<UTerm, B1>, B1>;A3605,101685
    type B = UInt<UInt<UTerm, B1>, B0>;B3606,101725
    type U3CmpU2 = <A as Cmp<B>>::Output;U3CmpU23609,101801
fn test_3_BitAnd_3() {test_3_BitAnd_33614,101946
    type A = UInt<UInt<UTerm, B1>, B1>;A3615,101969
    type B = UInt<UInt<UTerm, B1>, B1>;B3616,102009
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33617,102049
    type U3BitAndU3 = <<A as BitAnd<B>>::Output as Same<U3>>::Output;U3BitAndU33620,102126
fn test_3_BitOr_3() {test_3_BitOr_33626,102312
    type A = UInt<UInt<UTerm, B1>, B1>;A3627,102334
    type B = UInt<UInt<UTerm, B1>, B1>;B3628,102374
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33629,102414
    type U3BitOrU3 = <<A as BitOr<B>>::Output as Same<U3>>::Output;U3BitOrU33632,102491
fn test_3_BitXor_3() {test_3_BitXor_33638,102674
    type A = UInt<UInt<UTerm, B1>, B1>;A3639,102697
    type B = UInt<UInt<UTerm, B1>, B1>;B3640,102737
    type U0 = UTerm;U03641,102777
    type U3BitXorU3 = <<A as BitXor<B>>::Output as Same<U0>>::Output;U3BitXorU33644,102834
fn test_3_Shl_3() {test_3_Shl_33650,103020
    type A = UInt<UInt<UTerm, B1>, B1>;A3651,103040
    type B = UInt<UInt<UTerm, B1>, B1>;B3652,103080
    type U24 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>;U243653,103120
    type U3ShlU3 = <<A as Shl<B>>::Output as Same<U24>>::Output;U3ShlU33656,103228
fn test_3_Shr_3() {test_3_Shr_33662,103407
    type A = UInt<UInt<UTerm, B1>, B1>;A3663,103427
    type B = UInt<UInt<UTerm, B1>, B1>;B3664,103467
    type U0 = UTerm;U03665,103507
    type U3ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;U3ShrU33668,103564
fn test_3_Add_3() {test_3_Add_33674,103741
    type A = UInt<UInt<UTerm, B1>, B1>;A3675,103761
    type B = UInt<UInt<UTerm, B1>, B1>;B3676,103801
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U63677,103841
    type U3AddU3 = <<A as Add<B>>::Output as Same<U6>>::Output;U3AddU33680,103928
fn test_3_Mul_3() {test_3_Mul_33686,104105
    type A = UInt<UInt<UTerm, B1>, B1>;A3687,104125
    type B = UInt<UInt<UTerm, B1>, B1>;B3688,104165
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;U93689,104205
    type U3MulU3 = <<A as Mul<B>>::Output as Same<U9>>::Output;U3MulU33692,104302
fn test_3_Pow_3() {test_3_Pow_33698,104479
    type A = UInt<UInt<UTerm, B1>, B1>;A3699,104499
    type B = UInt<UInt<UTerm, B1>, B1>;B3700,104539
    type U27 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>;U273701,104579
    type U3PowU3 = <<A as Pow<B>>::Output as Same<U27>>::Output;U3PowU33704,104687
fn test_3_Min_3() {test_3_Min_33710,104866
    type A = UInt<UInt<UTerm, B1>, B1>;A3711,104886
    type B = UInt<UInt<UTerm, B1>, B1>;B3712,104926
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33713,104966
    type U3MinU3 = <<A as Min<B>>::Output as Same<U3>>::Output;U3MinU33716,105043
fn test_3_Max_3() {test_3_Max_33722,105220
    type A = UInt<UInt<UTerm, B1>, B1>;A3723,105240
    type B = UInt<UInt<UTerm, B1>, B1>;B3724,105280
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33725,105320
    type U3MaxU3 = <<A as Max<B>>::Output as Same<U3>>::Output;U3MaxU33728,105397
fn test_3_Gcd_3() {test_3_Gcd_33734,105574
    type A = UInt<UInt<UTerm, B1>, B1>;A3735,105594
    type B = UInt<UInt<UTerm, B1>, B1>;B3736,105634
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33737,105674
    type U3GcdU3 = <<A as Gcd<B>>::Output as Same<U3>>::Output;U3GcdU33740,105751
fn test_3_Sub_3() {test_3_Sub_33746,105928
    type A = UInt<UInt<UTerm, B1>, B1>;A3747,105948
    type B = UInt<UInt<UTerm, B1>, B1>;B3748,105988
    type U0 = UTerm;U03749,106028
    type U3SubU3 = <<A as Sub<B>>::Output as Same<U0>>::Output;U3SubU33752,106085
fn test_3_Div_3() {test_3_Div_33758,106262
    type A = UInt<UInt<UTerm, B1>, B1>;A3759,106282
    type B = UInt<UInt<UTerm, B1>, B1>;B3760,106322
    type U1 = UInt<UTerm, B1>;U13761,106362
    type U3DivU3 = <<A as Div<B>>::Output as Same<U1>>::Output;U3DivU33764,106429
fn test_3_Rem_3() {test_3_Rem_33770,106606
    type A = UInt<UInt<UTerm, B1>, B1>;A3771,106626
    type B = UInt<UInt<UTerm, B1>, B1>;B3772,106666
    type U0 = UTerm;U03773,106706
    type U3RemU3 = <<A as Rem<B>>::Output as Same<U0>>::Output;U3RemU33776,106763
fn test_3_PartialDiv_3() {test_3_PartialDiv_33782,106940
    type A = UInt<UInt<UTerm, B1>, B1>;A3783,106967
    type B = UInt<UInt<UTerm, B1>, B1>;B3784,107007
    type U1 = UInt<UTerm, B1>;U13785,107047
    type U3PartialDivU3 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;U3PartialDivU33788,107114
fn test_3_Cmp_3() {test_3_Cmp_33794,107312
    type A = UInt<UInt<UTerm, B1>, B1>;A3795,107332
    type B = UInt<UInt<UTerm, B1>, B1>;B3796,107372
    type U3CmpU3 = <A as Cmp<B>>::Output;U3CmpU33799,107448
fn test_3_BitAnd_4() {test_3_BitAnd_43804,107591
    type A = UInt<UInt<UTerm, B1>, B1>;A3805,107614
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3806,107654
    type U0 = UTerm;U03807,107704
    type U3BitAndU4 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U3BitAndU43810,107761
fn test_3_BitOr_4() {test_3_BitOr_43816,107947
    type A = UInt<UInt<UTerm, B1>, B1>;A3817,107969
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3818,108009
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U73819,108059
    type U3BitOrU4 = <<A as BitOr<B>>::Output as Same<U7>>::Output;U3BitOrU43822,108146
fn test_3_BitXor_4() {test_3_BitXor_43828,108329
    type A = UInt<UInt<UTerm, B1>, B1>;A3829,108352
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3830,108392
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U73831,108442
    type U3BitXorU4 = <<A as BitXor<B>>::Output as Same<U7>>::Output;U3BitXorU43834,108529
fn test_3_Shl_4() {test_3_Shl_43840,108715
    type A = UInt<UInt<UTerm, B1>, B1>;A3841,108735
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3842,108775
    type U48 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>;U483843,108825
    type U3ShlU4 = <<A as Shl<B>>::Output as Same<U48>>::Output;U3ShlU43846,108943
fn test_3_Shr_4() {test_3_Shr_43852,109122
    type A = UInt<UInt<UTerm, B1>, B1>;A3853,109142
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3854,109182
    type U0 = UTerm;U03855,109232
    type U3ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;U3ShrU43858,109289
fn test_3_Add_4() {test_3_Add_43864,109466
    type A = UInt<UInt<UTerm, B1>, B1>;A3865,109486
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3866,109526
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U73867,109576
    type U3AddU4 = <<A as Add<B>>::Output as Same<U7>>::Output;U3AddU43870,109663
fn test_3_Mul_4() {test_3_Mul_43876,109840
    type A = UInt<UInt<UTerm, B1>, B1>;A3877,109860
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3878,109900
    type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;U123879,109950
    type U3MulU4 = <<A as Mul<B>>::Output as Same<U12>>::Output;U3MulU43882,110048
fn test_3_Pow_4() {test_3_Pow_43888,110227
    type A = UInt<UInt<UTerm, B1>, B1>;A3889,110247
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3890,110287
    type U81 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>;U813891,110337
    type U3PowU4 = <<A as Pow<B>>::Output as Same<U81>>::Output;U3PowU43894,110465
fn test_3_Min_4() {test_3_Min_43900,110644
    type A = UInt<UInt<UTerm, B1>, B1>;A3901,110664
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3902,110704
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33903,110754
    type U3MinU4 = <<A as Min<B>>::Output as Same<U3>>::Output;U3MinU43906,110831
fn test_3_Max_4() {test_3_Max_43912,111008
    type A = UInt<UInt<UTerm, B1>, B1>;A3913,111028
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3914,111068
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U43915,111118
    type U3MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;U3MaxU43918,111205
fn test_3_Gcd_4() {test_3_Gcd_43924,111382
    type A = UInt<UInt<UTerm, B1>, B1>;A3925,111402
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3926,111442
    type U1 = UInt<UTerm, B1>;U13927,111492
    type U3GcdU4 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U3GcdU43930,111559
fn test_3_Div_4() {test_3_Div_43936,111736
    type A = UInt<UInt<UTerm, B1>, B1>;A3937,111756
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3938,111796
    type U0 = UTerm;U03939,111846
    type U3DivU4 = <<A as Div<B>>::Output as Same<U0>>::Output;U3DivU43942,111903
fn test_3_Rem_4() {test_3_Rem_43948,112080
    type A = UInt<UInt<UTerm, B1>, B1>;A3949,112100
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3950,112140
    type U3 = UInt<UInt<UTerm, B1>, B1>;U33951,112190
    type U3RemU4 = <<A as Rem<B>>::Output as Same<U3>>::Output;U3RemU43954,112267
fn test_3_Cmp_4() {test_3_Cmp_43960,112444
    type A = UInt<UInt<UTerm, B1>, B1>;A3961,112464
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B3962,112504
    type U3CmpU4 = <A as Cmp<B>>::Output;U3CmpU43965,112590
fn test_3_BitAnd_5() {test_3_BitAnd_53970,112732
    type A = UInt<UInt<UTerm, B1>, B1>;A3971,112755
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3972,112795
    type U1 = UInt<UTerm, B1>;U13973,112845
    type U3BitAndU5 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U3BitAndU53976,112912
fn test_3_BitOr_5() {test_3_BitOr_53982,113098
    type A = UInt<UInt<UTerm, B1>, B1>;A3983,113120
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3984,113160
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U73985,113210
    type U3BitOrU5 = <<A as BitOr<B>>::Output as Same<U7>>::Output;U3BitOrU53988,113297
fn test_3_BitXor_5() {test_3_BitXor_53994,113480
    type A = UInt<UInt<UTerm, B1>, B1>;A3995,113503
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B3996,113543
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U63997,113593
    type U3BitXorU5 = <<A as BitXor<B>>::Output as Same<U6>>::Output;U3BitXorU54000,113680
fn test_3_Shl_5() {test_3_Shl_54006,113866
    type A = UInt<UInt<UTerm, B1>, B1>;A4007,113886
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4008,113926
    type U96 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B0>, B0>, B0>;U964009,113976
    type U3ShlU5 = <<A as Shl<B>>::Output as Same<U96>>::Output;U3ShlU54012,114104
fn test_3_Shr_5() {test_3_Shr_54018,114283
    type A = UInt<UInt<UTerm, B1>, B1>;A4019,114303
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4020,114343
    type U0 = UTerm;U04021,114393
    type U3ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;U3ShrU54024,114450
fn test_3_Add_5() {test_3_Add_54030,114627
    type A = UInt<UInt<UTerm, B1>, B1>;A4031,114647
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4032,114687
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U84033,114737
    type U3AddU5 = <<A as Add<B>>::Output as Same<U8>>::Output;U3AddU54036,114834
fn test_3_Mul_5() {test_3_Mul_54042,115011
    type A = UInt<UInt<UTerm, B1>, B1>;A4043,115031
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4044,115071
    type U15 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>;U154045,115121
    type U3MulU5 = <<A as Mul<B>>::Output as Same<U15>>::Output;U3MulU54048,115219
fn test_3_Pow_5() {test_3_Pow_54054,115398
    type A = UInt<UInt<UTerm, B1>, B1>;A4055,115418
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4056,115458
    type U243 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>, B1>U2434057,115508
    type U3PowU5 = <<A as Pow<B>>::Output as Same<U243>>::Output;U3PowU54060,115647
fn test_3_Min_5() {test_3_Min_54066,115828
    type A = UInt<UInt<UTerm, B1>, B1>;A4067,115848
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4068,115888
    type U3 = UInt<UInt<UTerm, B1>, B1>;U34069,115938
    type U3MinU5 = <<A as Min<B>>::Output as Same<U3>>::Output;U3MinU54072,116015
fn test_3_Max_5() {test_3_Max_54078,116192
    type A = UInt<UInt<UTerm, B1>, B1>;A4079,116212
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4080,116252
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U54081,116302
    type U3MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;U3MaxU54084,116389
fn test_3_Gcd_5() {test_3_Gcd_54090,116566
    type A = UInt<UInt<UTerm, B1>, B1>;A4091,116586
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4092,116626
    type U1 = UInt<UTerm, B1>;U14093,116676
    type U3GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U3GcdU54096,116743
fn test_3_Div_5() {test_3_Div_54102,116920
    type A = UInt<UInt<UTerm, B1>, B1>;A4103,116940
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4104,116980
    type U0 = UTerm;U04105,117030
    type U3DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;U3DivU54108,117087
fn test_3_Rem_5() {test_3_Rem_54114,117264
    type A = UInt<UInt<UTerm, B1>, B1>;A4115,117284
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4116,117324
    type U3 = UInt<UInt<UTerm, B1>, B1>;U34117,117374
    type U3RemU5 = <<A as Rem<B>>::Output as Same<U3>>::Output;U3RemU54120,117451
fn test_3_Cmp_5() {test_3_Cmp_54126,117628
    type A = UInt<UInt<UTerm, B1>, B1>;A4127,117648
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B4128,117688
    type U3CmpU5 = <A as Cmp<B>>::Output;U3CmpU54131,117774
fn test_4_BitAnd_0() {test_4_BitAnd_04136,117916
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4137,117939
    type B = UTerm;B4138,117989
    type U0 = UTerm;U04139,118009
    type U4BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U4BitAndU04142,118066
fn test_4_BitOr_0() {test_4_BitOr_04148,118252
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4149,118274
    type B = UTerm;B4150,118324
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44151,118344
    type U4BitOrU0 = <<A as BitOr<B>>::Output as Same<U4>>::Output;U4BitOrU04154,118431
fn test_4_BitXor_0() {test_4_BitXor_04160,118614
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4161,118637
    type B = UTerm;B4162,118687
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44163,118707
    type U4BitXorU0 = <<A as BitXor<B>>::Output as Same<U4>>::Output;U4BitXorU04166,118794
fn test_4_Shl_0() {test_4_Shl_04172,118980
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4173,119000
    type B = UTerm;B4174,119050
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44175,119070
    type U4ShlU0 = <<A as Shl<B>>::Output as Same<U4>>::Output;U4ShlU04178,119157
fn test_4_Shr_0() {test_4_Shr_04184,119334
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4185,119354
    type B = UTerm;B4186,119404
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44187,119424
    type U4ShrU0 = <<A as Shr<B>>::Output as Same<U4>>::Output;U4ShrU04190,119511
fn test_4_Add_0() {test_4_Add_04196,119688
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4197,119708
    type B = UTerm;B4198,119758
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44199,119778
    type U4AddU0 = <<A as Add<B>>::Output as Same<U4>>::Output;U4AddU04202,119865
fn test_4_Mul_0() {test_4_Mul_04208,120042
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4209,120062
    type B = UTerm;B4210,120112
    type U0 = UTerm;U04211,120132
    type U4MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;U4MulU04214,120189
fn test_4_Pow_0() {test_4_Pow_04220,120366
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4221,120386
    type B = UTerm;B4222,120436
    type U1 = UInt<UTerm, B1>;U14223,120456
    type U4PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;U4PowU04226,120523
fn test_4_Min_0() {test_4_Min_04232,120700
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4233,120720
    type B = UTerm;B4234,120770
    type U0 = UTerm;U04235,120790
    type U4MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;U4MinU04238,120847
fn test_4_Max_0() {test_4_Max_04244,121024
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4245,121044
    type B = UTerm;B4246,121094
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44247,121114
    type U4MaxU0 = <<A as Max<B>>::Output as Same<U4>>::Output;U4MaxU04250,121201
fn test_4_Gcd_0() {test_4_Gcd_04256,121378
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4257,121398
    type B = UTerm;B4258,121448
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44259,121468
    type U4GcdU0 = <<A as Gcd<B>>::Output as Same<U4>>::Output;U4GcdU04262,121555
fn test_4_Sub_0() {test_4_Sub_04268,121732
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4269,121752
    type B = UTerm;B4270,121802
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44271,121822
    type U4SubU0 = <<A as Sub<B>>::Output as Same<U4>>::Output;U4SubU04274,121909
fn test_4_Cmp_0() {test_4_Cmp_04280,122086
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4281,122106
    type B = UTerm;B4282,122156
    type U4CmpU0 = <A as Cmp<B>>::Output;U4CmpU04285,122212
fn test_4_BitAnd_1() {test_4_BitAnd_14290,122357
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4291,122380
    type B = UInt<UTerm, B1>;B4292,122430
    type U0 = UTerm;U04293,122460
    type U4BitAndU1 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U4BitAndU14296,122517
fn test_4_BitOr_1() {test_4_BitOr_14302,122703
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4303,122725
    type B = UInt<UTerm, B1>;B4304,122775
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U54305,122805
    type U4BitOrU1 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U4BitOrU14308,122892
fn test_4_BitXor_1() {test_4_BitXor_14314,123075
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4315,123098
    type B = UInt<UTerm, B1>;B4316,123148
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U54317,123178
    type U4BitXorU1 = <<A as BitXor<B>>::Output as Same<U5>>::Output;U4BitXorU14320,123265
fn test_4_Shl_1() {test_4_Shl_14326,123451
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4327,123471
    type B = UInt<UTerm, B1>;B4328,123521
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U84329,123551
    type U4ShlU1 = <<A as Shl<B>>::Output as Same<U8>>::Output;U4ShlU14332,123648
fn test_4_Shr_1() {test_4_Shr_14338,123825
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4339,123845
    type B = UInt<UTerm, B1>;B4340,123895
    type U2 = UInt<UInt<UTerm, B1>, B0>;U24341,123925
    type U4ShrU1 = <<A as Shr<B>>::Output as Same<U2>>::Output;U4ShrU14344,124002
fn test_4_Add_1() {test_4_Add_14350,124179
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4351,124199
    type B = UInt<UTerm, B1>;B4352,124249
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U54353,124279
    type U4AddU1 = <<A as Add<B>>::Output as Same<U5>>::Output;U4AddU14356,124366
fn test_4_Mul_1() {test_4_Mul_14362,124543
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4363,124563
    type B = UInt<UTerm, B1>;B4364,124613
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44365,124643
    type U4MulU1 = <<A as Mul<B>>::Output as Same<U4>>::Output;U4MulU14368,124730
fn test_4_Pow_1() {test_4_Pow_14374,124907
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4375,124927
    type B = UInt<UTerm, B1>;B4376,124977
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44377,125007
    type U4PowU1 = <<A as Pow<B>>::Output as Same<U4>>::Output;U4PowU14380,125094
fn test_4_Min_1() {test_4_Min_14386,125271
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4387,125291
    type B = UInt<UTerm, B1>;B4388,125341
    type U1 = UInt<UTerm, B1>;U14389,125371
    type U4MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;U4MinU14392,125438
fn test_4_Max_1() {test_4_Max_14398,125615
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4399,125635
    type B = UInt<UTerm, B1>;B4400,125685
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44401,125715
    type U4MaxU1 = <<A as Max<B>>::Output as Same<U4>>::Output;U4MaxU14404,125802
fn test_4_Gcd_1() {test_4_Gcd_14410,125979
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4411,125999
    type B = UInt<UTerm, B1>;B4412,126049
    type U1 = UInt<UTerm, B1>;U14413,126079
    type U4GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U4GcdU14416,126146
fn test_4_Sub_1() {test_4_Sub_14422,126323
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4423,126343
    type B = UInt<UTerm, B1>;B4424,126393
    type U3 = UInt<UInt<UTerm, B1>, B1>;U34425,126423
    type U4SubU1 = <<A as Sub<B>>::Output as Same<U3>>::Output;U4SubU14428,126500
fn test_4_Div_1() {test_4_Div_14434,126677
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4435,126697
    type B = UInt<UTerm, B1>;B4436,126747
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44437,126777
    type U4DivU1 = <<A as Div<B>>::Output as Same<U4>>::Output;U4DivU14440,126864
fn test_4_Rem_1() {test_4_Rem_14446,127041
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4447,127061
    type B = UInt<UTerm, B1>;B4448,127111
    type U0 = UTerm;U04449,127141
    type U4RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;U4RemU14452,127198
fn test_4_PartialDiv_1() {test_4_PartialDiv_14458,127375
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4459,127402
    type B = UInt<UTerm, B1>;B4460,127452
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44461,127482
    type U4PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U4>>::Output;U4PartialDivU14464,127569
fn test_4_Cmp_1() {test_4_Cmp_14470,127767
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4471,127787
    type B = UInt<UTerm, B1>;B4472,127837
    type U4CmpU1 = <A as Cmp<B>>::Output;U4CmpU14475,127903
fn test_4_BitAnd_2() {test_4_BitAnd_24480,128048
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4481,128071
    type B = UInt<UInt<UTerm, B1>, B0>;B4482,128121
    type U0 = UTerm;U04483,128161
    type U4BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U4BitAndU24486,128218
fn test_4_BitOr_2() {test_4_BitOr_24492,128404
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4493,128426
    type B = UInt<UInt<UTerm, B1>, B0>;B4494,128476
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U64495,128516
    type U4BitOrU2 = <<A as BitOr<B>>::Output as Same<U6>>::Output;U4BitOrU24498,128603
fn test_4_BitXor_2() {test_4_BitXor_24504,128786
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4505,128809
    type B = UInt<UInt<UTerm, B1>, B0>;B4506,128859
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U64507,128899
    type U4BitXorU2 = <<A as BitXor<B>>::Output as Same<U6>>::Output;U4BitXorU24510,128986
fn test_4_Shl_2() {test_4_Shl_24516,129172
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4517,129192
    type B = UInt<UInt<UTerm, B1>, B0>;B4518,129242
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;U164519,129282
    type U4ShlU2 = <<A as Shl<B>>::Output as Same<U16>>::Output;U4ShlU24522,129390
fn test_4_Shr_2() {test_4_Shr_24528,129569
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4529,129589
    type B = UInt<UInt<UTerm, B1>, B0>;B4530,129639
    type U1 = UInt<UTerm, B1>;U14531,129679
    type U4ShrU2 = <<A as Shr<B>>::Output as Same<U1>>::Output;U4ShrU24534,129746
fn test_4_Add_2() {test_4_Add_24540,129923
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4541,129943
    type B = UInt<UInt<UTerm, B1>, B0>;B4542,129993
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U64543,130033
    type U4AddU2 = <<A as Add<B>>::Output as Same<U6>>::Output;U4AddU24546,130120
fn test_4_Mul_2() {test_4_Mul_24552,130297
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4553,130317
    type B = UInt<UInt<UTerm, B1>, B0>;B4554,130367
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U84555,130407
    type U4MulU2 = <<A as Mul<B>>::Output as Same<U8>>::Output;U4MulU24558,130504
fn test_4_Pow_2() {test_4_Pow_24564,130681
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4565,130701
    type B = UInt<UInt<UTerm, B1>, B0>;B4566,130751
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;U164567,130791
    type U4PowU2 = <<A as Pow<B>>::Output as Same<U16>>::Output;U4PowU24570,130899
fn test_4_Min_2() {test_4_Min_24576,131078
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4577,131098
    type B = UInt<UInt<UTerm, B1>, B0>;B4578,131148
    type U2 = UInt<UInt<UTerm, B1>, B0>;U24579,131188
    type U4MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;U4MinU24582,131265
fn test_4_Max_2() {test_4_Max_24588,131442
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4589,131462
    type B = UInt<UInt<UTerm, B1>, B0>;B4590,131512
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44591,131552
    type U4MaxU2 = <<A as Max<B>>::Output as Same<U4>>::Output;U4MaxU24594,131639
fn test_4_Gcd_2() {test_4_Gcd_24600,131816
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4601,131836
    type B = UInt<UInt<UTerm, B1>, B0>;B4602,131886
    type U2 = UInt<UInt<UTerm, B1>, B0>;U24603,131926
    type U4GcdU2 = <<A as Gcd<B>>::Output as Same<U2>>::Output;U4GcdU24606,132003
fn test_4_Sub_2() {test_4_Sub_24612,132180
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4613,132200
    type B = UInt<UInt<UTerm, B1>, B0>;B4614,132250
    type U2 = UInt<UInt<UTerm, B1>, B0>;U24615,132290
    type U4SubU2 = <<A as Sub<B>>::Output as Same<U2>>::Output;U4SubU24618,132367
fn test_4_Div_2() {test_4_Div_24624,132544
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4625,132564
    type B = UInt<UInt<UTerm, B1>, B0>;B4626,132614
    type U2 = UInt<UInt<UTerm, B1>, B0>;U24627,132654
    type U4DivU2 = <<A as Div<B>>::Output as Same<U2>>::Output;U4DivU24630,132731
fn test_4_Rem_2() {test_4_Rem_24636,132908
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4637,132928
    type B = UInt<UInt<UTerm, B1>, B0>;B4638,132978
    type U0 = UTerm;U04639,133018
    type U4RemU2 = <<A as Rem<B>>::Output as Same<U0>>::Output;U4RemU24642,133075
fn test_4_PartialDiv_2() {test_4_PartialDiv_24648,133252
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4649,133279
    type B = UInt<UInt<UTerm, B1>, B0>;B4650,133329
    type U2 = UInt<UInt<UTerm, B1>, B0>;U24651,133369
    type U4PartialDivU2 = <<A as PartialDiv<B>>::Output as Same<U2>>::Output;U4PartialDivU24654,133446
fn test_4_Cmp_2() {test_4_Cmp_24660,133644
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4661,133664
    type B = UInt<UInt<UTerm, B1>, B0>;B4662,133714
    type U4CmpU2 = <A as Cmp<B>>::Output;U4CmpU24665,133790
fn test_4_BitAnd_3() {test_4_BitAnd_34670,133935
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4671,133958
    type B = UInt<UInt<UTerm, B1>, B1>;B4672,134008
    type U0 = UTerm;U04673,134048
    type U4BitAndU3 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U4BitAndU34676,134105
fn test_4_BitOr_3() {test_4_BitOr_34682,134291
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4683,134313
    type B = UInt<UInt<UTerm, B1>, B1>;B4684,134363
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U74685,134403
    type U4BitOrU3 = <<A as BitOr<B>>::Output as Same<U7>>::Output;U4BitOrU34688,134490
fn test_4_BitXor_3() {test_4_BitXor_34694,134673
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4695,134696
    type B = UInt<UInt<UTerm, B1>, B1>;B4696,134746
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U74697,134786
    type U4BitXorU3 = <<A as BitXor<B>>::Output as Same<U7>>::Output;U4BitXorU34700,134873
fn test_4_Shl_3() {test_4_Shl_34706,135059
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4707,135079
    type B = UInt<UInt<UTerm, B1>, B1>;B4708,135129
    type U32 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>;U324709,135169
    type U4ShlU3 = <<A as Shl<B>>::Output as Same<U32>>::Output;U4ShlU34712,135287
fn test_4_Shr_3() {test_4_Shr_34718,135466
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4719,135486
    type B = UInt<UInt<UTerm, B1>, B1>;B4720,135536
    type U0 = UTerm;U04721,135576
    type U4ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;U4ShrU34724,135633
fn test_4_Add_3() {test_4_Add_34730,135810
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4731,135830
    type B = UInt<UInt<UTerm, B1>, B1>;B4732,135880
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U74733,135920
    type U4AddU3 = <<A as Add<B>>::Output as Same<U7>>::Output;U4AddU34736,136007
fn test_4_Mul_3() {test_4_Mul_34742,136184
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4743,136204
    type B = UInt<UInt<UTerm, B1>, B1>;B4744,136254
    type U12 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>;U124745,136294
    type U4MulU3 = <<A as Mul<B>>::Output as Same<U12>>::Output;U4MulU34748,136392
fn test_4_Pow_3() {test_4_Pow_34754,136571
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4755,136591
    type B = UInt<UInt<UTerm, B1>, B1>;B4756,136641
    type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;U644757,136681
    type U4PowU3 = <<A as Pow<B>>::Output as Same<U64>>::Output;U4PowU34760,136809
fn test_4_Min_3() {test_4_Min_34766,136988
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4767,137008
    type B = UInt<UInt<UTerm, B1>, B1>;B4768,137058
    type U3 = UInt<UInt<UTerm, B1>, B1>;U34769,137098
    type U4MinU3 = <<A as Min<B>>::Output as Same<U3>>::Output;U4MinU34772,137175
fn test_4_Max_3() {test_4_Max_34778,137352
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4779,137372
    type B = UInt<UInt<UTerm, B1>, B1>;B4780,137422
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44781,137462
    type U4MaxU3 = <<A as Max<B>>::Output as Same<U4>>::Output;U4MaxU34784,137549
fn test_4_Gcd_3() {test_4_Gcd_34790,137726
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4791,137746
    type B = UInt<UInt<UTerm, B1>, B1>;B4792,137796
    type U1 = UInt<UTerm, B1>;U14793,137836
    type U4GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U4GcdU34796,137903
fn test_4_Sub_3() {test_4_Sub_34802,138080
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4803,138100
    type B = UInt<UInt<UTerm, B1>, B1>;B4804,138150
    type U1 = UInt<UTerm, B1>;U14805,138190
    type U4SubU3 = <<A as Sub<B>>::Output as Same<U1>>::Output;U4SubU34808,138257
fn test_4_Div_3() {test_4_Div_34814,138434
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4815,138454
    type B = UInt<UInt<UTerm, B1>, B1>;B4816,138504
    type U1 = UInt<UTerm, B1>;U14817,138544
    type U4DivU3 = <<A as Div<B>>::Output as Same<U1>>::Output;U4DivU34820,138611
fn test_4_Rem_3() {test_4_Rem_34826,138788
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4827,138808
    type B = UInt<UInt<UTerm, B1>, B1>;B4828,138858
    type U1 = UInt<UTerm, B1>;U14829,138898
    type U4RemU3 = <<A as Rem<B>>::Output as Same<U1>>::Output;U4RemU34832,138965
fn test_4_Cmp_3() {test_4_Cmp_34838,139142
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4839,139162
    type B = UInt<UInt<UTerm, B1>, B1>;B4840,139212
    type U4CmpU3 = <A as Cmp<B>>::Output;U4CmpU34843,139288
fn test_4_BitAnd_4() {test_4_BitAnd_44848,139433
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4849,139456
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4850,139506
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44851,139556
    type U4BitAndU4 = <<A as BitAnd<B>>::Output as Same<U4>>::Output;U4BitAndU44854,139643
fn test_4_BitOr_4() {test_4_BitOr_44860,139829
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4861,139851
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4862,139901
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44863,139951
    type U4BitOrU4 = <<A as BitOr<B>>::Output as Same<U4>>::Output;U4BitOrU44866,140038
fn test_4_BitXor_4() {test_4_BitXor_44872,140221
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4873,140244
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4874,140294
    type U0 = UTerm;U04875,140344
    type U4BitXorU4 = <<A as BitXor<B>>::Output as Same<U0>>::Output;U4BitXorU44878,140401
fn test_4_Shl_4() {test_4_Shl_44884,140587
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4885,140607
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4886,140657
    type U64 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>;U644887,140707
    type U4ShlU4 = <<A as Shl<B>>::Output as Same<U64>>::Output;U4ShlU44890,140835
fn test_4_Shr_4() {test_4_Shr_44896,141014
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4897,141034
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4898,141084
    type U0 = UTerm;U04899,141134
    type U4ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;U4ShrU44902,141191
fn test_4_Add_4() {test_4_Add_44908,141368
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4909,141388
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4910,141438
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U84911,141488
    type U4AddU4 = <<A as Add<B>>::Output as Same<U8>>::Output;U4AddU44914,141585
fn test_4_Mul_4() {test_4_Mul_44920,141762
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4921,141782
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4922,141832
    type U16 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>;U164923,141882
    type U4MulU4 = <<A as Mul<B>>::Output as Same<U16>>::Output;U4MulU44926,141990
fn test_4_Pow_4() {test_4_Pow_44932,142169
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4933,142189
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4934,142239
    type U256 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>U2564935,142289
    type U4PowU4 = <<A as Pow<B>>::Output as Same<U256>>::Output;U4PowU44938,142438
fn test_4_Min_4() {test_4_Min_44944,142619
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4945,142639
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4946,142689
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44947,142739
    type U4MinU4 = <<A as Min<B>>::Output as Same<U4>>::Output;U4MinU44950,142826
fn test_4_Max_4() {test_4_Max_44956,143003
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4957,143023
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4958,143073
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44959,143123
    type U4MaxU4 = <<A as Max<B>>::Output as Same<U4>>::Output;U4MaxU44962,143210
fn test_4_Gcd_4() {test_4_Gcd_44968,143387
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4969,143407
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4970,143457
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U44971,143507
    type U4GcdU4 = <<A as Gcd<B>>::Output as Same<U4>>::Output;U4GcdU44974,143594
fn test_4_Sub_4() {test_4_Sub_44980,143771
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4981,143791
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4982,143841
    type U0 = UTerm;U04983,143891
    type U4SubU4 = <<A as Sub<B>>::Output as Same<U0>>::Output;U4SubU44986,143948
fn test_4_Div_4() {test_4_Div_44992,144125
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A4993,144145
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B4994,144195
    type U1 = UInt<UTerm, B1>;U14995,144245
    type U4DivU4 = <<A as Div<B>>::Output as Same<U1>>::Output;U4DivU44998,144312
fn test_4_Rem_4() {test_4_Rem_45004,144489
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5005,144509
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5006,144559
    type U0 = UTerm;U05007,144609
    type U4RemU4 = <<A as Rem<B>>::Output as Same<U0>>::Output;U4RemU45010,144666
fn test_4_PartialDiv_4() {test_4_PartialDiv_45016,144843
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5017,144870
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5018,144920
    type U1 = UInt<UTerm, B1>;U15019,144970
    type U4PartialDivU4 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;U4PartialDivU45022,145037
fn test_4_Cmp_4() {test_4_Cmp_45028,145235
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5029,145255
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5030,145305
    type U4CmpU4 = <A as Cmp<B>>::Output;U4CmpU45033,145391
fn test_4_BitAnd_5() {test_4_BitAnd_55038,145534
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5039,145557
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5040,145607
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U45041,145657
    type U4BitAndU5 = <<A as BitAnd<B>>::Output as Same<U4>>::Output;U4BitAndU55044,145744
fn test_4_BitOr_5() {test_4_BitOr_55050,145930
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5051,145952
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5052,146002
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55053,146052
    type U4BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U4BitOrU55056,146139
fn test_4_BitXor_5() {test_4_BitXor_55062,146322
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5063,146345
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5064,146395
    type U1 = UInt<UTerm, B1>;U15065,146445
    type U4BitXorU5 = <<A as BitXor<B>>::Output as Same<U1>>::Output;U4BitXorU55068,146512
fn test_4_Shl_5() {test_4_Shl_55074,146698
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5075,146718
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5076,146768
    type U128 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>U1285077,146818
    type U4ShlU5 = <<A as Shl<B>>::Output as Same<U128>>::Output;U4ShlU55080,146957
fn test_4_Shr_5() {test_4_Shr_55086,147138
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5087,147158
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5088,147208
    type U0 = UTerm;U05089,147258
    type U4ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;U4ShrU55092,147315
fn test_4_Add_5() {test_4_Add_55098,147492
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5099,147512
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5100,147562
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;U95101,147612
    type U4AddU5 = <<A as Add<B>>::Output as Same<U9>>::Output;U4AddU55104,147709
fn test_4_Mul_5() {test_4_Mul_55110,147886
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5111,147906
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5112,147956
    type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;U205113,148006
    type U4MulU5 = <<A as Mul<B>>::Output as Same<U20>>::Output;U4MulU55116,148114
fn test_4_Pow_5() {test_4_Pow_55122,148293
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5123,148313
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5124,148363
    type U1024 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0U10245125,148413
    type U4PowU5 = <<A as Pow<B>>::Output as Same<U1024>>::Output;U4PowU55128,148583
fn test_4_Min_5() {test_4_Min_55134,148766
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5135,148786
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5136,148836
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U45137,148886
    type U4MinU5 = <<A as Min<B>>::Output as Same<U4>>::Output;U4MinU55140,148973
fn test_4_Max_5() {test_4_Max_55146,149150
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5147,149170
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5148,149220
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55149,149270
    type U4MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;U4MaxU55152,149357
fn test_4_Gcd_5() {test_4_Gcd_55158,149534
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5159,149554
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5160,149604
    type U1 = UInt<UTerm, B1>;U15161,149654
    type U4GcdU5 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U4GcdU55164,149721
fn test_4_Div_5() {test_4_Div_55170,149898
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5171,149918
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5172,149968
    type U0 = UTerm;U05173,150018
    type U4DivU5 = <<A as Div<B>>::Output as Same<U0>>::Output;U4DivU55176,150075
fn test_4_Rem_5() {test_4_Rem_55182,150252
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5183,150272
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5184,150322
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U45185,150372
    type U4RemU5 = <<A as Rem<B>>::Output as Same<U4>>::Output;U4RemU55188,150459
fn test_4_Cmp_5() {test_4_Cmp_55194,150636
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;A5195,150656
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B5196,150706
    type U4CmpU5 = <A as Cmp<B>>::Output;U4CmpU55199,150792
fn test_5_BitAnd_0() {test_5_BitAnd_05204,150934
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5205,150957
    type B = UTerm;B5206,151007
    type U0 = UTerm;U05207,151027
    type U5BitAndU0 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U5BitAndU05210,151084
fn test_5_BitOr_0() {test_5_BitOr_05216,151270
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5217,151292
    type B = UTerm;B5218,151342
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55219,151362
    type U5BitOrU0 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U5BitOrU05222,151449
fn test_5_BitXor_0() {test_5_BitXor_05228,151632
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5229,151655
    type B = UTerm;B5230,151705
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55231,151725
    type U5BitXorU0 = <<A as BitXor<B>>::Output as Same<U5>>::Output;U5BitXorU05234,151812
fn test_5_Shl_0() {test_5_Shl_05240,151998
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5241,152018
    type B = UTerm;B5242,152068
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55243,152088
    type U5ShlU0 = <<A as Shl<B>>::Output as Same<U5>>::Output;U5ShlU05246,152175
fn test_5_Shr_0() {test_5_Shr_05252,152352
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5253,152372
    type B = UTerm;B5254,152422
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55255,152442
    type U5ShrU0 = <<A as Shr<B>>::Output as Same<U5>>::Output;U5ShrU05258,152529
fn test_5_Add_0() {test_5_Add_05264,152706
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5265,152726
    type B = UTerm;B5266,152776
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55267,152796
    type U5AddU0 = <<A as Add<B>>::Output as Same<U5>>::Output;U5AddU05270,152883
fn test_5_Mul_0() {test_5_Mul_05276,153060
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5277,153080
    type B = UTerm;B5278,153130
    type U0 = UTerm;U05279,153150
    type U5MulU0 = <<A as Mul<B>>::Output as Same<U0>>::Output;U5MulU05282,153207
fn test_5_Pow_0() {test_5_Pow_05288,153384
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5289,153404
    type B = UTerm;B5290,153454
    type U1 = UInt<UTerm, B1>;U15291,153474
    type U5PowU0 = <<A as Pow<B>>::Output as Same<U1>>::Output;U5PowU05294,153541
fn test_5_Min_0() {test_5_Min_05300,153718
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5301,153738
    type B = UTerm;B5302,153788
    type U0 = UTerm;U05303,153808
    type U5MinU0 = <<A as Min<B>>::Output as Same<U0>>::Output;U5MinU05306,153865
fn test_5_Max_0() {test_5_Max_05312,154042
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5313,154062
    type B = UTerm;B5314,154112
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55315,154132
    type U5MaxU0 = <<A as Max<B>>::Output as Same<U5>>::Output;U5MaxU05318,154219
fn test_5_Gcd_0() {test_5_Gcd_05324,154396
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5325,154416
    type B = UTerm;B5326,154466
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55327,154486
    type U5GcdU0 = <<A as Gcd<B>>::Output as Same<U5>>::Output;U5GcdU05330,154573
fn test_5_Sub_0() {test_5_Sub_05336,154750
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5337,154770
    type B = UTerm;B5338,154820
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55339,154840
    type U5SubU0 = <<A as Sub<B>>::Output as Same<U5>>::Output;U5SubU05342,154927
fn test_5_Cmp_0() {test_5_Cmp_05348,155104
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5349,155124
    type B = UTerm;B5350,155174
    type U5CmpU0 = <A as Cmp<B>>::Output;U5CmpU05353,155230
fn test_5_BitAnd_1() {test_5_BitAnd_15358,155375
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5359,155398
    type B = UInt<UTerm, B1>;B5360,155448
    type U1 = UInt<UTerm, B1>;U15361,155478
    type U5BitAndU1 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U5BitAndU15364,155545
fn test_5_BitOr_1() {test_5_BitOr_15370,155731
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5371,155753
    type B = UInt<UTerm, B1>;B5372,155803
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55373,155833
    type U5BitOrU1 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U5BitOrU15376,155920
fn test_5_BitXor_1() {test_5_BitXor_15382,156103
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5383,156126
    type B = UInt<UTerm, B1>;B5384,156176
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U45385,156206
    type U5BitXorU1 = <<A as BitXor<B>>::Output as Same<U4>>::Output;U5BitXorU15388,156293
fn test_5_Shl_1() {test_5_Shl_15394,156479
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5395,156499
    type B = UInt<UTerm, B1>;B5396,156549
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;U105397,156579
    type U5ShlU1 = <<A as Shl<B>>::Output as Same<U10>>::Output;U5ShlU15400,156677
fn test_5_Shr_1() {test_5_Shr_15406,156856
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5407,156876
    type B = UInt<UTerm, B1>;B5408,156926
    type U2 = UInt<UInt<UTerm, B1>, B0>;U25409,156956
    type U5ShrU1 = <<A as Shr<B>>::Output as Same<U2>>::Output;U5ShrU15412,157033
fn test_5_Add_1() {test_5_Add_15418,157210
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5419,157230
    type B = UInt<UTerm, B1>;B5420,157280
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U65421,157310
    type U5AddU1 = <<A as Add<B>>::Output as Same<U6>>::Output;U5AddU15424,157397
fn test_5_Mul_1() {test_5_Mul_15430,157574
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5431,157594
    type B = UInt<UTerm, B1>;B5432,157644
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55433,157674
    type U5MulU1 = <<A as Mul<B>>::Output as Same<U5>>::Output;U5MulU15436,157761
fn test_5_Pow_1() {test_5_Pow_15442,157938
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5443,157958
    type B = UInt<UTerm, B1>;B5444,158008
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55445,158038
    type U5PowU1 = <<A as Pow<B>>::Output as Same<U5>>::Output;U5PowU15448,158125
fn test_5_Min_1() {test_5_Min_15454,158302
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5455,158322
    type B = UInt<UTerm, B1>;B5456,158372
    type U1 = UInt<UTerm, B1>;U15457,158402
    type U5MinU1 = <<A as Min<B>>::Output as Same<U1>>::Output;U5MinU15460,158469
fn test_5_Max_1() {test_5_Max_15466,158646
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5467,158666
    type B = UInt<UTerm, B1>;B5468,158716
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55469,158746
    type U5MaxU1 = <<A as Max<B>>::Output as Same<U5>>::Output;U5MaxU15472,158833
fn test_5_Gcd_1() {test_5_Gcd_15478,159010
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5479,159030
    type B = UInt<UTerm, B1>;B5480,159080
    type U1 = UInt<UTerm, B1>;U15481,159110
    type U5GcdU1 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U5GcdU15484,159177
fn test_5_Sub_1() {test_5_Sub_15490,159354
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5491,159374
    type B = UInt<UTerm, B1>;B5492,159424
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U45493,159454
    type U5SubU1 = <<A as Sub<B>>::Output as Same<U4>>::Output;U5SubU15496,159541
fn test_5_Div_1() {test_5_Div_15502,159718
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5503,159738
    type B = UInt<UTerm, B1>;B5504,159788
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55505,159818
    type U5DivU1 = <<A as Div<B>>::Output as Same<U5>>::Output;U5DivU15508,159905
fn test_5_Rem_1() {test_5_Rem_15514,160082
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5515,160102
    type B = UInt<UTerm, B1>;B5516,160152
    type U0 = UTerm;U05517,160182
    type U5RemU1 = <<A as Rem<B>>::Output as Same<U0>>::Output;U5RemU15520,160239
fn test_5_PartialDiv_1() {test_5_PartialDiv_15526,160416
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5527,160443
    type B = UInt<UTerm, B1>;B5528,160493
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55529,160523
    type U5PartialDivU1 = <<A as PartialDiv<B>>::Output as Same<U5>>::Output;U5PartialDivU15532,160610
fn test_5_Cmp_1() {test_5_Cmp_15538,160808
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5539,160828
    type B = UInt<UTerm, B1>;B5540,160878
    type U5CmpU1 = <A as Cmp<B>>::Output;U5CmpU15543,160944
fn test_5_BitAnd_2() {test_5_BitAnd_25548,161089
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5549,161112
    type B = UInt<UInt<UTerm, B1>, B0>;B5550,161162
    type U0 = UTerm;U05551,161202
    type U5BitAndU2 = <<A as BitAnd<B>>::Output as Same<U0>>::Output;U5BitAndU25554,161259
fn test_5_BitOr_2() {test_5_BitOr_25560,161445
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5561,161467
    type B = UInt<UInt<UTerm, B1>, B0>;B5562,161517
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U75563,161557
    type U5BitOrU2 = <<A as BitOr<B>>::Output as Same<U7>>::Output;U5BitOrU25566,161644
fn test_5_BitXor_2() {test_5_BitXor_25572,161827
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5573,161850
    type B = UInt<UInt<UTerm, B1>, B0>;B5574,161900
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U75575,161940
    type U5BitXorU2 = <<A as BitXor<B>>::Output as Same<U7>>::Output;U5BitXorU25578,162027
fn test_5_Shl_2() {test_5_Shl_25584,162213
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5585,162233
    type B = UInt<UInt<UTerm, B1>, B0>;B5586,162283
    type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;U205587,162323
    type U5ShlU2 = <<A as Shl<B>>::Output as Same<U20>>::Output;U5ShlU25590,162431
fn test_5_Shr_2() {test_5_Shr_25596,162610
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5597,162630
    type B = UInt<UInt<UTerm, B1>, B0>;B5598,162680
    type U1 = UInt<UTerm, B1>;U15599,162720
    type U5ShrU2 = <<A as Shr<B>>::Output as Same<U1>>::Output;U5ShrU25602,162787
fn test_5_Add_2() {test_5_Add_25608,162964
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5609,162984
    type B = UInt<UInt<UTerm, B1>, B0>;B5610,163034
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U75611,163074
    type U5AddU2 = <<A as Add<B>>::Output as Same<U7>>::Output;U5AddU25614,163161
fn test_5_Mul_2() {test_5_Mul_25620,163338
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5621,163358
    type B = UInt<UInt<UTerm, B1>, B0>;B5622,163408
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;U105623,163448
    type U5MulU2 = <<A as Mul<B>>::Output as Same<U10>>::Output;U5MulU25626,163546
fn test_5_Pow_2() {test_5_Pow_25632,163725
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5633,163745
    type B = UInt<UInt<UTerm, B1>, B0>;B5634,163795
    type U25 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>;U255635,163835
    type U5PowU2 = <<A as Pow<B>>::Output as Same<U25>>::Output;U5PowU25638,163943
fn test_5_Min_2() {test_5_Min_25644,164122
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5645,164142
    type B = UInt<UInt<UTerm, B1>, B0>;B5646,164192
    type U2 = UInt<UInt<UTerm, B1>, B0>;U25647,164232
    type U5MinU2 = <<A as Min<B>>::Output as Same<U2>>::Output;U5MinU25650,164309
fn test_5_Max_2() {test_5_Max_25656,164486
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5657,164506
    type B = UInt<UInt<UTerm, B1>, B0>;B5658,164556
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55659,164596
    type U5MaxU2 = <<A as Max<B>>::Output as Same<U5>>::Output;U5MaxU25662,164683
fn test_5_Gcd_2() {test_5_Gcd_25668,164860
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5669,164880
    type B = UInt<UInt<UTerm, B1>, B0>;B5670,164930
    type U1 = UInt<UTerm, B1>;U15671,164970
    type U5GcdU2 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U5GcdU25674,165037
fn test_5_Sub_2() {test_5_Sub_25680,165214
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5681,165234
    type B = UInt<UInt<UTerm, B1>, B0>;B5682,165284
    type U3 = UInt<UInt<UTerm, B1>, B1>;U35683,165324
    type U5SubU2 = <<A as Sub<B>>::Output as Same<U3>>::Output;U5SubU25686,165401
fn test_5_Div_2() {test_5_Div_25692,165578
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5693,165598
    type B = UInt<UInt<UTerm, B1>, B0>;B5694,165648
    type U2 = UInt<UInt<UTerm, B1>, B0>;U25695,165688
    type U5DivU2 = <<A as Div<B>>::Output as Same<U2>>::Output;U5DivU25698,165765
fn test_5_Rem_2() {test_5_Rem_25704,165942
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5705,165962
    type B = UInt<UInt<UTerm, B1>, B0>;B5706,166012
    type U1 = UInt<UTerm, B1>;U15707,166052
    type U5RemU2 = <<A as Rem<B>>::Output as Same<U1>>::Output;U5RemU25710,166119
fn test_5_Cmp_2() {test_5_Cmp_25716,166296
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5717,166316
    type B = UInt<UInt<UTerm, B1>, B0>;B5718,166366
    type U5CmpU2 = <A as Cmp<B>>::Output;U5CmpU25721,166442
fn test_5_BitAnd_3() {test_5_BitAnd_35726,166587
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5727,166610
    type B = UInt<UInt<UTerm, B1>, B1>;B5728,166660
    type U1 = UInt<UTerm, B1>;U15729,166700
    type U5BitAndU3 = <<A as BitAnd<B>>::Output as Same<U1>>::Output;U5BitAndU35732,166767
fn test_5_BitOr_3() {test_5_BitOr_35738,166953
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5739,166975
    type B = UInt<UInt<UTerm, B1>, B1>;B5740,167025
    type U7 = UInt<UInt<UInt<UTerm, B1>, B1>, B1>;U75741,167065
    type U5BitOrU3 = <<A as BitOr<B>>::Output as Same<U7>>::Output;U5BitOrU35744,167152
fn test_5_BitXor_3() {test_5_BitXor_35750,167335
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5751,167358
    type B = UInt<UInt<UTerm, B1>, B1>;B5752,167408
    type U6 = UInt<UInt<UInt<UTerm, B1>, B1>, B0>;U65753,167448
    type U5BitXorU3 = <<A as BitXor<B>>::Output as Same<U6>>::Output;U5BitXorU35756,167535
fn test_5_Shl_3() {test_5_Shl_35762,167721
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5763,167741
    type B = UInt<UInt<UTerm, B1>, B1>;B5764,167791
    type U40 = UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>;U405765,167831
    type U5ShlU3 = <<A as Shl<B>>::Output as Same<U40>>::Output;U5ShlU35768,167949
fn test_5_Shr_3() {test_5_Shr_35774,168128
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5775,168148
    type B = UInt<UInt<UTerm, B1>, B1>;B5776,168198
    type U0 = UTerm;U05777,168238
    type U5ShrU3 = <<A as Shr<B>>::Output as Same<U0>>::Output;U5ShrU35780,168295
fn test_5_Add_3() {test_5_Add_35786,168472
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5787,168492
    type B = UInt<UInt<UTerm, B1>, B1>;B5788,168542
    type U8 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>;U85789,168582
    type U5AddU3 = <<A as Add<B>>::Output as Same<U8>>::Output;U5AddU35792,168679
fn test_5_Mul_3() {test_5_Mul_35798,168856
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5799,168876
    type B = UInt<UInt<UTerm, B1>, B1>;B5800,168926
    type U15 = UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>;U155801,168966
    type U5MulU3 = <<A as Mul<B>>::Output as Same<U15>>::Output;U5MulU35804,169064
fn test_5_Pow_3() {test_5_Pow_35810,169243
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5811,169263
    type B = UInt<UInt<UTerm, B1>, B1>;B5812,169313
    type U125 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>;U1255813,169353
    type U5PowU3 = <<A as Pow<B>>::Output as Same<U125>>::Output;U5PowU35816,169482
fn test_5_Min_3() {test_5_Min_35822,169663
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5823,169683
    type B = UInt<UInt<UTerm, B1>, B1>;B5824,169733
    type U3 = UInt<UInt<UTerm, B1>, B1>;U35825,169773
    type U5MinU3 = <<A as Min<B>>::Output as Same<U3>>::Output;U5MinU35828,169850
fn test_5_Max_3() {test_5_Max_35834,170027
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5835,170047
    type B = UInt<UInt<UTerm, B1>, B1>;B5836,170097
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55837,170137
    type U5MaxU3 = <<A as Max<B>>::Output as Same<U5>>::Output;U5MaxU35840,170224
fn test_5_Gcd_3() {test_5_Gcd_35846,170401
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5847,170421
    type B = UInt<UInt<UTerm, B1>, B1>;B5848,170471
    type U1 = UInt<UTerm, B1>;U15849,170511
    type U5GcdU3 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U5GcdU35852,170578
fn test_5_Sub_3() {test_5_Sub_35858,170755
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5859,170775
    type B = UInt<UInt<UTerm, B1>, B1>;B5860,170825
    type U2 = UInt<UInt<UTerm, B1>, B0>;U25861,170865
    type U5SubU3 = <<A as Sub<B>>::Output as Same<U2>>::Output;U5SubU35864,170942
fn test_5_Div_3() {test_5_Div_35870,171119
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5871,171139
    type B = UInt<UInt<UTerm, B1>, B1>;B5872,171189
    type U1 = UInt<UTerm, B1>;U15873,171229
    type U5DivU3 = <<A as Div<B>>::Output as Same<U1>>::Output;U5DivU35876,171296
fn test_5_Rem_3() {test_5_Rem_35882,171473
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5883,171493
    type B = UInt<UInt<UTerm, B1>, B1>;B5884,171543
    type U2 = UInt<UInt<UTerm, B1>, B0>;U25885,171583
    type U5RemU3 = <<A as Rem<B>>::Output as Same<U2>>::Output;U5RemU35888,171660
fn test_5_Cmp_3() {test_5_Cmp_35894,171837
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5895,171857
    type B = UInt<UInt<UTerm, B1>, B1>;B5896,171907
    type U5CmpU3 = <A as Cmp<B>>::Output;U5CmpU35899,171983
fn test_5_BitAnd_4() {test_5_BitAnd_45904,172128
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5905,172151
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5906,172201
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U45907,172251
    type U5BitAndU4 = <<A as BitAnd<B>>::Output as Same<U4>>::Output;U5BitAndU45910,172338
fn test_5_BitOr_4() {test_5_BitOr_45916,172524
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5917,172546
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5918,172596
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U55919,172646
    type U5BitOrU4 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U5BitOrU45922,172733
fn test_5_BitXor_4() {test_5_BitXor_45928,172916
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5929,172939
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5930,172989
    type U1 = UInt<UTerm, B1>;U15931,173039
    type U5BitXorU4 = <<A as BitXor<B>>::Output as Same<U1>>::Output;U5BitXorU45934,173106
fn test_5_Shl_4() {test_5_Shl_45940,173292
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5941,173312
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5942,173362
    type U80 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>;U805943,173412
    type U5ShlU4 = <<A as Shl<B>>::Output as Same<U80>>::Output;U5ShlU45946,173540
fn test_5_Shr_4() {test_5_Shr_45952,173719
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5953,173739
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5954,173789
    type U0 = UTerm;U05955,173839
    type U5ShrU4 = <<A as Shr<B>>::Output as Same<U0>>::Output;U5ShrU45958,173896
fn test_5_Add_4() {test_5_Add_45964,174073
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5965,174093
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5966,174143
    type U9 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>;U95967,174193
    type U5AddU4 = <<A as Add<B>>::Output as Same<U9>>::Output;U5AddU45970,174290
fn test_5_Mul_4() {test_5_Mul_45976,174467
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5977,174487
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5978,174537
    type U20 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>;U205979,174587
    type U5MulU4 = <<A as Mul<B>>::Output as Same<U20>>::Output;U5MulU45982,174695
fn test_5_Pow_4() {test_5_Pow_45988,174874
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A5989,174894
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B5990,174944
    type U625 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>, B1>U6255991,174994
    type U5PowU4 = <<A as Pow<B>>::Output as Same<U625>>::Output;U5PowU45994,175153
fn test_5_Min_4() {test_5_Min_46000,175334
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6001,175354
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6002,175404
    type U4 = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;U46003,175454
    type U5MinU4 = <<A as Min<B>>::Output as Same<U4>>::Output;U5MinU46006,175541
fn test_5_Max_4() {test_5_Max_46012,175718
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6013,175738
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6014,175788
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U56015,175838
    type U5MaxU4 = <<A as Max<B>>::Output as Same<U5>>::Output;U5MaxU46018,175925
fn test_5_Gcd_4() {test_5_Gcd_46024,176102
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6025,176122
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6026,176172
    type U1 = UInt<UTerm, B1>;U16027,176222
    type U5GcdU4 = <<A as Gcd<B>>::Output as Same<U1>>::Output;U5GcdU46030,176289
fn test_5_Sub_4() {test_5_Sub_46036,176466
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6037,176486
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6038,176536
    type U1 = UInt<UTerm, B1>;U16039,176586
    type U5SubU4 = <<A as Sub<B>>::Output as Same<U1>>::Output;U5SubU46042,176653
fn test_5_Div_4() {test_5_Div_46048,176830
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6049,176850
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6050,176900
    type U1 = UInt<UTerm, B1>;U16051,176950
    type U5DivU4 = <<A as Div<B>>::Output as Same<U1>>::Output;U5DivU46054,177017
fn test_5_Rem_4() {test_5_Rem_46060,177194
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6061,177214
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6062,177264
    type U1 = UInt<UTerm, B1>;U16063,177314
    type U5RemU4 = <<A as Rem<B>>::Output as Same<U1>>::Output;U5RemU46066,177381
fn test_5_Cmp_4() {test_5_Cmp_46072,177558
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6073,177578
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B0>;B6074,177628
    type U5CmpU4 = <A as Cmp<B>>::Output;U5CmpU46077,177714
fn test_5_BitAnd_5() {test_5_BitAnd_56082,177859
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6083,177882
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6084,177932
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U56085,177982
    type U5BitAndU5 = <<A as BitAnd<B>>::Output as Same<U5>>::Output;U5BitAndU56088,178069
fn test_5_BitOr_5() {test_5_BitOr_56094,178255
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6095,178277
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6096,178327
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U56097,178377
    type U5BitOrU5 = <<A as BitOr<B>>::Output as Same<U5>>::Output;U5BitOrU56100,178464
fn test_5_BitXor_5() {test_5_BitXor_56106,178647
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6107,178670
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6108,178720
    type U0 = UTerm;U06109,178770
    type U5BitXorU5 = <<A as BitXor<B>>::Output as Same<U0>>::Output;U5BitXorU56112,178827
fn test_5_Shl_5() {test_5_Shl_56118,179013
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6119,179033
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6120,179083
    type U160 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B0>U1606121,179133
    type U5ShlU5 = <<A as Shl<B>>::Output as Same<U160>>::Output;U5ShlU56124,179272
fn test_5_Shr_5() {test_5_Shr_56130,179453
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6131,179473
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6132,179523
    type U0 = UTerm;U06133,179573
    type U5ShrU5 = <<A as Shr<B>>::Output as Same<U0>>::Output;U5ShrU56136,179630
fn test_5_Add_5() {test_5_Add_56142,179807
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6143,179827
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6144,179877
    type U10 = UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>;U106145,179927
    type U5AddU5 = <<A as Add<B>>::Output as Same<U10>>::Output;U5AddU56148,180025
fn test_5_Mul_5() {test_5_Mul_56154,180204
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6155,180224
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6156,180274
    type U25 = UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>;U256157,180324
    type U5MulU5 = <<A as Mul<B>>::Output as Same<U25>>::Output;U5MulU56160,180432
fn test_5_Pow_5() {test_5_Pow_56166,180611
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6167,180631
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6168,180681
    type U3125 = UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0U31256169,180731
    type U5PowU5 = <<A as Pow<B>>::Output as Same<U3125>>::Output;U5PowU56172,180911
fn test_5_Min_5() {test_5_Min_56178,181094
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6179,181114
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6180,181164
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U56181,181214
    type U5MinU5 = <<A as Min<B>>::Output as Same<U5>>::Output;U5MinU56184,181301
fn test_5_Max_5() {test_5_Max_56190,181478
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6191,181498
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6192,181548
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U56193,181598
    type U5MaxU5 = <<A as Max<B>>::Output as Same<U5>>::Output;U5MaxU56196,181685
fn test_5_Gcd_5() {test_5_Gcd_56202,181862
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6203,181882
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6204,181932
    type U5 = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;U56205,181982
    type U5GcdU5 = <<A as Gcd<B>>::Output as Same<U5>>::Output;U5GcdU56208,182069
fn test_5_Sub_5() {test_5_Sub_56214,182246
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6215,182266
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6216,182316
    type U0 = UTerm;U06217,182366
    type U5SubU5 = <<A as Sub<B>>::Output as Same<U0>>::Output;U5SubU56220,182423
fn test_5_Div_5() {test_5_Div_56226,182600
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6227,182620
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6228,182670
    type U1 = UInt<UTerm, B1>;U16229,182720
    type U5DivU5 = <<A as Div<B>>::Output as Same<U1>>::Output;U5DivU56232,182787
fn test_5_Rem_5() {test_5_Rem_56238,182964
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6239,182984
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6240,183034
    type U0 = UTerm;U06241,183084
    type U5RemU5 = <<A as Rem<B>>::Output as Same<U0>>::Output;U5RemU56244,183141
fn test_5_PartialDiv_5() {test_5_PartialDiv_56250,183318
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6251,183345
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6252,183395
    type U1 = UInt<UTerm, B1>;U16253,183445
    type U5PartialDivU5 = <<A as PartialDiv<B>>::Output as Same<U1>>::Output;U5PartialDivU56256,183512
fn test_5_Cmp_5() {test_5_Cmp_56262,183710
    type A = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;A6263,183730
    type B = UInt<UInt<UInt<UTerm, B1>, B0>, B1>;B6264,183780
    type U5CmpU5 = <A as Cmp<B>>::Output;U5CmpU56267,183866
fn test_N5_Add_N5() {test_N5_Add_N56272,184009
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6273,184031
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6274,184087
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;N106275,184143
    type N5AddN5 = <<A as Add<B>>::Output as Same<N10>>::Output;N5AddN56278,184247
fn test_N5_Sub_N5() {test_N5_Sub_N56284,184424
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6285,184446
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6286,184502
    type _0 = Z0;_06287,184558
    type N5SubN5 = <<A as Sub<B>>::Output as Same<_0>>::Output;N5SubN56290,184612
fn test_N5_Mul_N5() {test_N5_Mul_N56296,184787
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6297,184809
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6298,184865
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;P256299,184921
    type N5MulN5 = <<A as Mul<B>>::Output as Same<P25>>::Output;N5MulN56302,185035
fn test_N5_Min_N5() {test_N5_Min_N56308,185212
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6309,185234
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6310,185290
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56311,185346
    type N5MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinN56314,185439
fn test_N5_Max_N5() {test_N5_Max_N56320,185614
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6321,185636
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6322,185692
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56323,185748
    type N5MaxN5 = <<A as Max<B>>::Output as Same<N5>>::Output;N5MaxN56326,185841
fn test_N5_Gcd_N5() {test_N5_Gcd_N56332,186016
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6333,186038
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6334,186094
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P56335,186150
    type N5GcdN5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;N5GcdN56338,186243
fn test_N5_Div_N5() {test_N5_Div_N56344,186418
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6345,186440
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6346,186496
    type P1 = PInt<UInt<UTerm, B1>>;P16347,186552
    type N5DivN5 = <<A as Div<B>>::Output as Same<P1>>::Output;N5DivN56350,186625
fn test_N5_Rem_N5() {test_N5_Rem_N56356,186800
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6357,186822
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6358,186878
    type _0 = Z0;_06359,186934
    type N5RemN5 = <<A as Rem<B>>::Output as Same<_0>>::Output;N5RemN56362,186988
fn test_N5_PartialDiv_N5() {test_N5_PartialDiv_N56368,187163
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6369,187192
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6370,187248
    type P1 = PInt<UInt<UTerm, B1>>;P16371,187304
    type N5PartialDivN5 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;N5PartialDivN56374,187377
fn test_N5_Cmp_N5() {test_N5_Cmp_N56380,187573
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6381,187595
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B6382,187651
    type N5CmpN5 = <A as Cmp<B>>::Output;N5CmpN56385,187743
fn test_N5_Add_N4() {test_N5_Add_N46390,187886
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6391,187908
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6392,187964
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;N96393,188020
    type N5AddN4 = <<A as Add<B>>::Output as Same<N9>>::Output;N5AddN46396,188123
fn test_N5_Sub_N4() {test_N5_Sub_N46402,188298
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6403,188320
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6404,188376
    type N1 = NInt<UInt<UTerm, B1>>;N16405,188432
    type N5SubN4 = <<A as Sub<B>>::Output as Same<N1>>::Output;N5SubN46408,188505
fn test_N5_Mul_N4() {test_N5_Mul_N46414,188680
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6415,188702
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6416,188758
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;P206417,188814
    type N5MulN4 = <<A as Mul<B>>::Output as Same<P20>>::Output;N5MulN46420,188928
fn test_N5_Min_N4() {test_N5_Min_N46426,189105
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6427,189127
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6428,189183
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56429,189239
    type N5MinN4 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinN46432,189332
fn test_N5_Max_N4() {test_N5_Max_N46438,189507
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6439,189529
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6440,189585
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N46441,189641
    type N5MaxN4 = <<A as Max<B>>::Output as Same<N4>>::Output;N5MaxN46444,189734
fn test_N5_Gcd_N4() {test_N5_Gcd_N46450,189909
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6451,189931
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6452,189987
    type P1 = PInt<UInt<UTerm, B1>>;P16453,190043
    type N5GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdN46456,190116
fn test_N5_Div_N4() {test_N5_Div_N46462,190291
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6463,190313
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6464,190369
    type P1 = PInt<UInt<UTerm, B1>>;P16465,190425
    type N5DivN4 = <<A as Div<B>>::Output as Same<P1>>::Output;N5DivN46468,190498
fn test_N5_Rem_N4() {test_N5_Rem_N46474,190673
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6475,190695
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6476,190751
    type N1 = NInt<UInt<UTerm, B1>>;N16477,190807
    type N5RemN4 = <<A as Rem<B>>::Output as Same<N1>>::Output;N5RemN46480,190880
fn test_N5_Cmp_N4() {test_N5_Cmp_N46486,191055
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6487,191077
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B6488,191133
    type N5CmpN4 = <A as Cmp<B>>::Output;N5CmpN46491,191225
fn test_N5_Add_N3() {test_N5_Add_N36496,191367
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6497,191389
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6498,191445
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N86499,191491
    type N5AddN3 = <<A as Add<B>>::Output as Same<N8>>::Output;N5AddN36502,191594
fn test_N5_Sub_N3() {test_N5_Sub_N36508,191769
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6509,191791
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6510,191847
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N26511,191893
    type N5SubN3 = <<A as Sub<B>>::Output as Same<N2>>::Output;N5SubN36514,191976
fn test_N5_Mul_N3() {test_N5_Mul_N36520,192151
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6521,192173
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6522,192229
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;P156523,192275
    type N5MulN3 = <<A as Mul<B>>::Output as Same<P15>>::Output;N5MulN36526,192379
fn test_N5_Min_N3() {test_N5_Min_N36532,192556
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6533,192578
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6534,192634
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56535,192680
    type N5MinN3 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinN36538,192773
fn test_N5_Max_N3() {test_N5_Max_N36544,192948
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6545,192970
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6546,193026
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N36547,193072
    type N5MaxN3 = <<A as Max<B>>::Output as Same<N3>>::Output;N5MaxN36550,193155
fn test_N5_Gcd_N3() {test_N5_Gcd_N36556,193330
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6557,193352
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6558,193408
    type P1 = PInt<UInt<UTerm, B1>>;P16559,193454
    type N5GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdN36562,193527
fn test_N5_Div_N3() {test_N5_Div_N36568,193702
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6569,193724
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6570,193780
    type P1 = PInt<UInt<UTerm, B1>>;P16571,193826
    type N5DivN3 = <<A as Div<B>>::Output as Same<P1>>::Output;N5DivN36574,193899
fn test_N5_Rem_N3() {test_N5_Rem_N36580,194074
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6581,194096
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6582,194152
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N26583,194198
    type N5RemN3 = <<A as Rem<B>>::Output as Same<N2>>::Output;N5RemN36586,194281
fn test_N5_Cmp_N3() {test_N5_Cmp_N36592,194456
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6593,194478
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B6594,194534
    type N5CmpN3 = <A as Cmp<B>>::Output;N5CmpN36597,194616
fn test_N5_Add_N2() {test_N5_Add_N26602,194758
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6603,194780
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6604,194836
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N76605,194882
    type N5AddN2 = <<A as Add<B>>::Output as Same<N7>>::Output;N5AddN26608,194975
fn test_N5_Sub_N2() {test_N5_Sub_N26614,195150
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6615,195172
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6616,195228
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N36617,195274
    type N5SubN2 = <<A as Sub<B>>::Output as Same<N3>>::Output;N5SubN26620,195357
fn test_N5_Mul_N2() {test_N5_Mul_N26626,195532
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6627,195554
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6628,195610
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;P106629,195656
    type N5MulN2 = <<A as Mul<B>>::Output as Same<P10>>::Output;N5MulN26632,195760
fn test_N5_Min_N2() {test_N5_Min_N26638,195937
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6639,195959
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6640,196015
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56641,196061
    type N5MinN2 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinN26644,196154
fn test_N5_Max_N2() {test_N5_Max_N26650,196329
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6651,196351
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6652,196407
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N26653,196453
    type N5MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;N5MaxN26656,196536
fn test_N5_Gcd_N2() {test_N5_Gcd_N26662,196711
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6663,196733
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6664,196789
    type P1 = PInt<UInt<UTerm, B1>>;P16665,196835
    type N5GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdN26668,196908
fn test_N5_Div_N2() {test_N5_Div_N26674,197083
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6675,197105
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6676,197161
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P26677,197207
    type N5DivN2 = <<A as Div<B>>::Output as Same<P2>>::Output;N5DivN26680,197290
fn test_N5_Rem_N2() {test_N5_Rem_N26686,197465
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6687,197487
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6688,197543
    type N1 = NInt<UInt<UTerm, B1>>;N16689,197589
    type N5RemN2 = <<A as Rem<B>>::Output as Same<N1>>::Output;N5RemN26692,197662
fn test_N5_Cmp_N2() {test_N5_Cmp_N26698,197837
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6699,197859
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B6700,197915
    type N5CmpN2 = <A as Cmp<B>>::Output;N5CmpN26703,197997
fn test_N5_Add_N1() {test_N5_Add_N16708,198139
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6709,198161
    type B = NInt<UInt<UTerm, B1>>;B6710,198217
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N66711,198253
    type N5AddN1 = <<A as Add<B>>::Output as Same<N6>>::Output;N5AddN16714,198346
fn test_N5_Sub_N1() {test_N5_Sub_N16720,198521
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6721,198543
    type B = NInt<UInt<UTerm, B1>>;B6722,198599
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N46723,198635
    type N5SubN1 = <<A as Sub<B>>::Output as Same<N4>>::Output;N5SubN16726,198728
fn test_N5_Mul_N1() {test_N5_Mul_N16732,198903
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6733,198925
    type B = NInt<UInt<UTerm, B1>>;B6734,198981
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P56735,199017
    type N5MulN1 = <<A as Mul<B>>::Output as Same<P5>>::Output;N5MulN16738,199110
fn test_N5_Min_N1() {test_N5_Min_N16744,199285
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6745,199307
    type B = NInt<UInt<UTerm, B1>>;B6746,199363
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56747,199399
    type N5MinN1 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinN16750,199492
fn test_N5_Max_N1() {test_N5_Max_N16756,199667
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6757,199689
    type B = NInt<UInt<UTerm, B1>>;B6758,199745
    type N1 = NInt<UInt<UTerm, B1>>;N16759,199781
    type N5MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;N5MaxN16762,199854
fn test_N5_Gcd_N1() {test_N5_Gcd_N16768,200029
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6769,200051
    type B = NInt<UInt<UTerm, B1>>;B6770,200107
    type P1 = PInt<UInt<UTerm, B1>>;P16771,200143
    type N5GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdN16774,200216
fn test_N5_Div_N1() {test_N5_Div_N16780,200391
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6781,200413
    type B = NInt<UInt<UTerm, B1>>;B6782,200469
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P56783,200505
    type N5DivN1 = <<A as Div<B>>::Output as Same<P5>>::Output;N5DivN16786,200598
fn test_N5_Rem_N1() {test_N5_Rem_N16792,200773
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6793,200795
    type B = NInt<UInt<UTerm, B1>>;B6794,200851
    type _0 = Z0;_06795,200887
    type N5RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N5RemN16798,200941
fn test_N5_PartialDiv_N1() {test_N5_PartialDiv_N16804,201116
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6805,201145
    type B = NInt<UInt<UTerm, B1>>;B6806,201201
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P56807,201237
    type N5PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P5>>::Output;N5PartialDivN16810,201330
fn test_N5_Cmp_N1() {test_N5_Cmp_N16816,201526
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6817,201548
    type B = NInt<UInt<UTerm, B1>>;B6818,201604
    type N5CmpN1 = <A as Cmp<B>>::Output;N5CmpN16821,201676
fn test_N5_Add__0() {test_N5_Add__06826,201818
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6827,201840
    type B = Z0;B6828,201896
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56829,201913
    type N5Add_0 = <<A as Add<B>>::Output as Same<N5>>::Output;N5Add_06832,202006
fn test_N5_Sub__0() {test_N5_Sub__06838,202181
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6839,202203
    type B = Z0;B6840,202259
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56841,202276
    type N5Sub_0 = <<A as Sub<B>>::Output as Same<N5>>::Output;N5Sub_06844,202369
fn test_N5_Mul__0() {test_N5_Mul__06850,202544
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6851,202566
    type B = Z0;B6852,202622
    type _0 = Z0;_06853,202639
    type N5Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;N5Mul_06856,202693
fn test_N5_Min__0() {test_N5_Min__06862,202868
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6863,202890
    type B = Z0;B6864,202946
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56865,202963
    type N5Min_0 = <<A as Min<B>>::Output as Same<N5>>::Output;N5Min_06868,203056
fn test_N5_Max__0() {test_N5_Max__06874,203231
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6875,203253
    type B = Z0;B6876,203309
    type _0 = Z0;_06877,203326
    type N5Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;N5Max_06880,203380
fn test_N5_Gcd__0() {test_N5_Gcd__06886,203555
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6887,203577
    type B = Z0;B6888,203633
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P56889,203650
    type N5Gcd_0 = <<A as Gcd<B>>::Output as Same<P5>>::Output;N5Gcd_06892,203743
fn test_N5_Pow__0() {test_N5_Pow__06898,203918
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6899,203940
    type B = Z0;B6900,203996
    type P1 = PInt<UInt<UTerm, B1>>;P16901,204013
    type N5Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;N5Pow_06904,204086
fn test_N5_Cmp__0() {test_N5_Cmp__06910,204261
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6911,204283
    type B = Z0;B6912,204339
    type N5Cmp_0 = <A as Cmp<B>>::Output;N5Cmp_06915,204392
fn test_N5_Add_P1() {test_N5_Add_P16920,204534
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6921,204556
    type B = PInt<UInt<UTerm, B1>>;B6922,204612
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N46923,204648
    type N5AddP1 = <<A as Add<B>>::Output as Same<N4>>::Output;N5AddP16926,204741
fn test_N5_Sub_P1() {test_N5_Sub_P16932,204916
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6933,204938
    type B = PInt<UInt<UTerm, B1>>;B6934,204994
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N66935,205030
    type N5SubP1 = <<A as Sub<B>>::Output as Same<N6>>::Output;N5SubP16938,205123
fn test_N5_Mul_P1() {test_N5_Mul_P16944,205298
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6945,205320
    type B = PInt<UInt<UTerm, B1>>;B6946,205376
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56947,205412
    type N5MulP1 = <<A as Mul<B>>::Output as Same<N5>>::Output;N5MulP16950,205505
fn test_N5_Min_P1() {test_N5_Min_P16956,205680
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6957,205702
    type B = PInt<UInt<UTerm, B1>>;B6958,205758
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56959,205794
    type N5MinP1 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinP16962,205887
fn test_N5_Max_P1() {test_N5_Max_P16968,206062
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6969,206084
    type B = PInt<UInt<UTerm, B1>>;B6970,206140
    type P1 = PInt<UInt<UTerm, B1>>;P16971,206176
    type N5MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;N5MaxP16974,206249
fn test_N5_Gcd_P1() {test_N5_Gcd_P16980,206424
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6981,206446
    type B = PInt<UInt<UTerm, B1>>;B6982,206502
    type P1 = PInt<UInt<UTerm, B1>>;P16983,206538
    type N5GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdP16986,206611
fn test_N5_Div_P1() {test_N5_Div_P16992,206786
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A6993,206808
    type B = PInt<UInt<UTerm, B1>>;B6994,206864
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N56995,206900
    type N5DivP1 = <<A as Div<B>>::Output as Same<N5>>::Output;N5DivP16998,206993
fn test_N5_Rem_P1() {test_N5_Rem_P17004,207168
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7005,207190
    type B = PInt<UInt<UTerm, B1>>;B7006,207246
    type _0 = Z0;_07007,207282
    type N5RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N5RemP17010,207336
fn test_N5_PartialDiv_P1() {test_N5_PartialDiv_P17016,207511
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7017,207540
    type B = PInt<UInt<UTerm, B1>>;B7018,207596
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57019,207632
    type N5PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N5>>::Output;N5PartialDivP17022,207725
fn test_N5_Pow_P1() {test_N5_Pow_P17028,207921
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7029,207943
    type B = PInt<UInt<UTerm, B1>>;B7030,207999
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57031,208035
    type N5PowP1 = <<A as Pow<B>>::Output as Same<N5>>::Output;N5PowP17034,208128
fn test_N5_Cmp_P1() {test_N5_Cmp_P17040,208303
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7041,208325
    type B = PInt<UInt<UTerm, B1>>;B7042,208381
    type N5CmpP1 = <A as Cmp<B>>::Output;N5CmpP17045,208453
fn test_N5_Add_P2() {test_N5_Add_P27050,208595
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7051,208617
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7052,208673
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N37053,208719
    type N5AddP2 = <<A as Add<B>>::Output as Same<N3>>::Output;N5AddP27056,208802
fn test_N5_Sub_P2() {test_N5_Sub_P27062,208977
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7063,208999
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7064,209055
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N77065,209101
    type N5SubP2 = <<A as Sub<B>>::Output as Same<N7>>::Output;N5SubP27068,209194
fn test_N5_Mul_P2() {test_N5_Mul_P27074,209369
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7075,209391
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7076,209447
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;N107077,209493
    type N5MulP2 = <<A as Mul<B>>::Output as Same<N10>>::Output;N5MulP27080,209597
fn test_N5_Min_P2() {test_N5_Min_P27086,209774
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7087,209796
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7088,209852
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57089,209898
    type N5MinP2 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinP27092,209991
fn test_N5_Max_P2() {test_N5_Max_P27098,210166
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7099,210188
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7100,210244
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P27101,210290
    type N5MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;N5MaxP27104,210373
fn test_N5_Gcd_P2() {test_N5_Gcd_P27110,210548
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7111,210570
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7112,210626
    type P1 = PInt<UInt<UTerm, B1>>;P17113,210672
    type N5GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdP27116,210745
fn test_N5_Div_P2() {test_N5_Div_P27122,210920
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7123,210942
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7124,210998
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N27125,211044
    type N5DivP2 = <<A as Div<B>>::Output as Same<N2>>::Output;N5DivP27128,211127
fn test_N5_Rem_P2() {test_N5_Rem_P27134,211302
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7135,211324
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7136,211380
    type N1 = NInt<UInt<UTerm, B1>>;N17137,211426
    type N5RemP2 = <<A as Rem<B>>::Output as Same<N1>>::Output;N5RemP27140,211499
fn test_N5_Pow_P2() {test_N5_Pow_P27146,211674
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7147,211696
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7148,211752
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;P257149,211798
    type N5PowP2 = <<A as Pow<B>>::Output as Same<P25>>::Output;N5PowP27152,211912
fn test_N5_Cmp_P2() {test_N5_Cmp_P27158,212089
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7159,212111
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B7160,212167
    type N5CmpP2 = <A as Cmp<B>>::Output;N5CmpP27163,212249
fn test_N5_Add_P3() {test_N5_Add_P37168,212391
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7169,212413
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7170,212469
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N27171,212515
    type N5AddP3 = <<A as Add<B>>::Output as Same<N2>>::Output;N5AddP37174,212598
fn test_N5_Sub_P3() {test_N5_Sub_P37180,212773
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7181,212795
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7182,212851
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N87183,212897
    type N5SubP3 = <<A as Sub<B>>::Output as Same<N8>>::Output;N5SubP37186,213000
fn test_N5_Mul_P3() {test_N5_Mul_P37192,213175
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7193,213197
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7194,213253
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;N157195,213299
    type N5MulP3 = <<A as Mul<B>>::Output as Same<N15>>::Output;N5MulP37198,213403
fn test_N5_Min_P3() {test_N5_Min_P37204,213580
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7205,213602
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7206,213658
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57207,213704
    type N5MinP3 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinP37210,213797
fn test_N5_Max_P3() {test_N5_Max_P37216,213972
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7217,213994
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7218,214050
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P37219,214096
    type N5MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;N5MaxP37222,214179
fn test_N5_Gcd_P3() {test_N5_Gcd_P37228,214354
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7229,214376
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7230,214432
    type P1 = PInt<UInt<UTerm, B1>>;P17231,214478
    type N5GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdP37234,214551
fn test_N5_Div_P3() {test_N5_Div_P37240,214726
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7241,214748
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7242,214804
    type N1 = NInt<UInt<UTerm, B1>>;N17243,214850
    type N5DivP3 = <<A as Div<B>>::Output as Same<N1>>::Output;N5DivP37246,214923
fn test_N5_Rem_P3() {test_N5_Rem_P37252,215098
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7253,215120
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7254,215176
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N27255,215222
    type N5RemP3 = <<A as Rem<B>>::Output as Same<N2>>::Output;N5RemP37258,215305
fn test_N5_Pow_P3() {test_N5_Pow_P37264,215480
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7265,215502
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7266,215558
    type N125 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>N1257267,215604
    type N5PowP3 = <<A as Pow<B>>::Output as Same<N125>>::Output;N5PowP37270,215739
fn test_N5_Cmp_P3() {test_N5_Cmp_P37276,215918
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7277,215940
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B7278,215996
    type N5CmpP3 = <A as Cmp<B>>::Output;N5CmpP37281,216078
fn test_N5_Add_P4() {test_N5_Add_P47286,216220
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7287,216242
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7288,216298
    type N1 = NInt<UInt<UTerm, B1>>;N17289,216354
    type N5AddP4 = <<A as Add<B>>::Output as Same<N1>>::Output;N5AddP47292,216427
fn test_N5_Sub_P4() {test_N5_Sub_P47298,216602
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7299,216624
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7300,216680
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;N97301,216736
    type N5SubP4 = <<A as Sub<B>>::Output as Same<N9>>::Output;N5SubP47304,216839
fn test_N5_Mul_P4() {test_N5_Mul_P47310,217014
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7311,217036
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7312,217092
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;N207313,217148
    type N5MulP4 = <<A as Mul<B>>::Output as Same<N20>>::Output;N5MulP47316,217262
fn test_N5_Min_P4() {test_N5_Min_P47322,217439
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7323,217461
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7324,217517
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57325,217573
    type N5MinP4 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinP47328,217666
fn test_N5_Max_P4() {test_N5_Max_P47334,217841
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7335,217863
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7336,217919
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P47337,217975
    type N5MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;N5MaxP47340,218068
fn test_N5_Gcd_P4() {test_N5_Gcd_P47346,218243
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7347,218265
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7348,218321
    type P1 = PInt<UInt<UTerm, B1>>;P17349,218377
    type N5GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N5GcdP47352,218450
fn test_N5_Div_P4() {test_N5_Div_P47358,218625
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7359,218647
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7360,218703
    type N1 = NInt<UInt<UTerm, B1>>;N17361,218759
    type N5DivP4 = <<A as Div<B>>::Output as Same<N1>>::Output;N5DivP47364,218832
fn test_N5_Rem_P4() {test_N5_Rem_P47370,219007
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7371,219029
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7372,219085
    type N1 = NInt<UInt<UTerm, B1>>;N17373,219141
    type N5RemP4 = <<A as Rem<B>>::Output as Same<N1>>::Output;N5RemP47376,219214
fn test_N5_Pow_P4() {test_N5_Pow_P47382,219389
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7383,219411
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7384,219467
    type P625 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>P6257385,219523
    type N5PowP4 = <<A as Pow<B>>::Output as Same<P625>>::Output;N5PowP47388,219688
fn test_N5_Cmp_P4() {test_N5_Cmp_P47394,219867
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7395,219889
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7396,219945
    type N5CmpP4 = <A as Cmp<B>>::Output;N5CmpP47399,220037
fn test_N5_Add_P5() {test_N5_Add_P57404,220179
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7405,220201
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7406,220257
    type _0 = Z0;_07407,220313
    type N5AddP5 = <<A as Add<B>>::Output as Same<_0>>::Output;N5AddP57410,220367
fn test_N5_Sub_P5() {test_N5_Sub_P57416,220542
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7417,220564
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7418,220620
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;N107419,220676
    type N5SubP5 = <<A as Sub<B>>::Output as Same<N10>>::Output;N5SubP57422,220780
fn test_N5_Mul_P5() {test_N5_Mul_P57428,220957
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7429,220979
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7430,221035
    type N25 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;N257431,221091
    type N5MulP5 = <<A as Mul<B>>::Output as Same<N25>>::Output;N5MulP57434,221205
fn test_N5_Min_P5() {test_N5_Min_P57440,221382
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7441,221404
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7442,221460
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57443,221516
    type N5MinP5 = <<A as Min<B>>::Output as Same<N5>>::Output;N5MinP57446,221609
fn test_N5_Max_P5() {test_N5_Max_P57452,221784
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7453,221806
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7454,221862
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P57455,221918
    type N5MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;N5MaxP57458,222011
fn test_N5_Gcd_P5() {test_N5_Gcd_P57464,222186
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7465,222208
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7466,222264
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P57467,222320
    type N5GcdP5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;N5GcdP57470,222413
fn test_N5_Div_P5() {test_N5_Div_P57476,222588
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7477,222610
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7478,222666
    type N1 = NInt<UInt<UTerm, B1>>;N17479,222722
    type N5DivP5 = <<A as Div<B>>::Output as Same<N1>>::Output;N5DivP57482,222795
fn test_N5_Rem_P5() {test_N5_Rem_P57488,222970
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7489,222992
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7490,223048
    type _0 = Z0;_07491,223104
    type N5RemP5 = <<A as Rem<B>>::Output as Same<_0>>::Output;N5RemP57494,223158
fn test_N5_PartialDiv_P5() {test_N5_PartialDiv_P57500,223333
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7501,223362
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7502,223418
    type N1 = NInt<UInt<UTerm, B1>>;N17503,223474
    type N5PartialDivP5 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;N5PartialDivP57506,223547
fn test_N5_Pow_P5() {test_N5_Pow_P57512,223743
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7513,223765
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7514,223821
    type N3125 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1N31257515,223877
    type N5PowP5 = <<A as Pow<B>>::Output as Same<N3125>>::Output;N5PowP57518,224063
fn test_N5_Cmp_P5() {test_N5_Cmp_P57524,224244
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A7525,224266
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7526,224322
    type N5CmpP5 = <A as Cmp<B>>::Output;N5CmpP57529,224414
fn test_N4_Add_N5() {test_N4_Add_N57534,224556
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7535,224578
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7536,224634
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;N97537,224690
    type N4AddN5 = <<A as Add<B>>::Output as Same<N9>>::Output;N4AddN57540,224793
fn test_N4_Sub_N5() {test_N4_Sub_N57546,224968
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7547,224990
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7548,225046
    type P1 = PInt<UInt<UTerm, B1>>;P17549,225102
    type N4SubN5 = <<A as Sub<B>>::Output as Same<P1>>::Output;N4SubN57552,225175
fn test_N4_Mul_N5() {test_N4_Mul_N57558,225350
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7559,225372
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7560,225428
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;P207561,225484
    type N4MulN5 = <<A as Mul<B>>::Output as Same<P20>>::Output;N4MulN57564,225598
fn test_N4_Min_N5() {test_N4_Min_N57570,225775
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7571,225797
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7572,225853
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57573,225909
    type N4MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;N4MinN57576,226002
fn test_N4_Max_N5() {test_N4_Max_N57582,226177
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7583,226199
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7584,226255
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N47585,226311
    type N4MaxN5 = <<A as Max<B>>::Output as Same<N4>>::Output;N4MaxN57588,226404
fn test_N4_Gcd_N5() {test_N4_Gcd_N57594,226579
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7595,226601
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7596,226657
    type P1 = PInt<UInt<UTerm, B1>>;P17597,226713
    type N4GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N4GcdN57600,226786
fn test_N4_Div_N5() {test_N4_Div_N57606,226961
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7607,226983
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7608,227039
    type _0 = Z0;_07609,227095
    type N4DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;N4DivN57612,227149
fn test_N4_Rem_N5() {test_N4_Rem_N57618,227324
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7619,227346
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7620,227402
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N47621,227458
    type N4RemN5 = <<A as Rem<B>>::Output as Same<N4>>::Output;N4RemN57624,227551
fn test_N4_Cmp_N5() {test_N4_Cmp_N57630,227726
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7631,227748
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B7632,227804
    type N4CmpN5 = <A as Cmp<B>>::Output;N4CmpN57635,227896
fn test_N4_Add_N4() {test_N4_Add_N47640,228041
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7641,228063
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7642,228119
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N87643,228175
    type N4AddN4 = <<A as Add<B>>::Output as Same<N8>>::Output;N4AddN47646,228278
fn test_N4_Sub_N4() {test_N4_Sub_N47652,228453
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7653,228475
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7654,228531
    type _0 = Z0;_07655,228587
    type N4SubN4 = <<A as Sub<B>>::Output as Same<_0>>::Output;N4SubN47658,228641
fn test_N4_Mul_N4() {test_N4_Mul_N47664,228816
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7665,228838
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7666,228894
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;P167667,228950
    type N4MulN4 = <<A as Mul<B>>::Output as Same<P16>>::Output;N4MulN47670,229064
fn test_N4_Min_N4() {test_N4_Min_N47676,229241
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7677,229263
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7678,229319
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N47679,229375
    type N4MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinN47682,229468
fn test_N4_Max_N4() {test_N4_Max_N47688,229643
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7689,229665
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7690,229721
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N47691,229777
    type N4MaxN4 = <<A as Max<B>>::Output as Same<N4>>::Output;N4MaxN47694,229870
fn test_N4_Gcd_N4() {test_N4_Gcd_N47700,230045
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7701,230067
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7702,230123
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P47703,230179
    type N4GcdN4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;N4GcdN47706,230272
fn test_N4_Div_N4() {test_N4_Div_N47712,230447
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7713,230469
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7714,230525
    type P1 = PInt<UInt<UTerm, B1>>;P17715,230581
    type N4DivN4 = <<A as Div<B>>::Output as Same<P1>>::Output;N4DivN47718,230654
fn test_N4_Rem_N4() {test_N4_Rem_N47724,230829
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7725,230851
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7726,230907
    type _0 = Z0;_07727,230963
    type N4RemN4 = <<A as Rem<B>>::Output as Same<_0>>::Output;N4RemN47730,231017
fn test_N4_PartialDiv_N4() {test_N4_PartialDiv_N47736,231192
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7737,231221
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7738,231277
    type P1 = PInt<UInt<UTerm, B1>>;P17739,231333
    type N4PartialDivN4 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;N4PartialDivN47742,231406
fn test_N4_Cmp_N4() {test_N4_Cmp_N47748,231602
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7749,231624
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B7750,231680
    type N4CmpN4 = <A as Cmp<B>>::Output;N4CmpN47753,231772
fn test_N4_Add_N3() {test_N4_Add_N37758,231915
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7759,231937
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7760,231993
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N77761,232039
    type N4AddN3 = <<A as Add<B>>::Output as Same<N7>>::Output;N4AddN37764,232132
fn test_N4_Sub_N3() {test_N4_Sub_N37770,232307
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7771,232329
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7772,232385
    type N1 = NInt<UInt<UTerm, B1>>;N17773,232431
    type N4SubN3 = <<A as Sub<B>>::Output as Same<N1>>::Output;N4SubN37776,232504
fn test_N4_Mul_N3() {test_N4_Mul_N37782,232679
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7783,232701
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7784,232757
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;P127785,232803
    type N4MulN3 = <<A as Mul<B>>::Output as Same<P12>>::Output;N4MulN37788,232907
fn test_N4_Min_N3() {test_N4_Min_N37794,233084
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7795,233106
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7796,233162
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N47797,233208
    type N4MinN3 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinN37800,233301
fn test_N4_Max_N3() {test_N4_Max_N37806,233476
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7807,233498
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7808,233554
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N37809,233600
    type N4MaxN3 = <<A as Max<B>>::Output as Same<N3>>::Output;N4MaxN37812,233683
fn test_N4_Gcd_N3() {test_N4_Gcd_N37818,233858
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7819,233880
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7820,233936
    type P1 = PInt<UInt<UTerm, B1>>;P17821,233982
    type N4GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N4GcdN37824,234055
fn test_N4_Div_N3() {test_N4_Div_N37830,234230
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7831,234252
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7832,234308
    type P1 = PInt<UInt<UTerm, B1>>;P17833,234354
    type N4DivN3 = <<A as Div<B>>::Output as Same<P1>>::Output;N4DivN37836,234427
fn test_N4_Rem_N3() {test_N4_Rem_N37842,234602
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7843,234624
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7844,234680
    type N1 = NInt<UInt<UTerm, B1>>;N17845,234726
    type N4RemN3 = <<A as Rem<B>>::Output as Same<N1>>::Output;N4RemN37848,234799
fn test_N4_Cmp_N3() {test_N4_Cmp_N37854,234974
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7855,234996
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B7856,235052
    type N4CmpN3 = <A as Cmp<B>>::Output;N4CmpN37859,235134
fn test_N4_Add_N2() {test_N4_Add_N27864,235276
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7865,235298
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7866,235354
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N67867,235400
    type N4AddN2 = <<A as Add<B>>::Output as Same<N6>>::Output;N4AddN27870,235493
fn test_N4_Sub_N2() {test_N4_Sub_N27876,235668
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7877,235690
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7878,235746
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N27879,235792
    type N4SubN2 = <<A as Sub<B>>::Output as Same<N2>>::Output;N4SubN27882,235875
fn test_N4_Mul_N2() {test_N4_Mul_N27888,236050
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7889,236072
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7890,236128
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P87891,236174
    type N4MulN2 = <<A as Mul<B>>::Output as Same<P8>>::Output;N4MulN27894,236277
fn test_N4_Min_N2() {test_N4_Min_N27900,236452
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7901,236474
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7902,236530
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N47903,236576
    type N4MinN2 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinN27906,236669
fn test_N4_Max_N2() {test_N4_Max_N27912,236844
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7913,236866
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7914,236922
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N27915,236968
    type N4MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;N4MaxN27918,237051
fn test_N4_Gcd_N2() {test_N4_Gcd_N27924,237226
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7925,237248
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7926,237304
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P27927,237350
    type N4GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N4GcdN27930,237433
fn test_N4_Div_N2() {test_N4_Div_N27936,237608
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7937,237630
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7938,237686
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P27939,237732
    type N4DivN2 = <<A as Div<B>>::Output as Same<P2>>::Output;N4DivN27942,237815
fn test_N4_Rem_N2() {test_N4_Rem_N27948,237990
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7949,238012
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7950,238068
    type _0 = Z0;_07951,238114
    type N4RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;N4RemN27954,238168
fn test_N4_PartialDiv_N2() {test_N4_PartialDiv_N27960,238343
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7961,238372
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7962,238428
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P27963,238474
    type N4PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;N4PartialDivN27966,238557
fn test_N4_Cmp_N2() {test_N4_Cmp_N27972,238753
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7973,238775
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B7974,238831
    type N4CmpN2 = <A as Cmp<B>>::Output;N4CmpN27977,238913
fn test_N4_Add_N1() {test_N4_Add_N17982,239055
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7983,239077
    type B = NInt<UInt<UTerm, B1>>;B7984,239133
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N57985,239169
    type N4AddN1 = <<A as Add<B>>::Output as Same<N5>>::Output;N4AddN17988,239262
fn test_N4_Sub_N1() {test_N4_Sub_N17994,239437
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A7995,239459
    type B = NInt<UInt<UTerm, B1>>;B7996,239515
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N37997,239551
    type N4SubN1 = <<A as Sub<B>>::Output as Same<N3>>::Output;N4SubN18000,239634
fn test_N4_Mul_N1() {test_N4_Mul_N18006,239809
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8007,239831
    type B = NInt<UInt<UTerm, B1>>;B8008,239887
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P48009,239923
    type N4MulN1 = <<A as Mul<B>>::Output as Same<P4>>::Output;N4MulN18012,240016
fn test_N4_Min_N1() {test_N4_Min_N18018,240191
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8019,240213
    type B = NInt<UInt<UTerm, B1>>;B8020,240269
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48021,240305
    type N4MinN1 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinN18024,240398
fn test_N4_Max_N1() {test_N4_Max_N18030,240573
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8031,240595
    type B = NInt<UInt<UTerm, B1>>;B8032,240651
    type N1 = NInt<UInt<UTerm, B1>>;N18033,240687
    type N4MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;N4MaxN18036,240760
fn test_N4_Gcd_N1() {test_N4_Gcd_N18042,240935
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8043,240957
    type B = NInt<UInt<UTerm, B1>>;B8044,241013
    type P1 = PInt<UInt<UTerm, B1>>;P18045,241049
    type N4GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N4GcdN18048,241122
fn test_N4_Div_N1() {test_N4_Div_N18054,241297
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8055,241319
    type B = NInt<UInt<UTerm, B1>>;B8056,241375
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P48057,241411
    type N4DivN1 = <<A as Div<B>>::Output as Same<P4>>::Output;N4DivN18060,241504
fn test_N4_Rem_N1() {test_N4_Rem_N18066,241679
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8067,241701
    type B = NInt<UInt<UTerm, B1>>;B8068,241757
    type _0 = Z0;_08069,241793
    type N4RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N4RemN18072,241847
fn test_N4_PartialDiv_N1() {test_N4_PartialDiv_N18078,242022
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8079,242051
    type B = NInt<UInt<UTerm, B1>>;B8080,242107
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P48081,242143
    type N4PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P4>>::Output;N4PartialDivN18084,242236
fn test_N4_Cmp_N1() {test_N4_Cmp_N18090,242432
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8091,242454
    type B = NInt<UInt<UTerm, B1>>;B8092,242510
    type N4CmpN1 = <A as Cmp<B>>::Output;N4CmpN18095,242582
fn test_N4_Add__0() {test_N4_Add__08100,242724
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8101,242746
    type B = Z0;B8102,242802
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48103,242819
    type N4Add_0 = <<A as Add<B>>::Output as Same<N4>>::Output;N4Add_08106,242912
fn test_N4_Sub__0() {test_N4_Sub__08112,243087
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8113,243109
    type B = Z0;B8114,243165
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48115,243182
    type N4Sub_0 = <<A as Sub<B>>::Output as Same<N4>>::Output;N4Sub_08118,243275
fn test_N4_Mul__0() {test_N4_Mul__08124,243450
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8125,243472
    type B = Z0;B8126,243528
    type _0 = Z0;_08127,243545
    type N4Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;N4Mul_08130,243599
fn test_N4_Min__0() {test_N4_Min__08136,243774
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8137,243796
    type B = Z0;B8138,243852
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48139,243869
    type N4Min_0 = <<A as Min<B>>::Output as Same<N4>>::Output;N4Min_08142,243962
fn test_N4_Max__0() {test_N4_Max__08148,244137
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8149,244159
    type B = Z0;B8150,244215
    type _0 = Z0;_08151,244232
    type N4Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;N4Max_08154,244286
fn test_N4_Gcd__0() {test_N4_Gcd__08160,244461
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8161,244483
    type B = Z0;B8162,244539
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P48163,244556
    type N4Gcd_0 = <<A as Gcd<B>>::Output as Same<P4>>::Output;N4Gcd_08166,244649
fn test_N4_Pow__0() {test_N4_Pow__08172,244824
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8173,244846
    type B = Z0;B8174,244902
    type P1 = PInt<UInt<UTerm, B1>>;P18175,244919
    type N4Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;N4Pow_08178,244992
fn test_N4_Cmp__0() {test_N4_Cmp__08184,245167
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8185,245189
    type B = Z0;B8186,245245
    type N4Cmp_0 = <A as Cmp<B>>::Output;N4Cmp_08189,245298
fn test_N4_Add_P1() {test_N4_Add_P18194,245440
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8195,245462
    type B = PInt<UInt<UTerm, B1>>;B8196,245518
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N38197,245554
    type N4AddP1 = <<A as Add<B>>::Output as Same<N3>>::Output;N4AddP18200,245637
fn test_N4_Sub_P1() {test_N4_Sub_P18206,245812
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8207,245834
    type B = PInt<UInt<UTerm, B1>>;B8208,245890
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N58209,245926
    type N4SubP1 = <<A as Sub<B>>::Output as Same<N5>>::Output;N4SubP18212,246019
fn test_N4_Mul_P1() {test_N4_Mul_P18218,246194
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8219,246216
    type B = PInt<UInt<UTerm, B1>>;B8220,246272
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48221,246308
    type N4MulP1 = <<A as Mul<B>>::Output as Same<N4>>::Output;N4MulP18224,246401
fn test_N4_Min_P1() {test_N4_Min_P18230,246576
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8231,246598
    type B = PInt<UInt<UTerm, B1>>;B8232,246654
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48233,246690
    type N4MinP1 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinP18236,246783
fn test_N4_Max_P1() {test_N4_Max_P18242,246958
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8243,246980
    type B = PInt<UInt<UTerm, B1>>;B8244,247036
    type P1 = PInt<UInt<UTerm, B1>>;P18245,247072
    type N4MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;N4MaxP18248,247145
fn test_N4_Gcd_P1() {test_N4_Gcd_P18254,247320
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8255,247342
    type B = PInt<UInt<UTerm, B1>>;B8256,247398
    type P1 = PInt<UInt<UTerm, B1>>;P18257,247434
    type N4GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N4GcdP18260,247507
fn test_N4_Div_P1() {test_N4_Div_P18266,247682
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8267,247704
    type B = PInt<UInt<UTerm, B1>>;B8268,247760
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48269,247796
    type N4DivP1 = <<A as Div<B>>::Output as Same<N4>>::Output;N4DivP18272,247889
fn test_N4_Rem_P1() {test_N4_Rem_P18278,248064
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8279,248086
    type B = PInt<UInt<UTerm, B1>>;B8280,248142
    type _0 = Z0;_08281,248178
    type N4RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N4RemP18284,248232
fn test_N4_PartialDiv_P1() {test_N4_PartialDiv_P18290,248407
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8291,248436
    type B = PInt<UInt<UTerm, B1>>;B8292,248492
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48293,248528
    type N4PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N4>>::Output;N4PartialDivP18296,248621
fn test_N4_Pow_P1() {test_N4_Pow_P18302,248817
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8303,248839
    type B = PInt<UInt<UTerm, B1>>;B8304,248895
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48305,248931
    type N4PowP1 = <<A as Pow<B>>::Output as Same<N4>>::Output;N4PowP18308,249024
fn test_N4_Cmp_P1() {test_N4_Cmp_P18314,249199
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8315,249221
    type B = PInt<UInt<UTerm, B1>>;B8316,249277
    type N4CmpP1 = <A as Cmp<B>>::Output;N4CmpP18319,249349
fn test_N4_Add_P2() {test_N4_Add_P28324,249491
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8325,249513
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8326,249569
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N28327,249615
    type N4AddP2 = <<A as Add<B>>::Output as Same<N2>>::Output;N4AddP28330,249698
fn test_N4_Sub_P2() {test_N4_Sub_P28336,249873
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8337,249895
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8338,249951
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N68339,249997
    type N4SubP2 = <<A as Sub<B>>::Output as Same<N6>>::Output;N4SubP28342,250090
fn test_N4_Mul_P2() {test_N4_Mul_P28348,250265
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8349,250287
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8350,250343
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N88351,250389
    type N4MulP2 = <<A as Mul<B>>::Output as Same<N8>>::Output;N4MulP28354,250492
fn test_N4_Min_P2() {test_N4_Min_P28360,250667
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8361,250689
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8362,250745
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48363,250791
    type N4MinP2 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinP28366,250884
fn test_N4_Max_P2() {test_N4_Max_P28372,251059
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8373,251081
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8374,251137
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P28375,251183
    type N4MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;N4MaxP28378,251266
fn test_N4_Gcd_P2() {test_N4_Gcd_P28384,251441
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8385,251463
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8386,251519
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P28387,251565
    type N4GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N4GcdP28390,251648
fn test_N4_Div_P2() {test_N4_Div_P28396,251823
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8397,251845
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8398,251901
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N28399,251947
    type N4DivP2 = <<A as Div<B>>::Output as Same<N2>>::Output;N4DivP28402,252030
fn test_N4_Rem_P2() {test_N4_Rem_P28408,252205
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8409,252227
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8410,252283
    type _0 = Z0;_08411,252329
    type N4RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;N4RemP28414,252383
fn test_N4_PartialDiv_P2() {test_N4_PartialDiv_P28420,252558
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8421,252587
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8422,252643
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N28423,252689
    type N4PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;N4PartialDivP28426,252772
fn test_N4_Pow_P2() {test_N4_Pow_P28432,252968
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8433,252990
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8434,253046
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;P168435,253092
    type N4PowP2 = <<A as Pow<B>>::Output as Same<P16>>::Output;N4PowP28438,253206
fn test_N4_Cmp_P2() {test_N4_Cmp_P28444,253383
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8445,253405
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B8446,253461
    type N4CmpP2 = <A as Cmp<B>>::Output;N4CmpP28449,253543
fn test_N4_Add_P3() {test_N4_Add_P38454,253685
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8455,253707
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8456,253763
    type N1 = NInt<UInt<UTerm, B1>>;N18457,253809
    type N4AddP3 = <<A as Add<B>>::Output as Same<N1>>::Output;N4AddP38460,253882
fn test_N4_Sub_P3() {test_N4_Sub_P38466,254057
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8467,254079
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8468,254135
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N78469,254181
    type N4SubP3 = <<A as Sub<B>>::Output as Same<N7>>::Output;N4SubP38472,254274
fn test_N4_Mul_P3() {test_N4_Mul_P38478,254449
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8479,254471
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8480,254527
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;N128481,254573
    type N4MulP3 = <<A as Mul<B>>::Output as Same<N12>>::Output;N4MulP38484,254677
fn test_N4_Min_P3() {test_N4_Min_P38490,254854
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8491,254876
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8492,254932
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48493,254978
    type N4MinP3 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinP38496,255071
fn test_N4_Max_P3() {test_N4_Max_P38502,255246
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8503,255268
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8504,255324
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P38505,255370
    type N4MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;N4MaxP38508,255453
fn test_N4_Gcd_P3() {test_N4_Gcd_P38514,255628
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8515,255650
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8516,255706
    type P1 = PInt<UInt<UTerm, B1>>;P18517,255752
    type N4GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N4GcdP38520,255825
fn test_N4_Div_P3() {test_N4_Div_P38526,256000
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8527,256022
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8528,256078
    type N1 = NInt<UInt<UTerm, B1>>;N18529,256124
    type N4DivP3 = <<A as Div<B>>::Output as Same<N1>>::Output;N4DivP38532,256197
fn test_N4_Rem_P3() {test_N4_Rem_P38538,256372
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8539,256394
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8540,256450
    type N1 = NInt<UInt<UTerm, B1>>;N18541,256496
    type N4RemP3 = <<A as Rem<B>>::Output as Same<N1>>::Output;N4RemP38544,256569
fn test_N4_Pow_P3() {test_N4_Pow_P38550,256744
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8551,256766
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8552,256822
    type N64 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>>N648553,256868
    type N4PowP3 = <<A as Pow<B>>::Output as Same<N64>>::Output;N4PowP38556,257002
fn test_N4_Cmp_P3() {test_N4_Cmp_P38562,257179
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8563,257201
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B8564,257257
    type N4CmpP3 = <A as Cmp<B>>::Output;N4CmpP38567,257339
fn test_N4_Add_P4() {test_N4_Add_P48572,257481
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8573,257503
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8574,257559
    type _0 = Z0;_08575,257615
    type N4AddP4 = <<A as Add<B>>::Output as Same<_0>>::Output;N4AddP48578,257669
fn test_N4_Sub_P4() {test_N4_Sub_P48584,257844
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8585,257866
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8586,257922
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N88587,257978
    type N4SubP4 = <<A as Sub<B>>::Output as Same<N8>>::Output;N4SubP48590,258081
fn test_N4_Mul_P4() {test_N4_Mul_P48596,258256
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8597,258278
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8598,258334
    type N16 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;N168599,258390
    type N4MulP4 = <<A as Mul<B>>::Output as Same<N16>>::Output;N4MulP48602,258504
fn test_N4_Min_P4() {test_N4_Min_P48608,258681
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8609,258703
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8610,258759
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48611,258815
    type N4MinP4 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinP48614,258908
fn test_N4_Max_P4() {test_N4_Max_P48620,259083
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8621,259105
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8622,259161
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P48623,259217
    type N4MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;N4MaxP48626,259310
fn test_N4_Gcd_P4() {test_N4_Gcd_P48632,259485
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8633,259507
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8634,259563
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P48635,259619
    type N4GcdP4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;N4GcdP48638,259712
fn test_N4_Div_P4() {test_N4_Div_P48644,259887
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8645,259909
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8646,259965
    type N1 = NInt<UInt<UTerm, B1>>;N18647,260021
    type N4DivP4 = <<A as Div<B>>::Output as Same<N1>>::Output;N4DivP48650,260094
fn test_N4_Rem_P4() {test_N4_Rem_P48656,260269
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8657,260291
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8658,260347
    type _0 = Z0;_08659,260403
    type N4RemP4 = <<A as Rem<B>>::Output as Same<_0>>::Output;N4RemP48662,260457
fn test_N4_PartialDiv_P4() {test_N4_PartialDiv_P48668,260632
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8669,260661
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8670,260717
    type N1 = NInt<UInt<UTerm, B1>>;N18671,260773
    type N4PartialDivP4 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;N4PartialDivP48674,260846
fn test_N4_Pow_P4() {test_N4_Pow_P48680,261042
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8681,261064
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8682,261120
    type P256 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>P2568683,261176
    type N4PowP4 = <<A as Pow<B>>::Output as Same<P256>>::Output;N4PowP48686,261331
fn test_N4_Cmp_P4() {test_N4_Cmp_P48692,261510
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8693,261532
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8694,261588
    type N4CmpP4 = <A as Cmp<B>>::Output;N4CmpP48697,261680
fn test_N4_Add_P5() {test_N4_Add_P58702,261822
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8703,261844
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8704,261900
    type P1 = PInt<UInt<UTerm, B1>>;P18705,261956
    type N4AddP5 = <<A as Add<B>>::Output as Same<P1>>::Output;N4AddP58708,262029
fn test_N4_Sub_P5() {test_N4_Sub_P58714,262204
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8715,262226
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8716,262282
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;N98717,262338
    type N4SubP5 = <<A as Sub<B>>::Output as Same<N9>>::Output;N4SubP58720,262441
fn test_N4_Mul_P5() {test_N4_Mul_P58726,262616
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8727,262638
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8728,262694
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;N208729,262750
    type N4MulP5 = <<A as Mul<B>>::Output as Same<N20>>::Output;N4MulP58732,262864
fn test_N4_Min_P5() {test_N4_Min_P58738,263041
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8739,263063
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8740,263119
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48741,263175
    type N4MinP5 = <<A as Min<B>>::Output as Same<N4>>::Output;N4MinP58744,263268
fn test_N4_Max_P5() {test_N4_Max_P58750,263443
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8751,263465
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8752,263521
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P58753,263577
    type N4MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;N4MaxP58756,263670
fn test_N4_Gcd_P5() {test_N4_Gcd_P58762,263845
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8763,263867
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8764,263923
    type P1 = PInt<UInt<UTerm, B1>>;P18765,263979
    type N4GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N4GcdP58768,264052
fn test_N4_Div_P5() {test_N4_Div_P58774,264227
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8775,264249
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8776,264305
    type _0 = Z0;_08777,264361
    type N4DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;N4DivP58780,264415
fn test_N4_Rem_P5() {test_N4_Rem_P58786,264590
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8787,264612
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8788,264668
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48789,264724
    type N4RemP5 = <<A as Rem<B>>::Output as Same<N4>>::Output;N4RemP58792,264817
fn test_N4_Pow_P5() {test_N4_Pow_P58798,264992
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8799,265014
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8800,265070
    type N1024 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0N10248801,265126
    type N4PowP5 = <<A as Pow<B>>::Output as Same<N1024>>::Output;N4PowP58804,265302
fn test_N4_Cmp_P5() {test_N4_Cmp_P58810,265483
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A8811,265505
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8812,265561
    type N4CmpP5 = <A as Cmp<B>>::Output;N4CmpP58815,265653
fn test_N3_Add_N5() {test_N3_Add_N58820,265795
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8821,265817
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8822,265863
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N88823,265919
    type N3AddN5 = <<A as Add<B>>::Output as Same<N8>>::Output;N3AddN58826,266022
fn test_N3_Sub_N5() {test_N3_Sub_N58832,266197
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8833,266219
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8834,266265
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P28835,266321
    type N3SubN5 = <<A as Sub<B>>::Output as Same<P2>>::Output;N3SubN58838,266404
fn test_N3_Mul_N5() {test_N3_Mul_N58844,266579
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8845,266601
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8846,266647
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;P158847,266703
    type N3MulN5 = <<A as Mul<B>>::Output as Same<P15>>::Output;N3MulN58850,266807
fn test_N3_Min_N5() {test_N3_Min_N58856,266984
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8857,267006
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8858,267052
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N58859,267108
    type N3MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;N3MinN58862,267201
fn test_N3_Max_N5() {test_N3_Max_N58868,267376
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8869,267398
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8870,267444
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N38871,267500
    type N3MaxN5 = <<A as Max<B>>::Output as Same<N3>>::Output;N3MaxN58874,267583
fn test_N3_Gcd_N5() {test_N3_Gcd_N58880,267758
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8881,267780
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8882,267826
    type P1 = PInt<UInt<UTerm, B1>>;P18883,267882
    type N3GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdN58886,267955
fn test_N3_Div_N5() {test_N3_Div_N58892,268130
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8893,268152
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8894,268198
    type _0 = Z0;_08895,268254
    type N3DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;N3DivN58898,268308
fn test_N3_Rem_N5() {test_N3_Rem_N58904,268483
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8905,268505
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8906,268551
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N38907,268607
    type N3RemN5 = <<A as Rem<B>>::Output as Same<N3>>::Output;N3RemN58910,268690
fn test_N3_Cmp_N5() {test_N3_Cmp_N58916,268865
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8917,268887
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B8918,268933
    type N3CmpN5 = <A as Cmp<B>>::Output;N3CmpN58921,269025
fn test_N3_Add_N4() {test_N3_Add_N48926,269170
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8927,269192
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8928,269238
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N78929,269294
    type N3AddN4 = <<A as Add<B>>::Output as Same<N7>>::Output;N3AddN48932,269387
fn test_N3_Sub_N4() {test_N3_Sub_N48938,269562
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8939,269584
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8940,269630
    type P1 = PInt<UInt<UTerm, B1>>;P18941,269686
    type N3SubN4 = <<A as Sub<B>>::Output as Same<P1>>::Output;N3SubN48944,269759
fn test_N3_Mul_N4() {test_N3_Mul_N48950,269934
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8951,269956
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8952,270002
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;P128953,270058
    type N3MulN4 = <<A as Mul<B>>::Output as Same<P12>>::Output;N3MulN48956,270162
fn test_N3_Min_N4() {test_N3_Min_N48962,270339
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8963,270361
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8964,270407
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N48965,270463
    type N3MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;N3MinN48968,270556
fn test_N3_Max_N4() {test_N3_Max_N48974,270731
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8975,270753
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8976,270799
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N38977,270855
    type N3MaxN4 = <<A as Max<B>>::Output as Same<N3>>::Output;N3MaxN48980,270938
fn test_N3_Gcd_N4() {test_N3_Gcd_N48986,271113
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8987,271135
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B8988,271181
    type P1 = PInt<UInt<UTerm, B1>>;P18989,271237
    type N3GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdN48992,271310
fn test_N3_Div_N4() {test_N3_Div_N48998,271485
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A8999,271507
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9000,271553
    type _0 = Z0;_09001,271609
    type N3DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;N3DivN49004,271663
fn test_N3_Rem_N4() {test_N3_Rem_N49010,271838
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9011,271860
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9012,271906
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39013,271962
    type N3RemN4 = <<A as Rem<B>>::Output as Same<N3>>::Output;N3RemN49016,272045
fn test_N3_Cmp_N4() {test_N3_Cmp_N49022,272220
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9023,272242
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9024,272288
    type N3CmpN4 = <A as Cmp<B>>::Output;N3CmpN49027,272380
fn test_N3_Add_N3() {test_N3_Add_N39032,272525
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9033,272547
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9034,272593
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N69035,272639
    type N3AddN3 = <<A as Add<B>>::Output as Same<N6>>::Output;N3AddN39038,272732
fn test_N3_Sub_N3() {test_N3_Sub_N39044,272907
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9045,272929
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9046,272975
    type _0 = Z0;_09047,273021
    type N3SubN3 = <<A as Sub<B>>::Output as Same<_0>>::Output;N3SubN39050,273075
fn test_N3_Mul_N3() {test_N3_Mul_N39056,273250
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9057,273272
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9058,273318
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P99059,273364
    type N3MulN3 = <<A as Mul<B>>::Output as Same<P9>>::Output;N3MulN39062,273467
fn test_N3_Min_N3() {test_N3_Min_N39068,273642
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9069,273664
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9070,273710
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39071,273756
    type N3MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinN39074,273839
fn test_N3_Max_N3() {test_N3_Max_N39080,274014
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9081,274036
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9082,274082
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39083,274128
    type N3MaxN3 = <<A as Max<B>>::Output as Same<N3>>::Output;N3MaxN39086,274211
fn test_N3_Gcd_N3() {test_N3_Gcd_N39092,274386
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9093,274408
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9094,274454
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39095,274500
    type N3GcdN3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;N3GcdN39098,274583
fn test_N3_Div_N3() {test_N3_Div_N39104,274758
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9105,274780
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9106,274826
    type P1 = PInt<UInt<UTerm, B1>>;P19107,274872
    type N3DivN3 = <<A as Div<B>>::Output as Same<P1>>::Output;N3DivN39110,274945
fn test_N3_Rem_N3() {test_N3_Rem_N39116,275120
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9117,275142
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9118,275188
    type _0 = Z0;_09119,275234
    type N3RemN3 = <<A as Rem<B>>::Output as Same<_0>>::Output;N3RemN39122,275288
fn test_N3_PartialDiv_N3() {test_N3_PartialDiv_N39128,275463
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9129,275492
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9130,275538
    type P1 = PInt<UInt<UTerm, B1>>;P19131,275584
    type N3PartialDivN3 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;N3PartialDivN39134,275657
fn test_N3_Cmp_N3() {test_N3_Cmp_N39140,275853
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9141,275875
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B9142,275921
    type N3CmpN3 = <A as Cmp<B>>::Output;N3CmpN39145,276003
fn test_N3_Add_N2() {test_N3_Add_N29150,276146
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9151,276168
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9152,276214
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N59153,276260
    type N3AddN2 = <<A as Add<B>>::Output as Same<N5>>::Output;N3AddN29156,276353
fn test_N3_Sub_N2() {test_N3_Sub_N29162,276528
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9163,276550
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9164,276596
    type N1 = NInt<UInt<UTerm, B1>>;N19165,276642
    type N3SubN2 = <<A as Sub<B>>::Output as Same<N1>>::Output;N3SubN29168,276715
fn test_N3_Mul_N2() {test_N3_Mul_N29174,276890
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9175,276912
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9176,276958
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P69177,277004
    type N3MulN2 = <<A as Mul<B>>::Output as Same<P6>>::Output;N3MulN29180,277097
fn test_N3_Min_N2() {test_N3_Min_N29186,277272
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9187,277294
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9188,277340
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39189,277386
    type N3MinN2 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinN29192,277469
fn test_N3_Max_N2() {test_N3_Max_N29198,277644
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9199,277666
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9200,277712
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N29201,277758
    type N3MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;N3MaxN29204,277841
fn test_N3_Gcd_N2() {test_N3_Gcd_N29210,278016
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9211,278038
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9212,278084
    type P1 = PInt<UInt<UTerm, B1>>;P19213,278130
    type N3GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdN29216,278203
fn test_N3_Div_N2() {test_N3_Div_N29222,278378
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9223,278400
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9224,278446
    type P1 = PInt<UInt<UTerm, B1>>;P19225,278492
    type N3DivN2 = <<A as Div<B>>::Output as Same<P1>>::Output;N3DivN29228,278565
fn test_N3_Rem_N2() {test_N3_Rem_N29234,278740
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9235,278762
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9236,278808
    type N1 = NInt<UInt<UTerm, B1>>;N19237,278854
    type N3RemN2 = <<A as Rem<B>>::Output as Same<N1>>::Output;N3RemN29240,278927
fn test_N3_Cmp_N2() {test_N3_Cmp_N29246,279102
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9247,279124
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B9248,279170
    type N3CmpN2 = <A as Cmp<B>>::Output;N3CmpN29251,279252
fn test_N3_Add_N1() {test_N3_Add_N19256,279394
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9257,279416
    type B = NInt<UInt<UTerm, B1>>;B9258,279462
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N49259,279498
    type N3AddN1 = <<A as Add<B>>::Output as Same<N4>>::Output;N3AddN19262,279591
fn test_N3_Sub_N1() {test_N3_Sub_N19268,279766
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9269,279788
    type B = NInt<UInt<UTerm, B1>>;B9270,279834
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N29271,279870
    type N3SubN1 = <<A as Sub<B>>::Output as Same<N2>>::Output;N3SubN19274,279953
fn test_N3_Mul_N1() {test_N3_Mul_N19280,280128
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9281,280150
    type B = NInt<UInt<UTerm, B1>>;B9282,280196
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39283,280232
    type N3MulN1 = <<A as Mul<B>>::Output as Same<P3>>::Output;N3MulN19286,280315
fn test_N3_Min_N1() {test_N3_Min_N19292,280490
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9293,280512
    type B = NInt<UInt<UTerm, B1>>;B9294,280558
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39295,280594
    type N3MinN1 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinN19298,280677
fn test_N3_Max_N1() {test_N3_Max_N19304,280852
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9305,280874
    type B = NInt<UInt<UTerm, B1>>;B9306,280920
    type N1 = NInt<UInt<UTerm, B1>>;N19307,280956
    type N3MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;N3MaxN19310,281029
fn test_N3_Gcd_N1() {test_N3_Gcd_N19316,281204
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9317,281226
    type B = NInt<UInt<UTerm, B1>>;B9318,281272
    type P1 = PInt<UInt<UTerm, B1>>;P19319,281308
    type N3GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdN19322,281381
fn test_N3_Div_N1() {test_N3_Div_N19328,281556
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9329,281578
    type B = NInt<UInt<UTerm, B1>>;B9330,281624
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39331,281660
    type N3DivN1 = <<A as Div<B>>::Output as Same<P3>>::Output;N3DivN19334,281743
fn test_N3_Rem_N1() {test_N3_Rem_N19340,281918
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9341,281940
    type B = NInt<UInt<UTerm, B1>>;B9342,281986
    type _0 = Z0;_09343,282022
    type N3RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N3RemN19346,282076
fn test_N3_PartialDiv_N1() {test_N3_PartialDiv_N19352,282251
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9353,282280
    type B = NInt<UInt<UTerm, B1>>;B9354,282326
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39355,282362
    type N3PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P3>>::Output;N3PartialDivN19358,282445
fn test_N3_Cmp_N1() {test_N3_Cmp_N19364,282641
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9365,282663
    type B = NInt<UInt<UTerm, B1>>;B9366,282709
    type N3CmpN1 = <A as Cmp<B>>::Output;N3CmpN19369,282781
fn test_N3_Add__0() {test_N3_Add__09374,282923
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9375,282945
    type B = Z0;B9376,282991
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39377,283008
    type N3Add_0 = <<A as Add<B>>::Output as Same<N3>>::Output;N3Add_09380,283091
fn test_N3_Sub__0() {test_N3_Sub__09386,283266
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9387,283288
    type B = Z0;B9388,283334
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39389,283351
    type N3Sub_0 = <<A as Sub<B>>::Output as Same<N3>>::Output;N3Sub_09392,283434
fn test_N3_Mul__0() {test_N3_Mul__09398,283609
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9399,283631
    type B = Z0;B9400,283677
    type _0 = Z0;_09401,283694
    type N3Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;N3Mul_09404,283748
fn test_N3_Min__0() {test_N3_Min__09410,283923
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9411,283945
    type B = Z0;B9412,283991
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39413,284008
    type N3Min_0 = <<A as Min<B>>::Output as Same<N3>>::Output;N3Min_09416,284091
fn test_N3_Max__0() {test_N3_Max__09422,284266
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9423,284288
    type B = Z0;B9424,284334
    type _0 = Z0;_09425,284351
    type N3Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;N3Max_09428,284405
fn test_N3_Gcd__0() {test_N3_Gcd__09434,284580
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9435,284602
    type B = Z0;B9436,284648
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39437,284665
    type N3Gcd_0 = <<A as Gcd<B>>::Output as Same<P3>>::Output;N3Gcd_09440,284748
fn test_N3_Pow__0() {test_N3_Pow__09446,284923
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9447,284945
    type B = Z0;B9448,284991
    type P1 = PInt<UInt<UTerm, B1>>;P19449,285008
    type N3Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;N3Pow_09452,285081
fn test_N3_Cmp__0() {test_N3_Cmp__09458,285256
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9459,285278
    type B = Z0;B9460,285324
    type N3Cmp_0 = <A as Cmp<B>>::Output;N3Cmp_09463,285377
fn test_N3_Add_P1() {test_N3_Add_P19468,285519
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9469,285541
    type B = PInt<UInt<UTerm, B1>>;B9470,285587
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N29471,285623
    type N3AddP1 = <<A as Add<B>>::Output as Same<N2>>::Output;N3AddP19474,285706
fn test_N3_Sub_P1() {test_N3_Sub_P19480,285881
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9481,285903
    type B = PInt<UInt<UTerm, B1>>;B9482,285949
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N49483,285985
    type N3SubP1 = <<A as Sub<B>>::Output as Same<N4>>::Output;N3SubP19486,286078
fn test_N3_Mul_P1() {test_N3_Mul_P19492,286253
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9493,286275
    type B = PInt<UInt<UTerm, B1>>;B9494,286321
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39495,286357
    type N3MulP1 = <<A as Mul<B>>::Output as Same<N3>>::Output;N3MulP19498,286440
fn test_N3_Min_P1() {test_N3_Min_P19504,286615
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9505,286637
    type B = PInt<UInt<UTerm, B1>>;B9506,286683
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39507,286719
    type N3MinP1 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinP19510,286802
fn test_N3_Max_P1() {test_N3_Max_P19516,286977
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9517,286999
    type B = PInt<UInt<UTerm, B1>>;B9518,287045
    type P1 = PInt<UInt<UTerm, B1>>;P19519,287081
    type N3MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;N3MaxP19522,287154
fn test_N3_Gcd_P1() {test_N3_Gcd_P19528,287329
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9529,287351
    type B = PInt<UInt<UTerm, B1>>;B9530,287397
    type P1 = PInt<UInt<UTerm, B1>>;P19531,287433
    type N3GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdP19534,287506
fn test_N3_Div_P1() {test_N3_Div_P19540,287681
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9541,287703
    type B = PInt<UInt<UTerm, B1>>;B9542,287749
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39543,287785
    type N3DivP1 = <<A as Div<B>>::Output as Same<N3>>::Output;N3DivP19546,287868
fn test_N3_Rem_P1() {test_N3_Rem_P19552,288043
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9553,288065
    type B = PInt<UInt<UTerm, B1>>;B9554,288111
    type _0 = Z0;_09555,288147
    type N3RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N3RemP19558,288201
fn test_N3_PartialDiv_P1() {test_N3_PartialDiv_P19564,288376
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9565,288405
    type B = PInt<UInt<UTerm, B1>>;B9566,288451
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39567,288487
    type N3PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N3>>::Output;N3PartialDivP19570,288570
fn test_N3_Pow_P1() {test_N3_Pow_P19576,288766
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9577,288788
    type B = PInt<UInt<UTerm, B1>>;B9578,288834
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39579,288870
    type N3PowP1 = <<A as Pow<B>>::Output as Same<N3>>::Output;N3PowP19582,288953
fn test_N3_Cmp_P1() {test_N3_Cmp_P19588,289128
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9589,289150
    type B = PInt<UInt<UTerm, B1>>;B9590,289196
    type N3CmpP1 = <A as Cmp<B>>::Output;N3CmpP19593,289268
fn test_N3_Add_P2() {test_N3_Add_P29598,289410
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9599,289432
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9600,289478
    type N1 = NInt<UInt<UTerm, B1>>;N19601,289524
    type N3AddP2 = <<A as Add<B>>::Output as Same<N1>>::Output;N3AddP29604,289597
fn test_N3_Sub_P2() {test_N3_Sub_P29610,289772
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9611,289794
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9612,289840
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N59613,289886
    type N3SubP2 = <<A as Sub<B>>::Output as Same<N5>>::Output;N3SubP29616,289979
fn test_N3_Mul_P2() {test_N3_Mul_P29622,290154
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9623,290176
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9624,290222
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N69625,290268
    type N3MulP2 = <<A as Mul<B>>::Output as Same<N6>>::Output;N3MulP29628,290361
fn test_N3_Min_P2() {test_N3_Min_P29634,290536
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9635,290558
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9636,290604
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39637,290650
    type N3MinP2 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinP29640,290733
fn test_N3_Max_P2() {test_N3_Max_P29646,290908
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9647,290930
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9648,290976
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P29649,291022
    type N3MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;N3MaxP29652,291105
fn test_N3_Gcd_P2() {test_N3_Gcd_P29658,291280
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9659,291302
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9660,291348
    type P1 = PInt<UInt<UTerm, B1>>;P19661,291394
    type N3GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdP29664,291467
fn test_N3_Div_P2() {test_N3_Div_P29670,291642
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9671,291664
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9672,291710
    type N1 = NInt<UInt<UTerm, B1>>;N19673,291756
    type N3DivP2 = <<A as Div<B>>::Output as Same<N1>>::Output;N3DivP29676,291829
fn test_N3_Rem_P2() {test_N3_Rem_P29682,292004
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9683,292026
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9684,292072
    type N1 = NInt<UInt<UTerm, B1>>;N19685,292118
    type N3RemP2 = <<A as Rem<B>>::Output as Same<N1>>::Output;N3RemP29688,292191
fn test_N3_Pow_P2() {test_N3_Pow_P29694,292366
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9695,292388
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9696,292434
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P99697,292480
    type N3PowP2 = <<A as Pow<B>>::Output as Same<P9>>::Output;N3PowP29700,292583
fn test_N3_Cmp_P2() {test_N3_Cmp_P29706,292758
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9707,292780
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B9708,292826
    type N3CmpP2 = <A as Cmp<B>>::Output;N3CmpP29711,292908
fn test_N3_Add_P3() {test_N3_Add_P39716,293050
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9717,293072
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9718,293118
    type _0 = Z0;_09719,293164
    type N3AddP3 = <<A as Add<B>>::Output as Same<_0>>::Output;N3AddP39722,293218
fn test_N3_Sub_P3() {test_N3_Sub_P39728,293393
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9729,293415
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9730,293461
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N69731,293507
    type N3SubP3 = <<A as Sub<B>>::Output as Same<N6>>::Output;N3SubP39734,293600
fn test_N3_Mul_P3() {test_N3_Mul_P39740,293775
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9741,293797
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9742,293843
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;N99743,293889
    type N3MulP3 = <<A as Mul<B>>::Output as Same<N9>>::Output;N3MulP39746,293992
fn test_N3_Min_P3() {test_N3_Min_P39752,294167
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9753,294189
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9754,294235
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39755,294281
    type N3MinP3 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinP39758,294364
fn test_N3_Max_P3() {test_N3_Max_P39764,294539
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9765,294561
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9766,294607
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39767,294653
    type N3MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;N3MaxP39770,294736
fn test_N3_Gcd_P3() {test_N3_Gcd_P39776,294911
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9777,294933
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9778,294979
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P39779,295025
    type N3GcdP3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;N3GcdP39782,295108
fn test_N3_Div_P3() {test_N3_Div_P39788,295283
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9789,295305
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9790,295351
    type N1 = NInt<UInt<UTerm, B1>>;N19791,295397
    type N3DivP3 = <<A as Div<B>>::Output as Same<N1>>::Output;N3DivP39794,295470
fn test_N3_Rem_P3() {test_N3_Rem_P39800,295645
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9801,295667
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9802,295713
    type _0 = Z0;_09803,295759
    type N3RemP3 = <<A as Rem<B>>::Output as Same<_0>>::Output;N3RemP39806,295813
fn test_N3_PartialDiv_P3() {test_N3_PartialDiv_P39812,295988
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9813,296017
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9814,296063
    type N1 = NInt<UInt<UTerm, B1>>;N19815,296109
    type N3PartialDivP3 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;N3PartialDivP39818,296182
fn test_N3_Pow_P3() {test_N3_Pow_P39824,296378
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9825,296400
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9826,296446
    type N27 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>>;N279827,296492
    type N3PowP3 = <<A as Pow<B>>::Output as Same<N27>>::Output;N3PowP39830,296606
fn test_N3_Cmp_P3() {test_N3_Cmp_P39836,296783
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9837,296805
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B9838,296851
    type N3CmpP3 = <A as Cmp<B>>::Output;N3CmpP39841,296933
fn test_N3_Add_P4() {test_N3_Add_P49846,297075
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9847,297097
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9848,297143
    type P1 = PInt<UInt<UTerm, B1>>;P19849,297199
    type N3AddP4 = <<A as Add<B>>::Output as Same<P1>>::Output;N3AddP49852,297272
fn test_N3_Sub_P4() {test_N3_Sub_P49858,297447
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9859,297469
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9860,297515
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N79861,297571
    type N3SubP4 = <<A as Sub<B>>::Output as Same<N7>>::Output;N3SubP49864,297664
fn test_N3_Mul_P4() {test_N3_Mul_P49870,297839
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9871,297861
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9872,297907
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;N129873,297963
    type N3MulP4 = <<A as Mul<B>>::Output as Same<N12>>::Output;N3MulP49876,298067
fn test_N3_Min_P4() {test_N3_Min_P49882,298244
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9883,298266
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9884,298312
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39885,298368
    type N3MinP4 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinP49888,298451
fn test_N3_Max_P4() {test_N3_Max_P49894,298626
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9895,298648
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9896,298694
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P49897,298750
    type N3MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;N3MaxP49900,298843
fn test_N3_Gcd_P4() {test_N3_Gcd_P49906,299018
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9907,299040
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9908,299086
    type P1 = PInt<UInt<UTerm, B1>>;P19909,299142
    type N3GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdP49912,299215
fn test_N3_Div_P4() {test_N3_Div_P49918,299390
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9919,299412
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9920,299458
    type _0 = Z0;_09921,299514
    type N3DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;N3DivP49924,299568
fn test_N3_Rem_P4() {test_N3_Rem_P49930,299743
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9931,299765
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9932,299811
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N39933,299867
    type N3RemP4 = <<A as Rem<B>>::Output as Same<N3>>::Output;N3RemP49936,299950
fn test_N3_Pow_P4() {test_N3_Pow_P49942,300125
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9943,300147
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9944,300193
    type P81 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>>P819945,300249
    type N3PowP4 = <<A as Pow<B>>::Output as Same<P81>>::Output;N3PowP49948,300383
fn test_N3_Cmp_P4() {test_N3_Cmp_P49954,300560
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9955,300582
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B9956,300628
    type N3CmpP4 = <A as Cmp<B>>::Output;N3CmpP49959,300720
fn test_N3_Add_P5() {test_N3_Add_P59964,300862
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9965,300884
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B9966,300930
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P29967,300986
    type N3AddP5 = <<A as Add<B>>::Output as Same<P2>>::Output;N3AddP59970,301069
fn test_N3_Sub_P5() {test_N3_Sub_P59976,301244
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9977,301266
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B9978,301312
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N89979,301368
    type N3SubP5 = <<A as Sub<B>>::Output as Same<N8>>::Output;N3SubP59982,301471
fn test_N3_Mul_P5() {test_N3_Mul_P59988,301646
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A9989,301668
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B9990,301714
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;N159991,301770
    type N3MulP5 = <<A as Mul<B>>::Output as Same<N15>>::Output;N3MulP59994,301874
fn test_N3_Min_P5() {test_N3_Min_P510000,302051
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10001,302073
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10002,302119
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N310003,302175
    type N3MinP5 = <<A as Min<B>>::Output as Same<N3>>::Output;N3MinP510006,302258
fn test_N3_Max_P5() {test_N3_Max_P510012,302433
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10013,302455
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10014,302501
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P510015,302557
    type N3MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;N3MaxP510018,302650
fn test_N3_Gcd_P5() {test_N3_Gcd_P510024,302825
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10025,302847
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10026,302893
    type P1 = PInt<UInt<UTerm, B1>>;P110027,302949
    type N3GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N3GcdP510030,303022
fn test_N3_Div_P5() {test_N3_Div_P510036,303197
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10037,303219
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10038,303265
    type _0 = Z0;_010039,303321
    type N3DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;N3DivP510042,303375
fn test_N3_Rem_P5() {test_N3_Rem_P510048,303550
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10049,303572
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10050,303618
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N310051,303674
    type N3RemP5 = <<A as Rem<B>>::Output as Same<N3>>::Output;N3RemP510054,303757
fn test_N3_Pow_P5() {test_N3_Pow_P510060,303932
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10061,303954
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10062,304000
    type N243 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>N24310063,304056
    type N3PowP5 = <<A as Pow<B>>::Output as Same<N243>>::Output;N3PowP510066,304201
fn test_N3_Cmp_P5() {test_N3_Cmp_P510072,304380
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A10073,304402
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10074,304448
    type N3CmpP5 = <A as Cmp<B>>::Output;N3CmpP510077,304540
fn test_N2_Add_N5() {test_N2_Add_N510082,304682
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10083,304704
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10084,304750
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N710085,304806
    type N2AddN5 = <<A as Add<B>>::Output as Same<N7>>::Output;N2AddN510088,304899
fn test_N2_Sub_N5() {test_N2_Sub_N510094,305074
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10095,305096
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10096,305142
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P310097,305198
    type N2SubN5 = <<A as Sub<B>>::Output as Same<P3>>::Output;N2SubN510100,305281
fn test_N2_Mul_N5() {test_N2_Mul_N510106,305456
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10107,305478
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10108,305524
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;P1010109,305580
    type N2MulN5 = <<A as Mul<B>>::Output as Same<P10>>::Output;N2MulN510112,305684
fn test_N2_Min_N5() {test_N2_Min_N510118,305861
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10119,305883
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10120,305929
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N510121,305985
    type N2MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;N2MinN510124,306078
fn test_N2_Max_N5() {test_N2_Max_N510130,306253
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10131,306275
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10132,306321
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210133,306377
    type N2MaxN5 = <<A as Max<B>>::Output as Same<N2>>::Output;N2MaxN510136,306460
fn test_N2_Gcd_N5() {test_N2_Gcd_N510142,306635
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10143,306657
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10144,306703
    type P1 = PInt<UInt<UTerm, B1>>;P110145,306759
    type N2GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N2GcdN510148,306832
fn test_N2_Div_N5() {test_N2_Div_N510154,307007
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10155,307029
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10156,307075
    type _0 = Z0;_010157,307131
    type N2DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;N2DivN510160,307185
fn test_N2_Rem_N5() {test_N2_Rem_N510166,307360
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10167,307382
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10168,307428
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210169,307484
    type N2RemN5 = <<A as Rem<B>>::Output as Same<N2>>::Output;N2RemN510172,307567
fn test_N2_Cmp_N5() {test_N2_Cmp_N510178,307742
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10179,307764
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B10180,307810
    type N2CmpN5 = <A as Cmp<B>>::Output;N2CmpN510183,307902
fn test_N2_Add_N4() {test_N2_Add_N410188,308047
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10189,308069
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10190,308115
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N610191,308171
    type N2AddN4 = <<A as Add<B>>::Output as Same<N6>>::Output;N2AddN410194,308264
fn test_N2_Sub_N4() {test_N2_Sub_N410200,308439
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10201,308461
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10202,308507
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210203,308563
    type N2SubN4 = <<A as Sub<B>>::Output as Same<P2>>::Output;N2SubN410206,308646
fn test_N2_Mul_N4() {test_N2_Mul_N410212,308821
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10213,308843
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10214,308889
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P810215,308945
    type N2MulN4 = <<A as Mul<B>>::Output as Same<P8>>::Output;N2MulN410218,309048
fn test_N2_Min_N4() {test_N2_Min_N410224,309223
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10225,309245
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10226,309291
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N410227,309347
    type N2MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;N2MinN410230,309440
fn test_N2_Max_N4() {test_N2_Max_N410236,309615
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10237,309637
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10238,309683
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210239,309739
    type N2MaxN4 = <<A as Max<B>>::Output as Same<N2>>::Output;N2MaxN410242,309822
fn test_N2_Gcd_N4() {test_N2_Gcd_N410248,309997
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10249,310019
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10250,310065
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210251,310121
    type N2GcdN4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N2GcdN410254,310204
fn test_N2_Div_N4() {test_N2_Div_N410260,310379
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10261,310401
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10262,310447
    type _0 = Z0;_010263,310503
    type N2DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;N2DivN410266,310557
fn test_N2_Rem_N4() {test_N2_Rem_N410272,310732
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10273,310754
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10274,310800
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210275,310856
    type N2RemN4 = <<A as Rem<B>>::Output as Same<N2>>::Output;N2RemN410278,310939
fn test_N2_Cmp_N4() {test_N2_Cmp_N410284,311114
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10285,311136
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B10286,311182
    type N2CmpN4 = <A as Cmp<B>>::Output;N2CmpN410289,311274
fn test_N2_Add_N3() {test_N2_Add_N310294,311419
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10295,311441
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10296,311487
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N510297,311533
    type N2AddN3 = <<A as Add<B>>::Output as Same<N5>>::Output;N2AddN310300,311626
fn test_N2_Sub_N3() {test_N2_Sub_N310306,311801
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10307,311823
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10308,311869
    type P1 = PInt<UInt<UTerm, B1>>;P110309,311915
    type N2SubN3 = <<A as Sub<B>>::Output as Same<P1>>::Output;N2SubN310312,311988
fn test_N2_Mul_N3() {test_N2_Mul_N310318,312163
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10319,312185
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10320,312231
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P610321,312277
    type N2MulN3 = <<A as Mul<B>>::Output as Same<P6>>::Output;N2MulN310324,312370
fn test_N2_Min_N3() {test_N2_Min_N310330,312545
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10331,312567
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10332,312613
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N310333,312659
    type N2MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;N2MinN310336,312742
fn test_N2_Max_N3() {test_N2_Max_N310342,312917
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10343,312939
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10344,312985
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210345,313031
    type N2MaxN3 = <<A as Max<B>>::Output as Same<N2>>::Output;N2MaxN310348,313114
fn test_N2_Gcd_N3() {test_N2_Gcd_N310354,313289
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10355,313311
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10356,313357
    type P1 = PInt<UInt<UTerm, B1>>;P110357,313403
    type N2GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N2GcdN310360,313476
fn test_N2_Div_N3() {test_N2_Div_N310366,313651
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10367,313673
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10368,313719
    type _0 = Z0;_010369,313765
    type N2DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;N2DivN310372,313819
fn test_N2_Rem_N3() {test_N2_Rem_N310378,313994
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10379,314016
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10380,314062
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210381,314108
    type N2RemN3 = <<A as Rem<B>>::Output as Same<N2>>::Output;N2RemN310384,314191
fn test_N2_Cmp_N3() {test_N2_Cmp_N310390,314366
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10391,314388
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B10392,314434
    type N2CmpN3 = <A as Cmp<B>>::Output;N2CmpN310395,314516
fn test_N2_Add_N2() {test_N2_Add_N210400,314661
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10401,314683
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10402,314729
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N410403,314775
    type N2AddN2 = <<A as Add<B>>::Output as Same<N4>>::Output;N2AddN210406,314868
fn test_N2_Sub_N2() {test_N2_Sub_N210412,315043
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10413,315065
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10414,315111
    type _0 = Z0;_010415,315157
    type N2SubN2 = <<A as Sub<B>>::Output as Same<_0>>::Output;N2SubN210418,315211
fn test_N2_Mul_N2() {test_N2_Mul_N210424,315386
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10425,315408
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10426,315454
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P410427,315500
    type N2MulN2 = <<A as Mul<B>>::Output as Same<P4>>::Output;N2MulN210430,315593
fn test_N2_Min_N2() {test_N2_Min_N210436,315768
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10437,315790
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10438,315836
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210439,315882
    type N2MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinN210442,315965
fn test_N2_Max_N2() {test_N2_Max_N210448,316140
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10449,316162
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10450,316208
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210451,316254
    type N2MaxN2 = <<A as Max<B>>::Output as Same<N2>>::Output;N2MaxN210454,316337
fn test_N2_Gcd_N2() {test_N2_Gcd_N210460,316512
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10461,316534
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10462,316580
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210463,316626
    type N2GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N2GcdN210466,316709
fn test_N2_Div_N2() {test_N2_Div_N210472,316884
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10473,316906
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10474,316952
    type P1 = PInt<UInt<UTerm, B1>>;P110475,316998
    type N2DivN2 = <<A as Div<B>>::Output as Same<P1>>::Output;N2DivN210478,317071
fn test_N2_Rem_N2() {test_N2_Rem_N210484,317246
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10485,317268
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10486,317314
    type _0 = Z0;_010487,317360
    type N2RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;N2RemN210490,317414
fn test_N2_PartialDiv_N2() {test_N2_PartialDiv_N210496,317589
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10497,317618
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10498,317664
    type P1 = PInt<UInt<UTerm, B1>>;P110499,317710
    type N2PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;N2PartialDivN210502,317783
fn test_N2_Cmp_N2() {test_N2_Cmp_N210508,317979
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10509,318001
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B10510,318047
    type N2CmpN2 = <A as Cmp<B>>::Output;N2CmpN210513,318129
fn test_N2_Add_N1() {test_N2_Add_N110518,318272
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10519,318294
    type B = NInt<UInt<UTerm, B1>>;B10520,318340
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N310521,318376
    type N2AddN1 = <<A as Add<B>>::Output as Same<N3>>::Output;N2AddN110524,318459
fn test_N2_Sub_N1() {test_N2_Sub_N110530,318634
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10531,318656
    type B = NInt<UInt<UTerm, B1>>;B10532,318702
    type N1 = NInt<UInt<UTerm, B1>>;N110533,318738
    type N2SubN1 = <<A as Sub<B>>::Output as Same<N1>>::Output;N2SubN110536,318811
fn test_N2_Mul_N1() {test_N2_Mul_N110542,318986
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10543,319008
    type B = NInt<UInt<UTerm, B1>>;B10544,319054
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210545,319090
    type N2MulN1 = <<A as Mul<B>>::Output as Same<P2>>::Output;N2MulN110548,319173
fn test_N2_Min_N1() {test_N2_Min_N110554,319348
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10555,319370
    type B = NInt<UInt<UTerm, B1>>;B10556,319416
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210557,319452
    type N2MinN1 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinN110560,319535
fn test_N2_Max_N1() {test_N2_Max_N110566,319710
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10567,319732
    type B = NInt<UInt<UTerm, B1>>;B10568,319778
    type N1 = NInt<UInt<UTerm, B1>>;N110569,319814
    type N2MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;N2MaxN110572,319887
fn test_N2_Gcd_N1() {test_N2_Gcd_N110578,320062
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10579,320084
    type B = NInt<UInt<UTerm, B1>>;B10580,320130
    type P1 = PInt<UInt<UTerm, B1>>;P110581,320166
    type N2GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N2GcdN110584,320239
fn test_N2_Div_N1() {test_N2_Div_N110590,320414
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10591,320436
    type B = NInt<UInt<UTerm, B1>>;B10592,320482
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210593,320518
    type N2DivN1 = <<A as Div<B>>::Output as Same<P2>>::Output;N2DivN110596,320601
fn test_N2_Rem_N1() {test_N2_Rem_N110602,320776
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10603,320798
    type B = NInt<UInt<UTerm, B1>>;B10604,320844
    type _0 = Z0;_010605,320880
    type N2RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N2RemN110608,320934
fn test_N2_PartialDiv_N1() {test_N2_PartialDiv_N110614,321109
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10615,321138
    type B = NInt<UInt<UTerm, B1>>;B10616,321184
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210617,321220
    type N2PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;N2PartialDivN110620,321303
fn test_N2_Cmp_N1() {test_N2_Cmp_N110626,321499
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10627,321521
    type B = NInt<UInt<UTerm, B1>>;B10628,321567
    type N2CmpN1 = <A as Cmp<B>>::Output;N2CmpN110631,321639
fn test_N2_Add__0() {test_N2_Add__010636,321781
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10637,321803
    type B = Z0;B10638,321849
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210639,321866
    type N2Add_0 = <<A as Add<B>>::Output as Same<N2>>::Output;N2Add_010642,321949
fn test_N2_Sub__0() {test_N2_Sub__010648,322124
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10649,322146
    type B = Z0;B10650,322192
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210651,322209
    type N2Sub_0 = <<A as Sub<B>>::Output as Same<N2>>::Output;N2Sub_010654,322292
fn test_N2_Mul__0() {test_N2_Mul__010660,322467
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10661,322489
    type B = Z0;B10662,322535
    type _0 = Z0;_010663,322552
    type N2Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;N2Mul_010666,322606
fn test_N2_Min__0() {test_N2_Min__010672,322781
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10673,322803
    type B = Z0;B10674,322849
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210675,322866
    type N2Min_0 = <<A as Min<B>>::Output as Same<N2>>::Output;N2Min_010678,322949
fn test_N2_Max__0() {test_N2_Max__010684,323124
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10685,323146
    type B = Z0;B10686,323192
    type _0 = Z0;_010687,323209
    type N2Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;N2Max_010690,323263
fn test_N2_Gcd__0() {test_N2_Gcd__010696,323438
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10697,323460
    type B = Z0;B10698,323506
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210699,323523
    type N2Gcd_0 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N2Gcd_010702,323606
fn test_N2_Pow__0() {test_N2_Pow__010708,323781
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10709,323803
    type B = Z0;B10710,323849
    type P1 = PInt<UInt<UTerm, B1>>;P110711,323866
    type N2Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;N2Pow_010714,323939
fn test_N2_Cmp__0() {test_N2_Cmp__010720,324114
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10721,324136
    type B = Z0;B10722,324182
    type N2Cmp_0 = <A as Cmp<B>>::Output;N2Cmp_010725,324235
fn test_N2_Add_P1() {test_N2_Add_P110730,324377
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10731,324399
    type B = PInt<UInt<UTerm, B1>>;B10732,324445
    type N1 = NInt<UInt<UTerm, B1>>;N110733,324481
    type N2AddP1 = <<A as Add<B>>::Output as Same<N1>>::Output;N2AddP110736,324554
fn test_N2_Sub_P1() {test_N2_Sub_P110742,324729
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10743,324751
    type B = PInt<UInt<UTerm, B1>>;B10744,324797
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N310745,324833
    type N2SubP1 = <<A as Sub<B>>::Output as Same<N3>>::Output;N2SubP110748,324916
fn test_N2_Mul_P1() {test_N2_Mul_P110754,325091
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10755,325113
    type B = PInt<UInt<UTerm, B1>>;B10756,325159
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210757,325195
    type N2MulP1 = <<A as Mul<B>>::Output as Same<N2>>::Output;N2MulP110760,325278
fn test_N2_Min_P1() {test_N2_Min_P110766,325453
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10767,325475
    type B = PInt<UInt<UTerm, B1>>;B10768,325521
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210769,325557
    type N2MinP1 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinP110772,325640
fn test_N2_Max_P1() {test_N2_Max_P110778,325815
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10779,325837
    type B = PInt<UInt<UTerm, B1>>;B10780,325883
    type P1 = PInt<UInt<UTerm, B1>>;P110781,325919
    type N2MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;N2MaxP110784,325992
fn test_N2_Gcd_P1() {test_N2_Gcd_P110790,326167
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10791,326189
    type B = PInt<UInt<UTerm, B1>>;B10792,326235
    type P1 = PInt<UInt<UTerm, B1>>;P110793,326271
    type N2GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N2GcdP110796,326344
fn test_N2_Div_P1() {test_N2_Div_P110802,326519
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10803,326541
    type B = PInt<UInt<UTerm, B1>>;B10804,326587
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210805,326623
    type N2DivP1 = <<A as Div<B>>::Output as Same<N2>>::Output;N2DivP110808,326706
fn test_N2_Rem_P1() {test_N2_Rem_P110814,326881
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10815,326903
    type B = PInt<UInt<UTerm, B1>>;B10816,326949
    type _0 = Z0;_010817,326985
    type N2RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N2RemP110820,327039
fn test_N2_PartialDiv_P1() {test_N2_PartialDiv_P110826,327214
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10827,327243
    type B = PInt<UInt<UTerm, B1>>;B10828,327289
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210829,327325
    type N2PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;N2PartialDivP110832,327408
fn test_N2_Pow_P1() {test_N2_Pow_P110838,327604
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10839,327626
    type B = PInt<UInt<UTerm, B1>>;B10840,327672
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210841,327708
    type N2PowP1 = <<A as Pow<B>>::Output as Same<N2>>::Output;N2PowP110844,327791
fn test_N2_Cmp_P1() {test_N2_Cmp_P110850,327966
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10851,327988
    type B = PInt<UInt<UTerm, B1>>;B10852,328034
    type N2CmpP1 = <A as Cmp<B>>::Output;N2CmpP110855,328106
fn test_N2_Add_P2() {test_N2_Add_P210860,328248
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10861,328270
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10862,328316
    type _0 = Z0;_010863,328362
    type N2AddP2 = <<A as Add<B>>::Output as Same<_0>>::Output;N2AddP210866,328416
fn test_N2_Sub_P2() {test_N2_Sub_P210872,328591
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10873,328613
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10874,328659
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N410875,328705
    type N2SubP2 = <<A as Sub<B>>::Output as Same<N4>>::Output;N2SubP210878,328798
fn test_N2_Mul_P2() {test_N2_Mul_P210884,328973
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10885,328995
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10886,329041
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N410887,329087
    type N2MulP2 = <<A as Mul<B>>::Output as Same<N4>>::Output;N2MulP210890,329180
fn test_N2_Min_P2() {test_N2_Min_P210896,329355
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10897,329377
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10898,329423
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N210899,329469
    type N2MinP2 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinP210902,329552
fn test_N2_Max_P2() {test_N2_Max_P210908,329727
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10909,329749
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10910,329795
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210911,329841
    type N2MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;N2MaxP210914,329924
fn test_N2_Gcd_P2() {test_N2_Gcd_P210920,330099
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10921,330121
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10922,330167
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P210923,330213
    type N2GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N2GcdP210926,330296
fn test_N2_Div_P2() {test_N2_Div_P210932,330471
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10933,330493
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10934,330539
    type N1 = NInt<UInt<UTerm, B1>>;N110935,330585
    type N2DivP2 = <<A as Div<B>>::Output as Same<N1>>::Output;N2DivP210938,330658
fn test_N2_Rem_P2() {test_N2_Rem_P210944,330833
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10945,330855
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10946,330901
    type _0 = Z0;_010947,330947
    type N2RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;N2RemP210950,331001
fn test_N2_PartialDiv_P2() {test_N2_PartialDiv_P210956,331176
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10957,331205
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10958,331251
    type N1 = NInt<UInt<UTerm, B1>>;N110959,331297
    type N2PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;N2PartialDivP210962,331370
fn test_N2_Pow_P2() {test_N2_Pow_P210968,331566
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10969,331588
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10970,331634
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P410971,331680
    type N2PowP2 = <<A as Pow<B>>::Output as Same<P4>>::Output;N2PowP210974,331773
fn test_N2_Cmp_P2() {test_N2_Cmp_P210980,331948
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10981,331970
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B10982,332016
    type N2CmpP2 = <A as Cmp<B>>::Output;N2CmpP210985,332098
fn test_N2_Add_P3() {test_N2_Add_P310990,332240
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A10991,332262
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B10992,332308
    type P1 = PInt<UInt<UTerm, B1>>;P110993,332354
    type N2AddP3 = <<A as Add<B>>::Output as Same<P1>>::Output;N2AddP310996,332427
fn test_N2_Sub_P3() {test_N2_Sub_P311002,332602
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11003,332624
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11004,332670
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N511005,332716
    type N2SubP3 = <<A as Sub<B>>::Output as Same<N5>>::Output;N2SubP311008,332809
fn test_N2_Mul_P3() {test_N2_Mul_P311014,332984
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11015,333006
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11016,333052
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N611017,333098
    type N2MulP3 = <<A as Mul<B>>::Output as Same<N6>>::Output;N2MulP311020,333191
fn test_N2_Min_P3() {test_N2_Min_P311026,333366
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11027,333388
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11028,333434
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211029,333480
    type N2MinP3 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinP311032,333563
fn test_N2_Max_P3() {test_N2_Max_P311038,333738
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11039,333760
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11040,333806
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P311041,333852
    type N2MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;N2MaxP311044,333935
fn test_N2_Gcd_P3() {test_N2_Gcd_P311050,334110
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11051,334132
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11052,334178
    type P1 = PInt<UInt<UTerm, B1>>;P111053,334224
    type N2GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N2GcdP311056,334297
fn test_N2_Div_P3() {test_N2_Div_P311062,334472
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11063,334494
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11064,334540
    type _0 = Z0;_011065,334586
    type N2DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;N2DivP311068,334640
fn test_N2_Rem_P3() {test_N2_Rem_P311074,334815
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11075,334837
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11076,334883
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211077,334929
    type N2RemP3 = <<A as Rem<B>>::Output as Same<N2>>::Output;N2RemP311080,335012
fn test_N2_Pow_P3() {test_N2_Pow_P311086,335187
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11087,335209
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11088,335255
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N811089,335301
    type N2PowP3 = <<A as Pow<B>>::Output as Same<N8>>::Output;N2PowP311092,335404
fn test_N2_Cmp_P3() {test_N2_Cmp_P311098,335579
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11099,335601
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B11100,335647
    type N2CmpP3 = <A as Cmp<B>>::Output;N2CmpP311103,335729
fn test_N2_Add_P4() {test_N2_Add_P411108,335871
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11109,335893
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11110,335939
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P211111,335995
    type N2AddP4 = <<A as Add<B>>::Output as Same<P2>>::Output;N2AddP411114,336078
fn test_N2_Sub_P4() {test_N2_Sub_P411120,336253
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11121,336275
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11122,336321
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N611123,336377
    type N2SubP4 = <<A as Sub<B>>::Output as Same<N6>>::Output;N2SubP411126,336470
fn test_N2_Mul_P4() {test_N2_Mul_P411132,336645
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11133,336667
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11134,336713
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N811135,336769
    type N2MulP4 = <<A as Mul<B>>::Output as Same<N8>>::Output;N2MulP411138,336872
fn test_N2_Min_P4() {test_N2_Min_P411144,337047
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11145,337069
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11146,337115
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211147,337171
    type N2MinP4 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinP411150,337254
fn test_N2_Max_P4() {test_N2_Max_P411156,337429
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11157,337451
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11158,337497
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P411159,337553
    type N2MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;N2MaxP411162,337646
fn test_N2_Gcd_P4() {test_N2_Gcd_P411168,337821
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11169,337843
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11170,337889
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P211171,337945
    type N2GcdP4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;N2GcdP411174,338028
fn test_N2_Div_P4() {test_N2_Div_P411180,338203
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11181,338225
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11182,338271
    type _0 = Z0;_011183,338327
    type N2DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;N2DivP411186,338381
fn test_N2_Rem_P4() {test_N2_Rem_P411192,338556
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11193,338578
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11194,338624
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211195,338680
    type N2RemP4 = <<A as Rem<B>>::Output as Same<N2>>::Output;N2RemP411198,338763
fn test_N2_Pow_P4() {test_N2_Pow_P411204,338938
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11205,338960
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11206,339006
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;P1611207,339062
    type N2PowP4 = <<A as Pow<B>>::Output as Same<P16>>::Output;N2PowP411210,339176
fn test_N2_Cmp_P4() {test_N2_Cmp_P411216,339353
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11217,339375
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11218,339421
    type N2CmpP4 = <A as Cmp<B>>::Output;N2CmpP411221,339513
fn test_N2_Add_P5() {test_N2_Add_P511226,339655
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11227,339677
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11228,339723
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P311229,339779
    type N2AddP5 = <<A as Add<B>>::Output as Same<P3>>::Output;N2AddP511232,339862
fn test_N2_Sub_P5() {test_N2_Sub_P511238,340037
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11239,340059
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11240,340105
    type N7 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;N711241,340161
    type N2SubP5 = <<A as Sub<B>>::Output as Same<N7>>::Output;N2SubP511244,340254
fn test_N2_Mul_P5() {test_N2_Mul_P511250,340429
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11251,340451
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11252,340497
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;N1011253,340553
    type N2MulP5 = <<A as Mul<B>>::Output as Same<N10>>::Output;N2MulP511256,340657
fn test_N2_Min_P5() {test_N2_Min_P511262,340834
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11263,340856
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11264,340902
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211265,340958
    type N2MinP5 = <<A as Min<B>>::Output as Same<N2>>::Output;N2MinP511268,341041
fn test_N2_Max_P5() {test_N2_Max_P511274,341216
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11275,341238
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11276,341284
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P511277,341340
    type N2MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;N2MaxP511280,341433
fn test_N2_Gcd_P5() {test_N2_Gcd_P511286,341608
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11287,341630
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11288,341676
    type P1 = PInt<UInt<UTerm, B1>>;P111289,341732
    type N2GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N2GcdP511292,341805
fn test_N2_Div_P5() {test_N2_Div_P511298,341980
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11299,342002
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11300,342048
    type _0 = Z0;_011301,342104
    type N2DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;N2DivP511304,342158
fn test_N2_Rem_P5() {test_N2_Rem_P511310,342333
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11311,342355
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11312,342401
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211313,342457
    type N2RemP5 = <<A as Rem<B>>::Output as Same<N2>>::Output;N2RemP511316,342540
fn test_N2_Pow_P5() {test_N2_Pow_P511322,342715
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11323,342737
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11324,342783
    type N32 = NInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>>;N3211325,342839
    type N2PowP5 = <<A as Pow<B>>::Output as Same<N32>>::Output;N2PowP511328,342963
fn test_N2_Cmp_P5() {test_N2_Cmp_P511334,343140
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A11335,343162
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11336,343208
    type N2CmpP5 = <A as Cmp<B>>::Output;N2CmpP511339,343300
fn test_N1_Add_N5() {test_N1_Add_N511344,343442
    type A = NInt<UInt<UTerm, B1>>;A11345,343464
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11346,343500
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N611347,343556
    type N1AddN5 = <<A as Add<B>>::Output as Same<N6>>::Output;N1AddN511350,343649
fn test_N1_Sub_N5() {test_N1_Sub_N511356,343824
    type A = NInt<UInt<UTerm, B1>>;A11357,343846
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11358,343882
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P411359,343938
    type N1SubN5 = <<A as Sub<B>>::Output as Same<P4>>::Output;N1SubN511362,344031
fn test_N1_Mul_N5() {test_N1_Mul_N511368,344206
    type A = NInt<UInt<UTerm, B1>>;A11369,344228
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11370,344264
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P511371,344320
    type N1MulN5 = <<A as Mul<B>>::Output as Same<P5>>::Output;N1MulN511374,344413
fn test_N1_Min_N5() {test_N1_Min_N511380,344588
    type A = NInt<UInt<UTerm, B1>>;A11381,344610
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11382,344646
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N511383,344702
    type N1MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;N1MinN511386,344795
fn test_N1_Max_N5() {test_N1_Max_N511392,344970
    type A = NInt<UInt<UTerm, B1>>;A11393,344992
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11394,345028
    type N1 = NInt<UInt<UTerm, B1>>;N111395,345084
    type N1MaxN5 = <<A as Max<B>>::Output as Same<N1>>::Output;N1MaxN511398,345157
fn test_N1_Gcd_N5() {test_N1_Gcd_N511404,345332
    type A = NInt<UInt<UTerm, B1>>;A11405,345354
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11406,345390
    type P1 = PInt<UInt<UTerm, B1>>;P111407,345446
    type N1GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdN511410,345519
fn test_N1_Div_N5() {test_N1_Div_N511416,345694
    type A = NInt<UInt<UTerm, B1>>;A11417,345716
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11418,345752
    type _0 = Z0;_011419,345808
    type N1DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivN511422,345862
fn test_N1_Rem_N5() {test_N1_Rem_N511428,346037
    type A = NInt<UInt<UTerm, B1>>;A11429,346059
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11430,346095
    type N1 = NInt<UInt<UTerm, B1>>;N111431,346151
    type N1RemN5 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemN511434,346224
fn test_N1_Pow_N5() {test_N1_Pow_N511440,346399
    type A = NInt<UInt<UTerm, B1>>;A11441,346421
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11442,346457
    type N1 = NInt<UInt<UTerm, B1>>;N111443,346513
    type N1PowN5 = <<A as Pow<B>>::Output as Same<N1>>::Output;N1PowN511446,346586
fn test_N1_Cmp_N5() {test_N1_Cmp_N511452,346761
    type A = NInt<UInt<UTerm, B1>>;A11453,346783
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B11454,346819
    type N1CmpN5 = <A as Cmp<B>>::Output;N1CmpN511457,346911
fn test_N1_Add_N4() {test_N1_Add_N411462,347056
    type A = NInt<UInt<UTerm, B1>>;A11463,347078
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11464,347114
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N511465,347170
    type N1AddN4 = <<A as Add<B>>::Output as Same<N5>>::Output;N1AddN411468,347263
fn test_N1_Sub_N4() {test_N1_Sub_N411474,347438
    type A = NInt<UInt<UTerm, B1>>;A11475,347460
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11476,347496
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P311477,347552
    type N1SubN4 = <<A as Sub<B>>::Output as Same<P3>>::Output;N1SubN411480,347635
fn test_N1_Mul_N4() {test_N1_Mul_N411486,347810
    type A = NInt<UInt<UTerm, B1>>;A11487,347832
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11488,347868
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P411489,347924
    type N1MulN4 = <<A as Mul<B>>::Output as Same<P4>>::Output;N1MulN411492,348017
fn test_N1_Min_N4() {test_N1_Min_N411498,348192
    type A = NInt<UInt<UTerm, B1>>;A11499,348214
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11500,348250
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N411501,348306
    type N1MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;N1MinN411504,348399
fn test_N1_Max_N4() {test_N1_Max_N411510,348574
    type A = NInt<UInt<UTerm, B1>>;A11511,348596
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11512,348632
    type N1 = NInt<UInt<UTerm, B1>>;N111513,348688
    type N1MaxN4 = <<A as Max<B>>::Output as Same<N1>>::Output;N1MaxN411516,348761
fn test_N1_Gcd_N4() {test_N1_Gcd_N411522,348936
    type A = NInt<UInt<UTerm, B1>>;A11523,348958
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11524,348994
    type P1 = PInt<UInt<UTerm, B1>>;P111525,349050
    type N1GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdN411528,349123
fn test_N1_Div_N4() {test_N1_Div_N411534,349298
    type A = NInt<UInt<UTerm, B1>>;A11535,349320
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11536,349356
    type _0 = Z0;_011537,349412
    type N1DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivN411540,349466
fn test_N1_Rem_N4() {test_N1_Rem_N411546,349641
    type A = NInt<UInt<UTerm, B1>>;A11547,349663
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11548,349699
    type N1 = NInt<UInt<UTerm, B1>>;N111549,349755
    type N1RemN4 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemN411552,349828
fn test_N1_Pow_N4() {test_N1_Pow_N411558,350003
    type A = NInt<UInt<UTerm, B1>>;A11559,350025
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11560,350061
    type P1 = PInt<UInt<UTerm, B1>>;P111561,350117
    type N1PowN4 = <<A as Pow<B>>::Output as Same<P1>>::Output;N1PowN411564,350190
fn test_N1_Cmp_N4() {test_N1_Cmp_N411570,350365
    type A = NInt<UInt<UTerm, B1>>;A11571,350387
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B11572,350423
    type N1CmpN4 = <A as Cmp<B>>::Output;N1CmpN411575,350515
fn test_N1_Add_N3() {test_N1_Add_N311580,350660
    type A = NInt<UInt<UTerm, B1>>;A11581,350682
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11582,350718
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N411583,350764
    type N1AddN3 = <<A as Add<B>>::Output as Same<N4>>::Output;N1AddN311586,350857
fn test_N1_Sub_N3() {test_N1_Sub_N311592,351032
    type A = NInt<UInt<UTerm, B1>>;A11593,351054
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11594,351090
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P211595,351136
    type N1SubN3 = <<A as Sub<B>>::Output as Same<P2>>::Output;N1SubN311598,351219
fn test_N1_Mul_N3() {test_N1_Mul_N311604,351394
    type A = NInt<UInt<UTerm, B1>>;A11605,351416
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11606,351452
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P311607,351498
    type N1MulN3 = <<A as Mul<B>>::Output as Same<P3>>::Output;N1MulN311610,351581
fn test_N1_Min_N3() {test_N1_Min_N311616,351756
    type A = NInt<UInt<UTerm, B1>>;A11617,351778
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11618,351814
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N311619,351860
    type N1MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;N1MinN311622,351943
fn test_N1_Max_N3() {test_N1_Max_N311628,352118
    type A = NInt<UInt<UTerm, B1>>;A11629,352140
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11630,352176
    type N1 = NInt<UInt<UTerm, B1>>;N111631,352222
    type N1MaxN3 = <<A as Max<B>>::Output as Same<N1>>::Output;N1MaxN311634,352295
fn test_N1_Gcd_N3() {test_N1_Gcd_N311640,352470
    type A = NInt<UInt<UTerm, B1>>;A11641,352492
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11642,352528
    type P1 = PInt<UInt<UTerm, B1>>;P111643,352574
    type N1GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdN311646,352647
fn test_N1_Div_N3() {test_N1_Div_N311652,352822
    type A = NInt<UInt<UTerm, B1>>;A11653,352844
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11654,352880
    type _0 = Z0;_011655,352926
    type N1DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivN311658,352980
fn test_N1_Rem_N3() {test_N1_Rem_N311664,353155
    type A = NInt<UInt<UTerm, B1>>;A11665,353177
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11666,353213
    type N1 = NInt<UInt<UTerm, B1>>;N111667,353259
    type N1RemN3 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemN311670,353332
fn test_N1_Pow_N3() {test_N1_Pow_N311676,353507
    type A = NInt<UInt<UTerm, B1>>;A11677,353529
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11678,353565
    type N1 = NInt<UInt<UTerm, B1>>;N111679,353611
    type N1PowN3 = <<A as Pow<B>>::Output as Same<N1>>::Output;N1PowN311682,353684
fn test_N1_Cmp_N3() {test_N1_Cmp_N311688,353859
    type A = NInt<UInt<UTerm, B1>>;A11689,353881
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B11690,353917
    type N1CmpN3 = <A as Cmp<B>>::Output;N1CmpN311693,353999
fn test_N1_Add_N2() {test_N1_Add_N211698,354144
    type A = NInt<UInt<UTerm, B1>>;A11699,354166
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11700,354202
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N311701,354248
    type N1AddN2 = <<A as Add<B>>::Output as Same<N3>>::Output;N1AddN211704,354331
fn test_N1_Sub_N2() {test_N1_Sub_N211710,354506
    type A = NInt<UInt<UTerm, B1>>;A11711,354528
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11712,354564
    type P1 = PInt<UInt<UTerm, B1>>;P111713,354610
    type N1SubN2 = <<A as Sub<B>>::Output as Same<P1>>::Output;N1SubN211716,354683
fn test_N1_Mul_N2() {test_N1_Mul_N211722,354858
    type A = NInt<UInt<UTerm, B1>>;A11723,354880
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11724,354916
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P211725,354962
    type N1MulN2 = <<A as Mul<B>>::Output as Same<P2>>::Output;N1MulN211728,355045
fn test_N1_Min_N2() {test_N1_Min_N211734,355220
    type A = NInt<UInt<UTerm, B1>>;A11735,355242
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11736,355278
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211737,355324
    type N1MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;N1MinN211740,355407
fn test_N1_Max_N2() {test_N1_Max_N211746,355582
    type A = NInt<UInt<UTerm, B1>>;A11747,355604
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11748,355640
    type N1 = NInt<UInt<UTerm, B1>>;N111749,355686
    type N1MaxN2 = <<A as Max<B>>::Output as Same<N1>>::Output;N1MaxN211752,355759
fn test_N1_Gcd_N2() {test_N1_Gcd_N211758,355934
    type A = NInt<UInt<UTerm, B1>>;A11759,355956
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11760,355992
    type P1 = PInt<UInt<UTerm, B1>>;P111761,356038
    type N1GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdN211764,356111
fn test_N1_Div_N2() {test_N1_Div_N211770,356286
    type A = NInt<UInt<UTerm, B1>>;A11771,356308
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11772,356344
    type _0 = Z0;_011773,356390
    type N1DivN2 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivN211776,356444
fn test_N1_Rem_N2() {test_N1_Rem_N211782,356619
    type A = NInt<UInt<UTerm, B1>>;A11783,356641
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11784,356677
    type N1 = NInt<UInt<UTerm, B1>>;N111785,356723
    type N1RemN2 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemN211788,356796
fn test_N1_Pow_N2() {test_N1_Pow_N211794,356971
    type A = NInt<UInt<UTerm, B1>>;A11795,356993
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11796,357029
    type P1 = PInt<UInt<UTerm, B1>>;P111797,357075
    type N1PowN2 = <<A as Pow<B>>::Output as Same<P1>>::Output;N1PowN211800,357148
fn test_N1_Cmp_N2() {test_N1_Cmp_N211806,357323
    type A = NInt<UInt<UTerm, B1>>;A11807,357345
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B11808,357381
    type N1CmpN2 = <A as Cmp<B>>::Output;N1CmpN211811,357463
fn test_N1_Add_N1() {test_N1_Add_N111816,357608
    type A = NInt<UInt<UTerm, B1>>;A11817,357630
    type B = NInt<UInt<UTerm, B1>>;B11818,357666
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N211819,357702
    type N1AddN1 = <<A as Add<B>>::Output as Same<N2>>::Output;N1AddN111822,357785
fn test_N1_Sub_N1() {test_N1_Sub_N111828,357960
    type A = NInt<UInt<UTerm, B1>>;A11829,357982
    type B = NInt<UInt<UTerm, B1>>;B11830,358018
    type _0 = Z0;_011831,358054
    type N1SubN1 = <<A as Sub<B>>::Output as Same<_0>>::Output;N1SubN111834,358108
fn test_N1_Mul_N1() {test_N1_Mul_N111840,358283
    type A = NInt<UInt<UTerm, B1>>;A11841,358305
    type B = NInt<UInt<UTerm, B1>>;B11842,358341
    type P1 = PInt<UInt<UTerm, B1>>;P111843,358377
    type N1MulN1 = <<A as Mul<B>>::Output as Same<P1>>::Output;N1MulN111846,358450
fn test_N1_Min_N1() {test_N1_Min_N111852,358625
    type A = NInt<UInt<UTerm, B1>>;A11853,358647
    type B = NInt<UInt<UTerm, B1>>;B11854,358683
    type N1 = NInt<UInt<UTerm, B1>>;N111855,358719
    type N1MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;N1MinN111858,358792
fn test_N1_Max_N1() {test_N1_Max_N111864,358967
    type A = NInt<UInt<UTerm, B1>>;A11865,358989
    type B = NInt<UInt<UTerm, B1>>;B11866,359025
    type N1 = NInt<UInt<UTerm, B1>>;N111867,359061
    type N1MaxN1 = <<A as Max<B>>::Output as Same<N1>>::Output;N1MaxN111870,359134
fn test_N1_Gcd_N1() {test_N1_Gcd_N111876,359309
    type A = NInt<UInt<UTerm, B1>>;A11877,359331
    type B = NInt<UInt<UTerm, B1>>;B11878,359367
    type P1 = PInt<UInt<UTerm, B1>>;P111879,359403
    type N1GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdN111882,359476
fn test_N1_Div_N1() {test_N1_Div_N111888,359651
    type A = NInt<UInt<UTerm, B1>>;A11889,359673
    type B = NInt<UInt<UTerm, B1>>;B11890,359709
    type P1 = PInt<UInt<UTerm, B1>>;P111891,359745
    type N1DivN1 = <<A as Div<B>>::Output as Same<P1>>::Output;N1DivN111894,359818
fn test_N1_Rem_N1() {test_N1_Rem_N111900,359993
    type A = NInt<UInt<UTerm, B1>>;A11901,360015
    type B = NInt<UInt<UTerm, B1>>;B11902,360051
    type _0 = Z0;_011903,360087
    type N1RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N1RemN111906,360141
fn test_N1_PartialDiv_N1() {test_N1_PartialDiv_N111912,360316
    type A = NInt<UInt<UTerm, B1>>;A11913,360345
    type B = NInt<UInt<UTerm, B1>>;B11914,360381
    type P1 = PInt<UInt<UTerm, B1>>;P111915,360417
    type N1PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;N1PartialDivN111918,360490
fn test_N1_Pow_N1() {test_N1_Pow_N111924,360686
    type A = NInt<UInt<UTerm, B1>>;A11925,360708
    type B = NInt<UInt<UTerm, B1>>;B11926,360744
    type N1 = NInt<UInt<UTerm, B1>>;N111927,360780
    type N1PowN1 = <<A as Pow<B>>::Output as Same<N1>>::Output;N1PowN111930,360853
fn test_N1_Cmp_N1() {test_N1_Cmp_N111936,361028
    type A = NInt<UInt<UTerm, B1>>;A11937,361050
    type B = NInt<UInt<UTerm, B1>>;B11938,361086
    type N1CmpN1 = <A as Cmp<B>>::Output;N1CmpN111941,361158
fn test_N1_Add__0() {test_N1_Add__011946,361301
    type A = NInt<UInt<UTerm, B1>>;A11947,361323
    type B = Z0;B11948,361359
    type N1 = NInt<UInt<UTerm, B1>>;N111949,361376
    type N1Add_0 = <<A as Add<B>>::Output as Same<N1>>::Output;N1Add_011952,361449
fn test_N1_Sub__0() {test_N1_Sub__011958,361624
    type A = NInt<UInt<UTerm, B1>>;A11959,361646
    type B = Z0;B11960,361682
    type N1 = NInt<UInt<UTerm, B1>>;N111961,361699
    type N1Sub_0 = <<A as Sub<B>>::Output as Same<N1>>::Output;N1Sub_011964,361772
fn test_N1_Mul__0() {test_N1_Mul__011970,361947
    type A = NInt<UInt<UTerm, B1>>;A11971,361969
    type B = Z0;B11972,362005
    type _0 = Z0;_011973,362022
    type N1Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;N1Mul_011976,362076
fn test_N1_Min__0() {test_N1_Min__011982,362251
    type A = NInt<UInt<UTerm, B1>>;A11983,362273
    type B = Z0;B11984,362309
    type N1 = NInt<UInt<UTerm, B1>>;N111985,362326
    type N1Min_0 = <<A as Min<B>>::Output as Same<N1>>::Output;N1Min_011988,362399
fn test_N1_Max__0() {test_N1_Max__011994,362574
    type A = NInt<UInt<UTerm, B1>>;A11995,362596
    type B = Z0;B11996,362632
    type _0 = Z0;_011997,362649
    type N1Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;N1Max_012000,362703
fn test_N1_Gcd__0() {test_N1_Gcd__012006,362878
    type A = NInt<UInt<UTerm, B1>>;A12007,362900
    type B = Z0;B12008,362936
    type P1 = PInt<UInt<UTerm, B1>>;P112009,362953
    type N1Gcd_0 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1Gcd_012012,363026
fn test_N1_Pow__0() {test_N1_Pow__012018,363201
    type A = NInt<UInt<UTerm, B1>>;A12019,363223
    type B = Z0;B12020,363259
    type P1 = PInt<UInt<UTerm, B1>>;P112021,363276
    type N1Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;N1Pow_012024,363349
fn test_N1_Cmp__0() {test_N1_Cmp__012030,363524
    type A = NInt<UInt<UTerm, B1>>;A12031,363546
    type B = Z0;B12032,363582
    type N1Cmp_0 = <A as Cmp<B>>::Output;N1Cmp_012035,363635
fn test_N1_Add_P1() {test_N1_Add_P112040,363777
    type A = NInt<UInt<UTerm, B1>>;A12041,363799
    type B = PInt<UInt<UTerm, B1>>;B12042,363835
    type _0 = Z0;_012043,363871
    type N1AddP1 = <<A as Add<B>>::Output as Same<_0>>::Output;N1AddP112046,363925
fn test_N1_Sub_P1() {test_N1_Sub_P112052,364100
    type A = NInt<UInt<UTerm, B1>>;A12053,364122
    type B = PInt<UInt<UTerm, B1>>;B12054,364158
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N212055,364194
    type N1SubP1 = <<A as Sub<B>>::Output as Same<N2>>::Output;N1SubP112058,364277
fn test_N1_Mul_P1() {test_N1_Mul_P112064,364452
    type A = NInt<UInt<UTerm, B1>>;A12065,364474
    type B = PInt<UInt<UTerm, B1>>;B12066,364510
    type N1 = NInt<UInt<UTerm, B1>>;N112067,364546
    type N1MulP1 = <<A as Mul<B>>::Output as Same<N1>>::Output;N1MulP112070,364619
fn test_N1_Min_P1() {test_N1_Min_P112076,364794
    type A = NInt<UInt<UTerm, B1>>;A12077,364816
    type B = PInt<UInt<UTerm, B1>>;B12078,364852
    type N1 = NInt<UInt<UTerm, B1>>;N112079,364888
    type N1MinP1 = <<A as Min<B>>::Output as Same<N1>>::Output;N1MinP112082,364961
fn test_N1_Max_P1() {test_N1_Max_P112088,365136
    type A = NInt<UInt<UTerm, B1>>;A12089,365158
    type B = PInt<UInt<UTerm, B1>>;B12090,365194
    type P1 = PInt<UInt<UTerm, B1>>;P112091,365230
    type N1MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;N1MaxP112094,365303
fn test_N1_Gcd_P1() {test_N1_Gcd_P112100,365478
    type A = NInt<UInt<UTerm, B1>>;A12101,365500
    type B = PInt<UInt<UTerm, B1>>;B12102,365536
    type P1 = PInt<UInt<UTerm, B1>>;P112103,365572
    type N1GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdP112106,365645
fn test_N1_Div_P1() {test_N1_Div_P112112,365820
    type A = NInt<UInt<UTerm, B1>>;A12113,365842
    type B = PInt<UInt<UTerm, B1>>;B12114,365878
    type N1 = NInt<UInt<UTerm, B1>>;N112115,365914
    type N1DivP1 = <<A as Div<B>>::Output as Same<N1>>::Output;N1DivP112118,365987
fn test_N1_Rem_P1() {test_N1_Rem_P112124,366162
    type A = NInt<UInt<UTerm, B1>>;A12125,366184
    type B = PInt<UInt<UTerm, B1>>;B12126,366220
    type _0 = Z0;_012127,366256
    type N1RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;N1RemP112130,366310
fn test_N1_PartialDiv_P1() {test_N1_PartialDiv_P112136,366485
    type A = NInt<UInt<UTerm, B1>>;A12137,366514
    type B = PInt<UInt<UTerm, B1>>;B12138,366550
    type N1 = NInt<UInt<UTerm, B1>>;N112139,366586
    type N1PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;N1PartialDivP112142,366659
fn test_N1_Pow_P1() {test_N1_Pow_P112148,366855
    type A = NInt<UInt<UTerm, B1>>;A12149,366877
    type B = PInt<UInt<UTerm, B1>>;B12150,366913
    type N1 = NInt<UInt<UTerm, B1>>;N112151,366949
    type N1PowP1 = <<A as Pow<B>>::Output as Same<N1>>::Output;N1PowP112154,367022
fn test_N1_Cmp_P1() {test_N1_Cmp_P112160,367197
    type A = NInt<UInt<UTerm, B1>>;A12161,367219
    type B = PInt<UInt<UTerm, B1>>;B12162,367255
    type N1CmpP1 = <A as Cmp<B>>::Output;N1CmpP112165,367327
fn test_N1_Add_P2() {test_N1_Add_P212170,367469
    type A = NInt<UInt<UTerm, B1>>;A12171,367491
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12172,367527
    type P1 = PInt<UInt<UTerm, B1>>;P112173,367573
    type N1AddP2 = <<A as Add<B>>::Output as Same<P1>>::Output;N1AddP212176,367646
fn test_N1_Sub_P2() {test_N1_Sub_P212182,367821
    type A = NInt<UInt<UTerm, B1>>;A12183,367843
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12184,367879
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N312185,367925
    type N1SubP2 = <<A as Sub<B>>::Output as Same<N3>>::Output;N1SubP212188,368008
fn test_N1_Mul_P2() {test_N1_Mul_P212194,368183
    type A = NInt<UInt<UTerm, B1>>;A12195,368205
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12196,368241
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N212197,368287
    type N1MulP2 = <<A as Mul<B>>::Output as Same<N2>>::Output;N1MulP212200,368370
fn test_N1_Min_P2() {test_N1_Min_P212206,368545
    type A = NInt<UInt<UTerm, B1>>;A12207,368567
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12208,368603
    type N1 = NInt<UInt<UTerm, B1>>;N112209,368649
    type N1MinP2 = <<A as Min<B>>::Output as Same<N1>>::Output;N1MinP212212,368722
fn test_N1_Max_P2() {test_N1_Max_P212218,368897
    type A = NInt<UInt<UTerm, B1>>;A12219,368919
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12220,368955
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P212221,369001
    type N1MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;N1MaxP212224,369084
fn test_N1_Gcd_P2() {test_N1_Gcd_P212230,369259
    type A = NInt<UInt<UTerm, B1>>;A12231,369281
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12232,369317
    type P1 = PInt<UInt<UTerm, B1>>;P112233,369363
    type N1GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdP212236,369436
fn test_N1_Div_P2() {test_N1_Div_P212242,369611
    type A = NInt<UInt<UTerm, B1>>;A12243,369633
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12244,369669
    type _0 = Z0;_012245,369715
    type N1DivP2 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivP212248,369769
fn test_N1_Rem_P2() {test_N1_Rem_P212254,369944
    type A = NInt<UInt<UTerm, B1>>;A12255,369966
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12256,370002
    type N1 = NInt<UInt<UTerm, B1>>;N112257,370048
    type N1RemP2 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemP212260,370121
fn test_N1_Pow_P2() {test_N1_Pow_P212266,370296
    type A = NInt<UInt<UTerm, B1>>;A12267,370318
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12268,370354
    type P1 = PInt<UInt<UTerm, B1>>;P112269,370400
    type N1PowP2 = <<A as Pow<B>>::Output as Same<P1>>::Output;N1PowP212272,370473
fn test_N1_Cmp_P2() {test_N1_Cmp_P212278,370648
    type A = NInt<UInt<UTerm, B1>>;A12279,370670
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B12280,370706
    type N1CmpP2 = <A as Cmp<B>>::Output;N1CmpP212283,370788
fn test_N1_Add_P3() {test_N1_Add_P312288,370930
    type A = NInt<UInt<UTerm, B1>>;A12289,370952
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12290,370988
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P212291,371034
    type N1AddP3 = <<A as Add<B>>::Output as Same<P2>>::Output;N1AddP312294,371117
fn test_N1_Sub_P3() {test_N1_Sub_P312300,371292
    type A = NInt<UInt<UTerm, B1>>;A12301,371314
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12302,371350
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N412303,371396
    type N1SubP3 = <<A as Sub<B>>::Output as Same<N4>>::Output;N1SubP312306,371489
fn test_N1_Mul_P3() {test_N1_Mul_P312312,371664
    type A = NInt<UInt<UTerm, B1>>;A12313,371686
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12314,371722
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N312315,371768
    type N1MulP3 = <<A as Mul<B>>::Output as Same<N3>>::Output;N1MulP312318,371851
fn test_N1_Min_P3() {test_N1_Min_P312324,372026
    type A = NInt<UInt<UTerm, B1>>;A12325,372048
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12326,372084
    type N1 = NInt<UInt<UTerm, B1>>;N112327,372130
    type N1MinP3 = <<A as Min<B>>::Output as Same<N1>>::Output;N1MinP312330,372203
fn test_N1_Max_P3() {test_N1_Max_P312336,372378
    type A = NInt<UInt<UTerm, B1>>;A12337,372400
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12338,372436
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P312339,372482
    type N1MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;N1MaxP312342,372565
fn test_N1_Gcd_P3() {test_N1_Gcd_P312348,372740
    type A = NInt<UInt<UTerm, B1>>;A12349,372762
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12350,372798
    type P1 = PInt<UInt<UTerm, B1>>;P112351,372844
    type N1GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdP312354,372917
fn test_N1_Div_P3() {test_N1_Div_P312360,373092
    type A = NInt<UInt<UTerm, B1>>;A12361,373114
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12362,373150
    type _0 = Z0;_012363,373196
    type N1DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivP312366,373250
fn test_N1_Rem_P3() {test_N1_Rem_P312372,373425
    type A = NInt<UInt<UTerm, B1>>;A12373,373447
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12374,373483
    type N1 = NInt<UInt<UTerm, B1>>;N112375,373529
    type N1RemP3 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemP312378,373602
fn test_N1_Pow_P3() {test_N1_Pow_P312384,373777
    type A = NInt<UInt<UTerm, B1>>;A12385,373799
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12386,373835
    type N1 = NInt<UInt<UTerm, B1>>;N112387,373881
    type N1PowP3 = <<A as Pow<B>>::Output as Same<N1>>::Output;N1PowP312390,373954
fn test_N1_Cmp_P3() {test_N1_Cmp_P312396,374129
    type A = NInt<UInt<UTerm, B1>>;A12397,374151
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B12398,374187
    type N1CmpP3 = <A as Cmp<B>>::Output;N1CmpP312401,374269
fn test_N1_Add_P4() {test_N1_Add_P412406,374411
    type A = NInt<UInt<UTerm, B1>>;A12407,374433
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12408,374469
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P312409,374525
    type N1AddP4 = <<A as Add<B>>::Output as Same<P3>>::Output;N1AddP412412,374608
fn test_N1_Sub_P4() {test_N1_Sub_P412418,374783
    type A = NInt<UInt<UTerm, B1>>;A12419,374805
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12420,374841
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N512421,374897
    type N1SubP4 = <<A as Sub<B>>::Output as Same<N5>>::Output;N1SubP412424,374990
fn test_N1_Mul_P4() {test_N1_Mul_P412430,375165
    type A = NInt<UInt<UTerm, B1>>;A12431,375187
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12432,375223
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N412433,375279
    type N1MulP4 = <<A as Mul<B>>::Output as Same<N4>>::Output;N1MulP412436,375372
fn test_N1_Min_P4() {test_N1_Min_P412442,375547
    type A = NInt<UInt<UTerm, B1>>;A12443,375569
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12444,375605
    type N1 = NInt<UInt<UTerm, B1>>;N112445,375661
    type N1MinP4 = <<A as Min<B>>::Output as Same<N1>>::Output;N1MinP412448,375734
fn test_N1_Max_P4() {test_N1_Max_P412454,375909
    type A = NInt<UInt<UTerm, B1>>;A12455,375931
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12456,375967
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P412457,376023
    type N1MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;N1MaxP412460,376116
fn test_N1_Gcd_P4() {test_N1_Gcd_P412466,376291
    type A = NInt<UInt<UTerm, B1>>;A12467,376313
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12468,376349
    type P1 = PInt<UInt<UTerm, B1>>;P112469,376405
    type N1GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdP412472,376478
fn test_N1_Div_P4() {test_N1_Div_P412478,376653
    type A = NInt<UInt<UTerm, B1>>;A12479,376675
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12480,376711
    type _0 = Z0;_012481,376767
    type N1DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivP412484,376821
fn test_N1_Rem_P4() {test_N1_Rem_P412490,376996
    type A = NInt<UInt<UTerm, B1>>;A12491,377018
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12492,377054
    type N1 = NInt<UInt<UTerm, B1>>;N112493,377110
    type N1RemP4 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemP412496,377183
fn test_N1_Pow_P4() {test_N1_Pow_P412502,377358
    type A = NInt<UInt<UTerm, B1>>;A12503,377380
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12504,377416
    type P1 = PInt<UInt<UTerm, B1>>;P112505,377472
    type N1PowP4 = <<A as Pow<B>>::Output as Same<P1>>::Output;N1PowP412508,377545
fn test_N1_Cmp_P4() {test_N1_Cmp_P412514,377720
    type A = NInt<UInt<UTerm, B1>>;A12515,377742
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12516,377778
    type N1CmpP4 = <A as Cmp<B>>::Output;N1CmpP412519,377870
fn test_N1_Add_P5() {test_N1_Add_P512524,378012
    type A = NInt<UInt<UTerm, B1>>;A12525,378034
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12526,378070
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P412527,378126
    type N1AddP5 = <<A as Add<B>>::Output as Same<P4>>::Output;N1AddP512530,378219
fn test_N1_Sub_P5() {test_N1_Sub_P512536,378394
    type A = NInt<UInt<UTerm, B1>>;A12537,378416
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12538,378452
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N612539,378508
    type N1SubP5 = <<A as Sub<B>>::Output as Same<N6>>::Output;N1SubP512542,378601
fn test_N1_Mul_P5() {test_N1_Mul_P512548,378776
    type A = NInt<UInt<UTerm, B1>>;A12549,378798
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12550,378834
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N512551,378890
    type N1MulP5 = <<A as Mul<B>>::Output as Same<N5>>::Output;N1MulP512554,378983
fn test_N1_Min_P5() {test_N1_Min_P512560,379158
    type A = NInt<UInt<UTerm, B1>>;A12561,379180
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12562,379216
    type N1 = NInt<UInt<UTerm, B1>>;N112563,379272
    type N1MinP5 = <<A as Min<B>>::Output as Same<N1>>::Output;N1MinP512566,379345
fn test_N1_Max_P5() {test_N1_Max_P512572,379520
    type A = NInt<UInt<UTerm, B1>>;A12573,379542
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12574,379578
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P512575,379634
    type N1MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;N1MaxP512578,379727
fn test_N1_Gcd_P5() {test_N1_Gcd_P512584,379902
    type A = NInt<UInt<UTerm, B1>>;A12585,379924
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12586,379960
    type P1 = PInt<UInt<UTerm, B1>>;P112587,380016
    type N1GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;N1GcdP512590,380089
fn test_N1_Div_P5() {test_N1_Div_P512596,380264
    type A = NInt<UInt<UTerm, B1>>;A12597,380286
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12598,380322
    type _0 = Z0;_012599,380378
    type N1DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;N1DivP512602,380432
fn test_N1_Rem_P5() {test_N1_Rem_P512608,380607
    type A = NInt<UInt<UTerm, B1>>;A12609,380629
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12610,380665
    type N1 = NInt<UInt<UTerm, B1>>;N112611,380721
    type N1RemP5 = <<A as Rem<B>>::Output as Same<N1>>::Output;N1RemP512614,380794
fn test_N1_Pow_P5() {test_N1_Pow_P512620,380969
    type A = NInt<UInt<UTerm, B1>>;A12621,380991
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12622,381027
    type N1 = NInt<UInt<UTerm, B1>>;N112623,381083
    type N1PowP5 = <<A as Pow<B>>::Output as Same<N1>>::Output;N1PowP512626,381156
fn test_N1_Cmp_P5() {test_N1_Cmp_P512632,381331
    type A = NInt<UInt<UTerm, B1>>;A12633,381353
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12634,381389
    type N1CmpP5 = <A as Cmp<B>>::Output;N1CmpP512637,381481
fn test__0_Add_N5() {test__0_Add_N512642,381623
    type A = Z0;A12643,381645
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12644,381662
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N512645,381718
    type _0AddN5 = <<A as Add<B>>::Output as Same<N5>>::Output;_0AddN512648,381811
fn test__0_Sub_N5() {test__0_Sub_N512654,381986
    type A = Z0;A12655,382008
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12656,382025
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P512657,382081
    type _0SubN5 = <<A as Sub<B>>::Output as Same<P5>>::Output;_0SubN512660,382174
fn test__0_Mul_N5() {test__0_Mul_N512666,382349
    type A = Z0;A12667,382371
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12668,382388
    type _0 = Z0;_012669,382444
    type _0MulN5 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulN512672,382498
fn test__0_Min_N5() {test__0_Min_N512678,382673
    type A = Z0;A12679,382695
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12680,382712
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N512681,382768
    type _0MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;_0MinN512684,382861
fn test__0_Max_N5() {test__0_Max_N512690,383036
    type A = Z0;A12691,383058
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12692,383075
    type _0 = Z0;_012693,383131
    type _0MaxN5 = <<A as Max<B>>::Output as Same<_0>>::Output;_0MaxN512696,383185
fn test__0_Gcd_N5() {test__0_Gcd_N512702,383360
    type A = Z0;A12703,383382
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12704,383399
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P512705,383455
    type _0GcdN5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;_0GcdN512708,383548
fn test__0_Div_N5() {test__0_Div_N512714,383723
    type A = Z0;A12715,383745
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12716,383762
    type _0 = Z0;_012717,383818
    type _0DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivN512720,383872
fn test__0_Rem_N5() {test__0_Rem_N512726,384047
    type A = Z0;A12727,384069
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12728,384086
    type _0 = Z0;_012729,384142
    type _0RemN5 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemN512732,384196
fn test__0_PartialDiv_N5() {test__0_PartialDiv_N512738,384371
    type A = Z0;A12739,384400
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12740,384417
    type _0 = Z0;_012741,384473
    type _0PartialDivN5 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivN512744,384527
fn test__0_Cmp_N5() {test__0_Cmp_N512750,384723
    type A = Z0;A12751,384745
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B12752,384762
    type _0CmpN5 = <A as Cmp<B>>::Output;_0CmpN512755,384854
fn test__0_Add_N4() {test__0_Add_N412760,384999
    type A = Z0;A12761,385021
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12762,385038
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N412763,385094
    type _0AddN4 = <<A as Add<B>>::Output as Same<N4>>::Output;_0AddN412766,385187
fn test__0_Sub_N4() {test__0_Sub_N412772,385362
    type A = Z0;A12773,385384
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12774,385401
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P412775,385457
    type _0SubN4 = <<A as Sub<B>>::Output as Same<P4>>::Output;_0SubN412778,385550
fn test__0_Mul_N4() {test__0_Mul_N412784,385725
    type A = Z0;A12785,385747
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12786,385764
    type _0 = Z0;_012787,385820
    type _0MulN4 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulN412790,385874
fn test__0_Min_N4() {test__0_Min_N412796,386049
    type A = Z0;A12797,386071
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12798,386088
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N412799,386144
    type _0MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;_0MinN412802,386237
fn test__0_Max_N4() {test__0_Max_N412808,386412
    type A = Z0;A12809,386434
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12810,386451
    type _0 = Z0;_012811,386507
    type _0MaxN4 = <<A as Max<B>>::Output as Same<_0>>::Output;_0MaxN412814,386561
fn test__0_Gcd_N4() {test__0_Gcd_N412820,386736
    type A = Z0;A12821,386758
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12822,386775
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P412823,386831
    type _0GcdN4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;_0GcdN412826,386924
fn test__0_Div_N4() {test__0_Div_N412832,387099
    type A = Z0;A12833,387121
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12834,387138
    type _0 = Z0;_012835,387194
    type _0DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivN412838,387248
fn test__0_Rem_N4() {test__0_Rem_N412844,387423
    type A = Z0;A12845,387445
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12846,387462
    type _0 = Z0;_012847,387518
    type _0RemN4 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemN412850,387572
fn test__0_PartialDiv_N4() {test__0_PartialDiv_N412856,387747
    type A = Z0;A12857,387776
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12858,387793
    type _0 = Z0;_012859,387849
    type _0PartialDivN4 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivN412862,387903
fn test__0_Cmp_N4() {test__0_Cmp_N412868,388099
    type A = Z0;A12869,388121
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B12870,388138
    type _0CmpN4 = <A as Cmp<B>>::Output;_0CmpN412873,388230
fn test__0_Add_N3() {test__0_Add_N312878,388375
    type A = Z0;A12879,388397
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12880,388414
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N312881,388460
    type _0AddN3 = <<A as Add<B>>::Output as Same<N3>>::Output;_0AddN312884,388543
fn test__0_Sub_N3() {test__0_Sub_N312890,388718
    type A = Z0;A12891,388740
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12892,388757
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P312893,388803
    type _0SubN3 = <<A as Sub<B>>::Output as Same<P3>>::Output;_0SubN312896,388886
fn test__0_Mul_N3() {test__0_Mul_N312902,389061
    type A = Z0;A12903,389083
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12904,389100
    type _0 = Z0;_012905,389146
    type _0MulN3 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulN312908,389200
fn test__0_Min_N3() {test__0_Min_N312914,389375
    type A = Z0;A12915,389397
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12916,389414
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N312917,389460
    type _0MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;_0MinN312920,389543
fn test__0_Max_N3() {test__0_Max_N312926,389718
    type A = Z0;A12927,389740
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12928,389757
    type _0 = Z0;_012929,389803
    type _0MaxN3 = <<A as Max<B>>::Output as Same<_0>>::Output;_0MaxN312932,389857
fn test__0_Gcd_N3() {test__0_Gcd_N312938,390032
    type A = Z0;A12939,390054
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12940,390071
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P312941,390117
    type _0GcdN3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;_0GcdN312944,390200
fn test__0_Div_N3() {test__0_Div_N312950,390375
    type A = Z0;A12951,390397
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12952,390414
    type _0 = Z0;_012953,390460
    type _0DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivN312956,390514
fn test__0_Rem_N3() {test__0_Rem_N312962,390689
    type A = Z0;A12963,390711
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12964,390728
    type _0 = Z0;_012965,390774
    type _0RemN3 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemN312968,390828
fn test__0_PartialDiv_N3() {test__0_PartialDiv_N312974,391003
    type A = Z0;A12975,391032
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12976,391049
    type _0 = Z0;_012977,391095
    type _0PartialDivN3 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivN312980,391149
fn test__0_Cmp_N3() {test__0_Cmp_N312986,391345
    type A = Z0;A12987,391367
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B12988,391384
    type _0CmpN3 = <A as Cmp<B>>::Output;_0CmpN312991,391466
fn test__0_Add_N2() {test__0_Add_N212996,391611
    type A = Z0;A12997,391633
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B12998,391650
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N212999,391696
    type _0AddN2 = <<A as Add<B>>::Output as Same<N2>>::Output;_0AddN213002,391779
fn test__0_Sub_N2() {test__0_Sub_N213008,391954
    type A = Z0;A13009,391976
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13010,391993
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P213011,392039
    type _0SubN2 = <<A as Sub<B>>::Output as Same<P2>>::Output;_0SubN213014,392122
fn test__0_Mul_N2() {test__0_Mul_N213020,392297
    type A = Z0;A13021,392319
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13022,392336
    type _0 = Z0;_013023,392382
    type _0MulN2 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulN213026,392436
fn test__0_Min_N2() {test__0_Min_N213032,392611
    type A = Z0;A13033,392633
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13034,392650
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N213035,392696
    type _0MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;_0MinN213038,392779
fn test__0_Max_N2() {test__0_Max_N213044,392954
    type A = Z0;A13045,392976
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13046,392993
    type _0 = Z0;_013047,393039
    type _0MaxN2 = <<A as Max<B>>::Output as Same<_0>>::Output;_0MaxN213050,393093
fn test__0_Gcd_N2() {test__0_Gcd_N213056,393268
    type A = Z0;A13057,393290
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13058,393307
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P213059,393353
    type _0GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;_0GcdN213062,393436
fn test__0_Div_N2() {test__0_Div_N213068,393611
    type A = Z0;A13069,393633
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13070,393650
    type _0 = Z0;_013071,393696
    type _0DivN2 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivN213074,393750
fn test__0_Rem_N2() {test__0_Rem_N213080,393925
    type A = Z0;A13081,393947
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13082,393964
    type _0 = Z0;_013083,394010
    type _0RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemN213086,394064
fn test__0_PartialDiv_N2() {test__0_PartialDiv_N213092,394239
    type A = Z0;A13093,394268
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13094,394285
    type _0 = Z0;_013095,394331
    type _0PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivN213098,394385
fn test__0_Cmp_N2() {test__0_Cmp_N213104,394581
    type A = Z0;A13105,394603
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B13106,394620
    type _0CmpN2 = <A as Cmp<B>>::Output;_0CmpN213109,394702
fn test__0_Add_N1() {test__0_Add_N113114,394847
    type A = Z0;A13115,394869
    type B = NInt<UInt<UTerm, B1>>;B13116,394886
    type N1 = NInt<UInt<UTerm, B1>>;N113117,394922
    type _0AddN1 = <<A as Add<B>>::Output as Same<N1>>::Output;_0AddN113120,394995
fn test__0_Sub_N1() {test__0_Sub_N113126,395170
    type A = Z0;A13127,395192
    type B = NInt<UInt<UTerm, B1>>;B13128,395209
    type P1 = PInt<UInt<UTerm, B1>>;P113129,395245
    type _0SubN1 = <<A as Sub<B>>::Output as Same<P1>>::Output;_0SubN113132,395318
fn test__0_Mul_N1() {test__0_Mul_N113138,395493
    type A = Z0;A13139,395515
    type B = NInt<UInt<UTerm, B1>>;B13140,395532
    type _0 = Z0;_013141,395568
    type _0MulN1 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulN113144,395622
fn test__0_Min_N1() {test__0_Min_N113150,395797
    type A = Z0;A13151,395819
    type B = NInt<UInt<UTerm, B1>>;B13152,395836
    type N1 = NInt<UInt<UTerm, B1>>;N113153,395872
    type _0MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;_0MinN113156,395945
fn test__0_Max_N1() {test__0_Max_N113162,396120
    type A = Z0;A13163,396142
    type B = NInt<UInt<UTerm, B1>>;B13164,396159
    type _0 = Z0;_013165,396195
    type _0MaxN1 = <<A as Max<B>>::Output as Same<_0>>::Output;_0MaxN113168,396249
fn test__0_Gcd_N1() {test__0_Gcd_N113174,396424
    type A = Z0;A13175,396446
    type B = NInt<UInt<UTerm, B1>>;B13176,396463
    type P1 = PInt<UInt<UTerm, B1>>;P113177,396499
    type _0GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;_0GcdN113180,396572
fn test__0_Div_N1() {test__0_Div_N113186,396747
    type A = Z0;A13187,396769
    type B = NInt<UInt<UTerm, B1>>;B13188,396786
    type _0 = Z0;_013189,396822
    type _0DivN1 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivN113192,396876
fn test__0_Rem_N1() {test__0_Rem_N113198,397051
    type A = Z0;A13199,397073
    type B = NInt<UInt<UTerm, B1>>;B13200,397090
    type _0 = Z0;_013201,397126
    type _0RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemN113204,397180
fn test__0_PartialDiv_N1() {test__0_PartialDiv_N113210,397355
    type A = Z0;A13211,397384
    type B = NInt<UInt<UTerm, B1>>;B13212,397401
    type _0 = Z0;_013213,397437
    type _0PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivN113216,397491
fn test__0_Cmp_N1() {test__0_Cmp_N113222,397687
    type A = Z0;A13223,397709
    type B = NInt<UInt<UTerm, B1>>;B13224,397726
    type _0CmpN1 = <A as Cmp<B>>::Output;_0CmpN113227,397798
fn test__0_Add__0() {test__0_Add__013232,397943
    type A = Z0;A13233,397965
    type B = Z0;B13234,397982
    type _0 = Z0;_013235,397999
    type _0Add_0 = <<A as Add<B>>::Output as Same<_0>>::Output;_0Add_013238,398053
fn test__0_Sub__0() {test__0_Sub__013244,398228
    type A = Z0;A13245,398250
    type B = Z0;B13246,398267
    type _0 = Z0;_013247,398284
    type _0Sub_0 = <<A as Sub<B>>::Output as Same<_0>>::Output;_0Sub_013250,398338
fn test__0_Mul__0() {test__0_Mul__013256,398513
    type A = Z0;A13257,398535
    type B = Z0;B13258,398552
    type _0 = Z0;_013259,398569
    type _0Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0Mul_013262,398623
fn test__0_Min__0() {test__0_Min__013268,398798
    type A = Z0;A13269,398820
    type B = Z0;B13270,398837
    type _0 = Z0;_013271,398854
    type _0Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;_0Min_013274,398908
fn test__0_Max__0() {test__0_Max__013280,399083
    type A = Z0;A13281,399105
    type B = Z0;B13282,399122
    type _0 = Z0;_013283,399139
    type _0Max_0 = <<A as Max<B>>::Output as Same<_0>>::Output;_0Max_013286,399193
fn test__0_Gcd__0() {test__0_Gcd__013292,399368
    type A = Z0;A13293,399390
    type B = Z0;B13294,399407
    type _0 = Z0;_013295,399424
    type _0Gcd_0 = <<A as Gcd<B>>::Output as Same<_0>>::Output;_0Gcd_013298,399478
fn test__0_Pow__0() {test__0_Pow__013304,399653
    type A = Z0;A13305,399675
    type B = Z0;B13306,399692
    type P1 = PInt<UInt<UTerm, B1>>;P113307,399709
    type _0Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;_0Pow_013310,399782
fn test__0_Cmp__0() {test__0_Cmp__013316,399957
    type A = Z0;A13317,399979
    type B = Z0;B13318,399996
    type _0Cmp_0 = <A as Cmp<B>>::Output;_0Cmp_013321,400049
fn test__0_Add_P1() {test__0_Add_P113326,400192
    type A = Z0;A13327,400214
    type B = PInt<UInt<UTerm, B1>>;B13328,400231
    type P1 = PInt<UInt<UTerm, B1>>;P113329,400267
    type _0AddP1 = <<A as Add<B>>::Output as Same<P1>>::Output;_0AddP113332,400340
fn test__0_Sub_P1() {test__0_Sub_P113338,400515
    type A = Z0;A13339,400537
    type B = PInt<UInt<UTerm, B1>>;B13340,400554
    type N1 = NInt<UInt<UTerm, B1>>;N113341,400590
    type _0SubP1 = <<A as Sub<B>>::Output as Same<N1>>::Output;_0SubP113344,400663
fn test__0_Mul_P1() {test__0_Mul_P113350,400838
    type A = Z0;A13351,400860
    type B = PInt<UInt<UTerm, B1>>;B13352,400877
    type _0 = Z0;_013353,400913
    type _0MulP1 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulP113356,400967
fn test__0_Min_P1() {test__0_Min_P113362,401142
    type A = Z0;A13363,401164
    type B = PInt<UInt<UTerm, B1>>;B13364,401181
    type _0 = Z0;_013365,401217
    type _0MinP1 = <<A as Min<B>>::Output as Same<_0>>::Output;_0MinP113368,401271
fn test__0_Max_P1() {test__0_Max_P113374,401446
    type A = Z0;A13375,401468
    type B = PInt<UInt<UTerm, B1>>;B13376,401485
    type P1 = PInt<UInt<UTerm, B1>>;P113377,401521
    type _0MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;_0MaxP113380,401594
fn test__0_Gcd_P1() {test__0_Gcd_P113386,401769
    type A = Z0;A13387,401791
    type B = PInt<UInt<UTerm, B1>>;B13388,401808
    type P1 = PInt<UInt<UTerm, B1>>;P113389,401844
    type _0GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;_0GcdP113392,401917
fn test__0_Div_P1() {test__0_Div_P113398,402092
    type A = Z0;A13399,402114
    type B = PInt<UInt<UTerm, B1>>;B13400,402131
    type _0 = Z0;_013401,402167
    type _0DivP1 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivP113404,402221
fn test__0_Rem_P1() {test__0_Rem_P113410,402396
    type A = Z0;A13411,402418
    type B = PInt<UInt<UTerm, B1>>;B13412,402435
    type _0 = Z0;_013413,402471
    type _0RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemP113416,402525
fn test__0_PartialDiv_P1() {test__0_PartialDiv_P113422,402700
    type A = Z0;A13423,402729
    type B = PInt<UInt<UTerm, B1>>;B13424,402746
    type _0 = Z0;_013425,402782
    type _0PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivP113428,402836
fn test__0_Pow_P1() {test__0_Pow_P113434,403032
    type A = Z0;A13435,403054
    type B = PInt<UInt<UTerm, B1>>;B13436,403071
    type _0 = Z0;_013437,403107
    type _0PowP1 = <<A as Pow<B>>::Output as Same<_0>>::Output;_0PowP113440,403161
fn test__0_Cmp_P1() {test__0_Cmp_P113446,403336
    type A = Z0;A13447,403358
    type B = PInt<UInt<UTerm, B1>>;B13448,403375
    type _0CmpP1 = <A as Cmp<B>>::Output;_0CmpP113451,403447
fn test__0_Add_P2() {test__0_Add_P213456,403589
    type A = Z0;A13457,403611
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13458,403628
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P213459,403674
    type _0AddP2 = <<A as Add<B>>::Output as Same<P2>>::Output;_0AddP213462,403757
fn test__0_Sub_P2() {test__0_Sub_P213468,403932
    type A = Z0;A13469,403954
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13470,403971
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N213471,404017
    type _0SubP2 = <<A as Sub<B>>::Output as Same<N2>>::Output;_0SubP213474,404100
fn test__0_Mul_P2() {test__0_Mul_P213480,404275
    type A = Z0;A13481,404297
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13482,404314
    type _0 = Z0;_013483,404360
    type _0MulP2 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulP213486,404414
fn test__0_Min_P2() {test__0_Min_P213492,404589
    type A = Z0;A13493,404611
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13494,404628
    type _0 = Z0;_013495,404674
    type _0MinP2 = <<A as Min<B>>::Output as Same<_0>>::Output;_0MinP213498,404728
fn test__0_Max_P2() {test__0_Max_P213504,404903
    type A = Z0;A13505,404925
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13506,404942
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P213507,404988
    type _0MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;_0MaxP213510,405071
fn test__0_Gcd_P2() {test__0_Gcd_P213516,405246
    type A = Z0;A13517,405268
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13518,405285
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P213519,405331
    type _0GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;_0GcdP213522,405414
fn test__0_Div_P2() {test__0_Div_P213528,405589
    type A = Z0;A13529,405611
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13530,405628
    type _0 = Z0;_013531,405674
    type _0DivP2 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivP213534,405728
fn test__0_Rem_P2() {test__0_Rem_P213540,405903
    type A = Z0;A13541,405925
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13542,405942
    type _0 = Z0;_013543,405988
    type _0RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemP213546,406042
fn test__0_PartialDiv_P2() {test__0_PartialDiv_P213552,406217
    type A = Z0;A13553,406246
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13554,406263
    type _0 = Z0;_013555,406309
    type _0PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivP213558,406363
fn test__0_Pow_P2() {test__0_Pow_P213564,406559
    type A = Z0;A13565,406581
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13566,406598
    type _0 = Z0;_013567,406644
    type _0PowP2 = <<A as Pow<B>>::Output as Same<_0>>::Output;_0PowP213570,406698
fn test__0_Cmp_P2() {test__0_Cmp_P213576,406873
    type A = Z0;A13577,406895
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B13578,406912
    type _0CmpP2 = <A as Cmp<B>>::Output;_0CmpP213581,406994
fn test__0_Add_P3() {test__0_Add_P313586,407136
    type A = Z0;A13587,407158
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13588,407175
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P313589,407221
    type _0AddP3 = <<A as Add<B>>::Output as Same<P3>>::Output;_0AddP313592,407304
fn test__0_Sub_P3() {test__0_Sub_P313598,407479
    type A = Z0;A13599,407501
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13600,407518
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N313601,407564
    type _0SubP3 = <<A as Sub<B>>::Output as Same<N3>>::Output;_0SubP313604,407647
fn test__0_Mul_P3() {test__0_Mul_P313610,407822
    type A = Z0;A13611,407844
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13612,407861
    type _0 = Z0;_013613,407907
    type _0MulP3 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulP313616,407961
fn test__0_Min_P3() {test__0_Min_P313622,408136
    type A = Z0;A13623,408158
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13624,408175
    type _0 = Z0;_013625,408221
    type _0MinP3 = <<A as Min<B>>::Output as Same<_0>>::Output;_0MinP313628,408275
fn test__0_Max_P3() {test__0_Max_P313634,408450
    type A = Z0;A13635,408472
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13636,408489
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P313637,408535
    type _0MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;_0MaxP313640,408618
fn test__0_Gcd_P3() {test__0_Gcd_P313646,408793
    type A = Z0;A13647,408815
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13648,408832
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P313649,408878
    type _0GcdP3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;_0GcdP313652,408961
fn test__0_Div_P3() {test__0_Div_P313658,409136
    type A = Z0;A13659,409158
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13660,409175
    type _0 = Z0;_013661,409221
    type _0DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivP313664,409275
fn test__0_Rem_P3() {test__0_Rem_P313670,409450
    type A = Z0;A13671,409472
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13672,409489
    type _0 = Z0;_013673,409535
    type _0RemP3 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemP313676,409589
fn test__0_PartialDiv_P3() {test__0_PartialDiv_P313682,409764
    type A = Z0;A13683,409793
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13684,409810
    type _0 = Z0;_013685,409856
    type _0PartialDivP3 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivP313688,409910
fn test__0_Pow_P3() {test__0_Pow_P313694,410106
    type A = Z0;A13695,410128
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13696,410145
    type _0 = Z0;_013697,410191
    type _0PowP3 = <<A as Pow<B>>::Output as Same<_0>>::Output;_0PowP313700,410245
fn test__0_Cmp_P3() {test__0_Cmp_P313706,410420
    type A = Z0;A13707,410442
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B13708,410459
    type _0CmpP3 = <A as Cmp<B>>::Output;_0CmpP313711,410541
fn test__0_Add_P4() {test__0_Add_P413716,410683
    type A = Z0;A13717,410705
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13718,410722
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P413719,410778
    type _0AddP4 = <<A as Add<B>>::Output as Same<P4>>::Output;_0AddP413722,410871
fn test__0_Sub_P4() {test__0_Sub_P413728,411046
    type A = Z0;A13729,411068
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13730,411085
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N413731,411141
    type _0SubP4 = <<A as Sub<B>>::Output as Same<N4>>::Output;_0SubP413734,411234
fn test__0_Mul_P4() {test__0_Mul_P413740,411409
    type A = Z0;A13741,411431
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13742,411448
    type _0 = Z0;_013743,411504
    type _0MulP4 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulP413746,411558
fn test__0_Min_P4() {test__0_Min_P413752,411733
    type A = Z0;A13753,411755
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13754,411772
    type _0 = Z0;_013755,411828
    type _0MinP4 = <<A as Min<B>>::Output as Same<_0>>::Output;_0MinP413758,411882
fn test__0_Max_P4() {test__0_Max_P413764,412057
    type A = Z0;A13765,412079
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13766,412096
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P413767,412152
    type _0MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;_0MaxP413770,412245
fn test__0_Gcd_P4() {test__0_Gcd_P413776,412420
    type A = Z0;A13777,412442
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13778,412459
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P413779,412515
    type _0GcdP4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;_0GcdP413782,412608
fn test__0_Div_P4() {test__0_Div_P413788,412783
    type A = Z0;A13789,412805
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13790,412822
    type _0 = Z0;_013791,412878
    type _0DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivP413794,412932
fn test__0_Rem_P4() {test__0_Rem_P413800,413107
    type A = Z0;A13801,413129
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13802,413146
    type _0 = Z0;_013803,413202
    type _0RemP4 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemP413806,413256
fn test__0_PartialDiv_P4() {test__0_PartialDiv_P413812,413431
    type A = Z0;A13813,413460
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13814,413477
    type _0 = Z0;_013815,413533
    type _0PartialDivP4 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivP413818,413587
fn test__0_Pow_P4() {test__0_Pow_P413824,413783
    type A = Z0;A13825,413805
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13826,413822
    type _0 = Z0;_013827,413878
    type _0PowP4 = <<A as Pow<B>>::Output as Same<_0>>::Output;_0PowP413830,413932
fn test__0_Cmp_P4() {test__0_Cmp_P413836,414107
    type A = Z0;A13837,414129
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B13838,414146
    type _0CmpP4 = <A as Cmp<B>>::Output;_0CmpP413841,414238
fn test__0_Add_P5() {test__0_Add_P513846,414380
    type A = Z0;A13847,414402
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13848,414419
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P513849,414475
    type _0AddP5 = <<A as Add<B>>::Output as Same<P5>>::Output;_0AddP513852,414568
fn test__0_Sub_P5() {test__0_Sub_P513858,414743
    type A = Z0;A13859,414765
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13860,414782
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N513861,414838
    type _0SubP5 = <<A as Sub<B>>::Output as Same<N5>>::Output;_0SubP513864,414931
fn test__0_Mul_P5() {test__0_Mul_P513870,415106
    type A = Z0;A13871,415128
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13872,415145
    type _0 = Z0;_013873,415201
    type _0MulP5 = <<A as Mul<B>>::Output as Same<_0>>::Output;_0MulP513876,415255
fn test__0_Min_P5() {test__0_Min_P513882,415430
    type A = Z0;A13883,415452
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13884,415469
    type _0 = Z0;_013885,415525
    type _0MinP5 = <<A as Min<B>>::Output as Same<_0>>::Output;_0MinP513888,415579
fn test__0_Max_P5() {test__0_Max_P513894,415754
    type A = Z0;A13895,415776
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13896,415793
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P513897,415849
    type _0MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;_0MaxP513900,415942
fn test__0_Gcd_P5() {test__0_Gcd_P513906,416117
    type A = Z0;A13907,416139
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13908,416156
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P513909,416212
    type _0GcdP5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;_0GcdP513912,416305
fn test__0_Div_P5() {test__0_Div_P513918,416480
    type A = Z0;A13919,416502
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13920,416519
    type _0 = Z0;_013921,416575
    type _0DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;_0DivP513924,416629
fn test__0_Rem_P5() {test__0_Rem_P513930,416804
    type A = Z0;A13931,416826
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13932,416843
    type _0 = Z0;_013933,416899
    type _0RemP5 = <<A as Rem<B>>::Output as Same<_0>>::Output;_0RemP513936,416953
fn test__0_PartialDiv_P5() {test__0_PartialDiv_P513942,417128
    type A = Z0;A13943,417157
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13944,417174
    type _0 = Z0;_013945,417230
    type _0PartialDivP5 = <<A as PartialDiv<B>>::Output as Same<_0>>::Output;_0PartialDivP513948,417284
fn test__0_Pow_P5() {test__0_Pow_P513954,417480
    type A = Z0;A13955,417502
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13956,417519
    type _0 = Z0;_013957,417575
    type _0PowP5 = <<A as Pow<B>>::Output as Same<_0>>::Output;_0PowP513960,417629
fn test__0_Cmp_P5() {test__0_Cmp_P513966,417804
    type A = Z0;A13967,417826
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13968,417843
    type _0CmpP5 = <A as Cmp<B>>::Output;_0CmpP513971,417935
fn test_P1_Add_N5() {test_P1_Add_N513976,418077
    type A = PInt<UInt<UTerm, B1>>;A13977,418099
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13978,418135
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N413979,418191
    type P1AddN5 = <<A as Add<B>>::Output as Same<N4>>::Output;P1AddN513982,418284
fn test_P1_Sub_N5() {test_P1_Sub_N513988,418459
    type A = PInt<UInt<UTerm, B1>>;A13989,418481
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B13990,418517
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P613991,418573
    type P1SubN5 = <<A as Sub<B>>::Output as Same<P6>>::Output;P1SubN513994,418666
fn test_P1_Mul_N5() {test_P1_Mul_N514000,418841
    type A = PInt<UInt<UTerm, B1>>;A14001,418863
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14002,418899
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N514003,418955
    type P1MulN5 = <<A as Mul<B>>::Output as Same<N5>>::Output;P1MulN514006,419048
fn test_P1_Min_N5() {test_P1_Min_N514012,419223
    type A = PInt<UInt<UTerm, B1>>;A14013,419245
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14014,419281
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N514015,419337
    type P1MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;P1MinN514018,419430
fn test_P1_Max_N5() {test_P1_Max_N514024,419605
    type A = PInt<UInt<UTerm, B1>>;A14025,419627
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14026,419663
    type P1 = PInt<UInt<UTerm, B1>>;P114027,419719
    type P1MaxN5 = <<A as Max<B>>::Output as Same<P1>>::Output;P1MaxN514030,419792
fn test_P1_Gcd_N5() {test_P1_Gcd_N514036,419967
    type A = PInt<UInt<UTerm, B1>>;A14037,419989
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14038,420025
    type P1 = PInt<UInt<UTerm, B1>>;P114039,420081
    type P1GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdN514042,420154
fn test_P1_Div_N5() {test_P1_Div_N514048,420329
    type A = PInt<UInt<UTerm, B1>>;A14049,420351
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14050,420387
    type _0 = Z0;_014051,420443
    type P1DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivN514054,420497
fn test_P1_Rem_N5() {test_P1_Rem_N514060,420672
    type A = PInt<UInt<UTerm, B1>>;A14061,420694
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14062,420730
    type P1 = PInt<UInt<UTerm, B1>>;P114063,420786
    type P1RemN5 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemN514066,420859
fn test_P1_Pow_N5() {test_P1_Pow_N514072,421034
    type A = PInt<UInt<UTerm, B1>>;A14073,421056
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14074,421092
    type P1 = PInt<UInt<UTerm, B1>>;P114075,421148
    type P1PowN5 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowN514078,421221
fn test_P1_Cmp_N5() {test_P1_Cmp_N514084,421396
    type A = PInt<UInt<UTerm, B1>>;A14085,421418
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B14086,421454
    type P1CmpN5 = <A as Cmp<B>>::Output;P1CmpN514089,421546
fn test_P1_Add_N4() {test_P1_Add_N414094,421691
    type A = PInt<UInt<UTerm, B1>>;A14095,421713
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14096,421749
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N314097,421805
    type P1AddN4 = <<A as Add<B>>::Output as Same<N3>>::Output;P1AddN414100,421888
fn test_P1_Sub_N4() {test_P1_Sub_N414106,422063
    type A = PInt<UInt<UTerm, B1>>;A14107,422085
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14108,422121
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P514109,422177
    type P1SubN4 = <<A as Sub<B>>::Output as Same<P5>>::Output;P1SubN414112,422270
fn test_P1_Mul_N4() {test_P1_Mul_N414118,422445
    type A = PInt<UInt<UTerm, B1>>;A14119,422467
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14120,422503
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N414121,422559
    type P1MulN4 = <<A as Mul<B>>::Output as Same<N4>>::Output;P1MulN414124,422652
fn test_P1_Min_N4() {test_P1_Min_N414130,422827
    type A = PInt<UInt<UTerm, B1>>;A14131,422849
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14132,422885
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N414133,422941
    type P1MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;P1MinN414136,423034
fn test_P1_Max_N4() {test_P1_Max_N414142,423209
    type A = PInt<UInt<UTerm, B1>>;A14143,423231
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14144,423267
    type P1 = PInt<UInt<UTerm, B1>>;P114145,423323
    type P1MaxN4 = <<A as Max<B>>::Output as Same<P1>>::Output;P1MaxN414148,423396
fn test_P1_Gcd_N4() {test_P1_Gcd_N414154,423571
    type A = PInt<UInt<UTerm, B1>>;A14155,423593
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14156,423629
    type P1 = PInt<UInt<UTerm, B1>>;P114157,423685
    type P1GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdN414160,423758
fn test_P1_Div_N4() {test_P1_Div_N414166,423933
    type A = PInt<UInt<UTerm, B1>>;A14167,423955
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14168,423991
    type _0 = Z0;_014169,424047
    type P1DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivN414172,424101
fn test_P1_Rem_N4() {test_P1_Rem_N414178,424276
    type A = PInt<UInt<UTerm, B1>>;A14179,424298
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14180,424334
    type P1 = PInt<UInt<UTerm, B1>>;P114181,424390
    type P1RemN4 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemN414184,424463
fn test_P1_Pow_N4() {test_P1_Pow_N414190,424638
    type A = PInt<UInt<UTerm, B1>>;A14191,424660
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14192,424696
    type P1 = PInt<UInt<UTerm, B1>>;P114193,424752
    type P1PowN4 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowN414196,424825
fn test_P1_Cmp_N4() {test_P1_Cmp_N414202,425000
    type A = PInt<UInt<UTerm, B1>>;A14203,425022
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B14204,425058
    type P1CmpN4 = <A as Cmp<B>>::Output;P1CmpN414207,425150
fn test_P1_Add_N3() {test_P1_Add_N314212,425295
    type A = PInt<UInt<UTerm, B1>>;A14213,425317
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14214,425353
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N214215,425399
    type P1AddN3 = <<A as Add<B>>::Output as Same<N2>>::Output;P1AddN314218,425482
fn test_P1_Sub_N3() {test_P1_Sub_N314224,425657
    type A = PInt<UInt<UTerm, B1>>;A14225,425679
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14226,425715
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P414227,425761
    type P1SubN3 = <<A as Sub<B>>::Output as Same<P4>>::Output;P1SubN314230,425854
fn test_P1_Mul_N3() {test_P1_Mul_N314236,426029
    type A = PInt<UInt<UTerm, B1>>;A14237,426051
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14238,426087
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N314239,426133
    type P1MulN3 = <<A as Mul<B>>::Output as Same<N3>>::Output;P1MulN314242,426216
fn test_P1_Min_N3() {test_P1_Min_N314248,426391
    type A = PInt<UInt<UTerm, B1>>;A14249,426413
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14250,426449
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N314251,426495
    type P1MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;P1MinN314254,426578
fn test_P1_Max_N3() {test_P1_Max_N314260,426753
    type A = PInt<UInt<UTerm, B1>>;A14261,426775
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14262,426811
    type P1 = PInt<UInt<UTerm, B1>>;P114263,426857
    type P1MaxN3 = <<A as Max<B>>::Output as Same<P1>>::Output;P1MaxN314266,426930
fn test_P1_Gcd_N3() {test_P1_Gcd_N314272,427105
    type A = PInt<UInt<UTerm, B1>>;A14273,427127
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14274,427163
    type P1 = PInt<UInt<UTerm, B1>>;P114275,427209
    type P1GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdN314278,427282
fn test_P1_Div_N3() {test_P1_Div_N314284,427457
    type A = PInt<UInt<UTerm, B1>>;A14285,427479
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14286,427515
    type _0 = Z0;_014287,427561
    type P1DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivN314290,427615
fn test_P1_Rem_N3() {test_P1_Rem_N314296,427790
    type A = PInt<UInt<UTerm, B1>>;A14297,427812
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14298,427848
    type P1 = PInt<UInt<UTerm, B1>>;P114299,427894
    type P1RemN3 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemN314302,427967
fn test_P1_Pow_N3() {test_P1_Pow_N314308,428142
    type A = PInt<UInt<UTerm, B1>>;A14309,428164
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14310,428200
    type P1 = PInt<UInt<UTerm, B1>>;P114311,428246
    type P1PowN3 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowN314314,428319
fn test_P1_Cmp_N3() {test_P1_Cmp_N314320,428494
    type A = PInt<UInt<UTerm, B1>>;A14321,428516
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B14322,428552
    type P1CmpN3 = <A as Cmp<B>>::Output;P1CmpN314325,428634
fn test_P1_Add_N2() {test_P1_Add_N214330,428779
    type A = PInt<UInt<UTerm, B1>>;A14331,428801
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14332,428837
    type N1 = NInt<UInt<UTerm, B1>>;N114333,428883
    type P1AddN2 = <<A as Add<B>>::Output as Same<N1>>::Output;P1AddN214336,428956
fn test_P1_Sub_N2() {test_P1_Sub_N214342,429131
    type A = PInt<UInt<UTerm, B1>>;A14343,429153
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14344,429189
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P314345,429235
    type P1SubN2 = <<A as Sub<B>>::Output as Same<P3>>::Output;P1SubN214348,429318
fn test_P1_Mul_N2() {test_P1_Mul_N214354,429493
    type A = PInt<UInt<UTerm, B1>>;A14355,429515
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14356,429551
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N214357,429597
    type P1MulN2 = <<A as Mul<B>>::Output as Same<N2>>::Output;P1MulN214360,429680
fn test_P1_Min_N2() {test_P1_Min_N214366,429855
    type A = PInt<UInt<UTerm, B1>>;A14367,429877
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14368,429913
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N214369,429959
    type P1MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;P1MinN214372,430042
fn test_P1_Max_N2() {test_P1_Max_N214378,430217
    type A = PInt<UInt<UTerm, B1>>;A14379,430239
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14380,430275
    type P1 = PInt<UInt<UTerm, B1>>;P114381,430321
    type P1MaxN2 = <<A as Max<B>>::Output as Same<P1>>::Output;P1MaxN214384,430394
fn test_P1_Gcd_N2() {test_P1_Gcd_N214390,430569
    type A = PInt<UInt<UTerm, B1>>;A14391,430591
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14392,430627
    type P1 = PInt<UInt<UTerm, B1>>;P114393,430673
    type P1GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdN214396,430746
fn test_P1_Div_N2() {test_P1_Div_N214402,430921
    type A = PInt<UInt<UTerm, B1>>;A14403,430943
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14404,430979
    type _0 = Z0;_014405,431025
    type P1DivN2 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivN214408,431079
fn test_P1_Rem_N2() {test_P1_Rem_N214414,431254
    type A = PInt<UInt<UTerm, B1>>;A14415,431276
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14416,431312
    type P1 = PInt<UInt<UTerm, B1>>;P114417,431358
    type P1RemN2 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemN214420,431431
fn test_P1_Pow_N2() {test_P1_Pow_N214426,431606
    type A = PInt<UInt<UTerm, B1>>;A14427,431628
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14428,431664
    type P1 = PInt<UInt<UTerm, B1>>;P114429,431710
    type P1PowN2 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowN214432,431783
fn test_P1_Cmp_N2() {test_P1_Cmp_N214438,431958
    type A = PInt<UInt<UTerm, B1>>;A14439,431980
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B14440,432016
    type P1CmpN2 = <A as Cmp<B>>::Output;P1CmpN214443,432098
fn test_P1_Add_N1() {test_P1_Add_N114448,432243
    type A = PInt<UInt<UTerm, B1>>;A14449,432265
    type B = NInt<UInt<UTerm, B1>>;B14450,432301
    type _0 = Z0;_014451,432337
    type P1AddN1 = <<A as Add<B>>::Output as Same<_0>>::Output;P1AddN114454,432391
fn test_P1_Sub_N1() {test_P1_Sub_N114460,432566
    type A = PInt<UInt<UTerm, B1>>;A14461,432588
    type B = NInt<UInt<UTerm, B1>>;B14462,432624
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P214463,432660
    type P1SubN1 = <<A as Sub<B>>::Output as Same<P2>>::Output;P1SubN114466,432743
fn test_P1_Mul_N1() {test_P1_Mul_N114472,432918
    type A = PInt<UInt<UTerm, B1>>;A14473,432940
    type B = NInt<UInt<UTerm, B1>>;B14474,432976
    type N1 = NInt<UInt<UTerm, B1>>;N114475,433012
    type P1MulN1 = <<A as Mul<B>>::Output as Same<N1>>::Output;P1MulN114478,433085
fn test_P1_Min_N1() {test_P1_Min_N114484,433260
    type A = PInt<UInt<UTerm, B1>>;A14485,433282
    type B = NInt<UInt<UTerm, B1>>;B14486,433318
    type N1 = NInt<UInt<UTerm, B1>>;N114487,433354
    type P1MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;P1MinN114490,433427
fn test_P1_Max_N1() {test_P1_Max_N114496,433602
    type A = PInt<UInt<UTerm, B1>>;A14497,433624
    type B = NInt<UInt<UTerm, B1>>;B14498,433660
    type P1 = PInt<UInt<UTerm, B1>>;P114499,433696
    type P1MaxN1 = <<A as Max<B>>::Output as Same<P1>>::Output;P1MaxN114502,433769
fn test_P1_Gcd_N1() {test_P1_Gcd_N114508,433944
    type A = PInt<UInt<UTerm, B1>>;A14509,433966
    type B = NInt<UInt<UTerm, B1>>;B14510,434002
    type P1 = PInt<UInt<UTerm, B1>>;P114511,434038
    type P1GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdN114514,434111
fn test_P1_Div_N1() {test_P1_Div_N114520,434286
    type A = PInt<UInt<UTerm, B1>>;A14521,434308
    type B = NInt<UInt<UTerm, B1>>;B14522,434344
    type N1 = NInt<UInt<UTerm, B1>>;N114523,434380
    type P1DivN1 = <<A as Div<B>>::Output as Same<N1>>::Output;P1DivN114526,434453
fn test_P1_Rem_N1() {test_P1_Rem_N114532,434628
    type A = PInt<UInt<UTerm, B1>>;A14533,434650
    type B = NInt<UInt<UTerm, B1>>;B14534,434686
    type _0 = Z0;_014535,434722
    type P1RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P1RemN114538,434776
fn test_P1_PartialDiv_N1() {test_P1_PartialDiv_N114544,434951
    type A = PInt<UInt<UTerm, B1>>;A14545,434980
    type B = NInt<UInt<UTerm, B1>>;B14546,435016
    type N1 = NInt<UInt<UTerm, B1>>;N114547,435052
    type P1PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;P1PartialDivN114550,435125
fn test_P1_Pow_N1() {test_P1_Pow_N114556,435321
    type A = PInt<UInt<UTerm, B1>>;A14557,435343
    type B = NInt<UInt<UTerm, B1>>;B14558,435379
    type P1 = PInt<UInt<UTerm, B1>>;P114559,435415
    type P1PowN1 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowN114562,435488
fn test_P1_Cmp_N1() {test_P1_Cmp_N114568,435663
    type A = PInt<UInt<UTerm, B1>>;A14569,435685
    type B = NInt<UInt<UTerm, B1>>;B14570,435721
    type P1CmpN1 = <A as Cmp<B>>::Output;P1CmpN114573,435793
fn test_P1_Add__0() {test_P1_Add__014578,435938
    type A = PInt<UInt<UTerm, B1>>;A14579,435960
    type B = Z0;B14580,435996
    type P1 = PInt<UInt<UTerm, B1>>;P114581,436013
    type P1Add_0 = <<A as Add<B>>::Output as Same<P1>>::Output;P1Add_014584,436086
fn test_P1_Sub__0() {test_P1_Sub__014590,436261
    type A = PInt<UInt<UTerm, B1>>;A14591,436283
    type B = Z0;B14592,436319
    type P1 = PInt<UInt<UTerm, B1>>;P114593,436336
    type P1Sub_0 = <<A as Sub<B>>::Output as Same<P1>>::Output;P1Sub_014596,436409
fn test_P1_Mul__0() {test_P1_Mul__014602,436584
    type A = PInt<UInt<UTerm, B1>>;A14603,436606
    type B = Z0;B14604,436642
    type _0 = Z0;_014605,436659
    type P1Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;P1Mul_014608,436713
fn test_P1_Min__0() {test_P1_Min__014614,436888
    type A = PInt<UInt<UTerm, B1>>;A14615,436910
    type B = Z0;B14616,436946
    type _0 = Z0;_014617,436963
    type P1Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;P1Min_014620,437017
fn test_P1_Max__0() {test_P1_Max__014626,437192
    type A = PInt<UInt<UTerm, B1>>;A14627,437214
    type B = Z0;B14628,437250
    type P1 = PInt<UInt<UTerm, B1>>;P114629,437267
    type P1Max_0 = <<A as Max<B>>::Output as Same<P1>>::Output;P1Max_014632,437340
fn test_P1_Gcd__0() {test_P1_Gcd__014638,437515
    type A = PInt<UInt<UTerm, B1>>;A14639,437537
    type B = Z0;B14640,437573
    type P1 = PInt<UInt<UTerm, B1>>;P114641,437590
    type P1Gcd_0 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1Gcd_014644,437663
fn test_P1_Pow__0() {test_P1_Pow__014650,437838
    type A = PInt<UInt<UTerm, B1>>;A14651,437860
    type B = Z0;B14652,437896
    type P1 = PInt<UInt<UTerm, B1>>;P114653,437913
    type P1Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1Pow_014656,437986
fn test_P1_Cmp__0() {test_P1_Cmp__014662,438161
    type A = PInt<UInt<UTerm, B1>>;A14663,438183
    type B = Z0;B14664,438219
    type P1Cmp_0 = <A as Cmp<B>>::Output;P1Cmp_014667,438272
fn test_P1_Add_P1() {test_P1_Add_P114672,438417
    type A = PInt<UInt<UTerm, B1>>;A14673,438439
    type B = PInt<UInt<UTerm, B1>>;B14674,438475
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P214675,438511
    type P1AddP1 = <<A as Add<B>>::Output as Same<P2>>::Output;P1AddP114678,438594
fn test_P1_Sub_P1() {test_P1_Sub_P114684,438769
    type A = PInt<UInt<UTerm, B1>>;A14685,438791
    type B = PInt<UInt<UTerm, B1>>;B14686,438827
    type _0 = Z0;_014687,438863
    type P1SubP1 = <<A as Sub<B>>::Output as Same<_0>>::Output;P1SubP114690,438917
fn test_P1_Mul_P1() {test_P1_Mul_P114696,439092
    type A = PInt<UInt<UTerm, B1>>;A14697,439114
    type B = PInt<UInt<UTerm, B1>>;B14698,439150
    type P1 = PInt<UInt<UTerm, B1>>;P114699,439186
    type P1MulP1 = <<A as Mul<B>>::Output as Same<P1>>::Output;P1MulP114702,439259
fn test_P1_Min_P1() {test_P1_Min_P114708,439434
    type A = PInt<UInt<UTerm, B1>>;A14709,439456
    type B = PInt<UInt<UTerm, B1>>;B14710,439492
    type P1 = PInt<UInt<UTerm, B1>>;P114711,439528
    type P1MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;P1MinP114714,439601
fn test_P1_Max_P1() {test_P1_Max_P114720,439776
    type A = PInt<UInt<UTerm, B1>>;A14721,439798
    type B = PInt<UInt<UTerm, B1>>;B14722,439834
    type P1 = PInt<UInt<UTerm, B1>>;P114723,439870
    type P1MaxP1 = <<A as Max<B>>::Output as Same<P1>>::Output;P1MaxP114726,439943
fn test_P1_Gcd_P1() {test_P1_Gcd_P114732,440118
    type A = PInt<UInt<UTerm, B1>>;A14733,440140
    type B = PInt<UInt<UTerm, B1>>;B14734,440176
    type P1 = PInt<UInt<UTerm, B1>>;P114735,440212
    type P1GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdP114738,440285
fn test_P1_Div_P1() {test_P1_Div_P114744,440460
    type A = PInt<UInt<UTerm, B1>>;A14745,440482
    type B = PInt<UInt<UTerm, B1>>;B14746,440518
    type P1 = PInt<UInt<UTerm, B1>>;P114747,440554
    type P1DivP1 = <<A as Div<B>>::Output as Same<P1>>::Output;P1DivP114750,440627
fn test_P1_Rem_P1() {test_P1_Rem_P114756,440802
    type A = PInt<UInt<UTerm, B1>>;A14757,440824
    type B = PInt<UInt<UTerm, B1>>;B14758,440860
    type _0 = Z0;_014759,440896
    type P1RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P1RemP114762,440950
fn test_P1_PartialDiv_P1() {test_P1_PartialDiv_P114768,441125
    type A = PInt<UInt<UTerm, B1>>;A14769,441154
    type B = PInt<UInt<UTerm, B1>>;B14770,441190
    type P1 = PInt<UInt<UTerm, B1>>;P114771,441226
    type P1PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;P1PartialDivP114774,441299
fn test_P1_Pow_P1() {test_P1_Pow_P114780,441495
    type A = PInt<UInt<UTerm, B1>>;A14781,441517
    type B = PInt<UInt<UTerm, B1>>;B14782,441553
    type P1 = PInt<UInt<UTerm, B1>>;P114783,441589
    type P1PowP1 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowP114786,441662
fn test_P1_Cmp_P1() {test_P1_Cmp_P114792,441837
    type A = PInt<UInt<UTerm, B1>>;A14793,441859
    type B = PInt<UInt<UTerm, B1>>;B14794,441895
    type P1CmpP1 = <A as Cmp<B>>::Output;P1CmpP114797,441967
fn test_P1_Add_P2() {test_P1_Add_P214802,442110
    type A = PInt<UInt<UTerm, B1>>;A14803,442132
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14804,442168
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P314805,442214
    type P1AddP2 = <<A as Add<B>>::Output as Same<P3>>::Output;P1AddP214808,442297
fn test_P1_Sub_P2() {test_P1_Sub_P214814,442472
    type A = PInt<UInt<UTerm, B1>>;A14815,442494
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14816,442530
    type N1 = NInt<UInt<UTerm, B1>>;N114817,442576
    type P1SubP2 = <<A as Sub<B>>::Output as Same<N1>>::Output;P1SubP214820,442649
fn test_P1_Mul_P2() {test_P1_Mul_P214826,442824
    type A = PInt<UInt<UTerm, B1>>;A14827,442846
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14828,442882
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P214829,442928
    type P1MulP2 = <<A as Mul<B>>::Output as Same<P2>>::Output;P1MulP214832,443011
fn test_P1_Min_P2() {test_P1_Min_P214838,443186
    type A = PInt<UInt<UTerm, B1>>;A14839,443208
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14840,443244
    type P1 = PInt<UInt<UTerm, B1>>;P114841,443290
    type P1MinP2 = <<A as Min<B>>::Output as Same<P1>>::Output;P1MinP214844,443363
fn test_P1_Max_P2() {test_P1_Max_P214850,443538
    type A = PInt<UInt<UTerm, B1>>;A14851,443560
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14852,443596
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P214853,443642
    type P1MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;P1MaxP214856,443725
fn test_P1_Gcd_P2() {test_P1_Gcd_P214862,443900
    type A = PInt<UInt<UTerm, B1>>;A14863,443922
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14864,443958
    type P1 = PInt<UInt<UTerm, B1>>;P114865,444004
    type P1GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdP214868,444077
fn test_P1_Div_P2() {test_P1_Div_P214874,444252
    type A = PInt<UInt<UTerm, B1>>;A14875,444274
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14876,444310
    type _0 = Z0;_014877,444356
    type P1DivP2 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivP214880,444410
fn test_P1_Rem_P2() {test_P1_Rem_P214886,444585
    type A = PInt<UInt<UTerm, B1>>;A14887,444607
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14888,444643
    type P1 = PInt<UInt<UTerm, B1>>;P114889,444689
    type P1RemP2 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemP214892,444762
fn test_P1_Pow_P2() {test_P1_Pow_P214898,444937
    type A = PInt<UInt<UTerm, B1>>;A14899,444959
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14900,444995
    type P1 = PInt<UInt<UTerm, B1>>;P114901,445041
    type P1PowP2 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowP214904,445114
fn test_P1_Cmp_P2() {test_P1_Cmp_P214910,445289
    type A = PInt<UInt<UTerm, B1>>;A14911,445311
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B14912,445347
    type P1CmpP2 = <A as Cmp<B>>::Output;P1CmpP214915,445429
fn test_P1_Add_P3() {test_P1_Add_P314920,445571
    type A = PInt<UInt<UTerm, B1>>;A14921,445593
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14922,445629
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P414923,445675
    type P1AddP3 = <<A as Add<B>>::Output as Same<P4>>::Output;P1AddP314926,445768
fn test_P1_Sub_P3() {test_P1_Sub_P314932,445943
    type A = PInt<UInt<UTerm, B1>>;A14933,445965
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14934,446001
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N214935,446047
    type P1SubP3 = <<A as Sub<B>>::Output as Same<N2>>::Output;P1SubP314938,446130
fn test_P1_Mul_P3() {test_P1_Mul_P314944,446305
    type A = PInt<UInt<UTerm, B1>>;A14945,446327
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14946,446363
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P314947,446409
    type P1MulP3 = <<A as Mul<B>>::Output as Same<P3>>::Output;P1MulP314950,446492
fn test_P1_Min_P3() {test_P1_Min_P314956,446667
    type A = PInt<UInt<UTerm, B1>>;A14957,446689
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14958,446725
    type P1 = PInt<UInt<UTerm, B1>>;P114959,446771
    type P1MinP3 = <<A as Min<B>>::Output as Same<P1>>::Output;P1MinP314962,446844
fn test_P1_Max_P3() {test_P1_Max_P314968,447019
    type A = PInt<UInt<UTerm, B1>>;A14969,447041
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14970,447077
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P314971,447123
    type P1MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;P1MaxP314974,447206
fn test_P1_Gcd_P3() {test_P1_Gcd_P314980,447381
    type A = PInt<UInt<UTerm, B1>>;A14981,447403
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14982,447439
    type P1 = PInt<UInt<UTerm, B1>>;P114983,447485
    type P1GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdP314986,447558
fn test_P1_Div_P3() {test_P1_Div_P314992,447733
    type A = PInt<UInt<UTerm, B1>>;A14993,447755
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B14994,447791
    type _0 = Z0;_014995,447837
    type P1DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivP314998,447891
fn test_P1_Rem_P3() {test_P1_Rem_P315004,448066
    type A = PInt<UInt<UTerm, B1>>;A15005,448088
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B15006,448124
    type P1 = PInt<UInt<UTerm, B1>>;P115007,448170
    type P1RemP3 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemP315010,448243
fn test_P1_Pow_P3() {test_P1_Pow_P315016,448418
    type A = PInt<UInt<UTerm, B1>>;A15017,448440
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B15018,448476
    type P1 = PInt<UInt<UTerm, B1>>;P115019,448522
    type P1PowP3 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowP315022,448595
fn test_P1_Cmp_P3() {test_P1_Cmp_P315028,448770
    type A = PInt<UInt<UTerm, B1>>;A15029,448792
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B15030,448828
    type P1CmpP3 = <A as Cmp<B>>::Output;P1CmpP315033,448910
fn test_P1_Add_P4() {test_P1_Add_P415038,449052
    type A = PInt<UInt<UTerm, B1>>;A15039,449074
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15040,449110
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P515041,449166
    type P1AddP4 = <<A as Add<B>>::Output as Same<P5>>::Output;P1AddP415044,449259
fn test_P1_Sub_P4() {test_P1_Sub_P415050,449434
    type A = PInt<UInt<UTerm, B1>>;A15051,449456
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15052,449492
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N315053,449548
    type P1SubP4 = <<A as Sub<B>>::Output as Same<N3>>::Output;P1SubP415056,449631
fn test_P1_Mul_P4() {test_P1_Mul_P415062,449806
    type A = PInt<UInt<UTerm, B1>>;A15063,449828
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15064,449864
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P415065,449920
    type P1MulP4 = <<A as Mul<B>>::Output as Same<P4>>::Output;P1MulP415068,450013
fn test_P1_Min_P4() {test_P1_Min_P415074,450188
    type A = PInt<UInt<UTerm, B1>>;A15075,450210
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15076,450246
    type P1 = PInt<UInt<UTerm, B1>>;P115077,450302
    type P1MinP4 = <<A as Min<B>>::Output as Same<P1>>::Output;P1MinP415080,450375
fn test_P1_Max_P4() {test_P1_Max_P415086,450550
    type A = PInt<UInt<UTerm, B1>>;A15087,450572
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15088,450608
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P415089,450664
    type P1MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;P1MaxP415092,450757
fn test_P1_Gcd_P4() {test_P1_Gcd_P415098,450932
    type A = PInt<UInt<UTerm, B1>>;A15099,450954
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15100,450990
    type P1 = PInt<UInt<UTerm, B1>>;P115101,451046
    type P1GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdP415104,451119
fn test_P1_Div_P4() {test_P1_Div_P415110,451294
    type A = PInt<UInt<UTerm, B1>>;A15111,451316
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15112,451352
    type _0 = Z0;_015113,451408
    type P1DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivP415116,451462
fn test_P1_Rem_P4() {test_P1_Rem_P415122,451637
    type A = PInt<UInt<UTerm, B1>>;A15123,451659
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15124,451695
    type P1 = PInt<UInt<UTerm, B1>>;P115125,451751
    type P1RemP4 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemP415128,451824
fn test_P1_Pow_P4() {test_P1_Pow_P415134,451999
    type A = PInt<UInt<UTerm, B1>>;A15135,452021
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15136,452057
    type P1 = PInt<UInt<UTerm, B1>>;P115137,452113
    type P1PowP4 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowP415140,452186
fn test_P1_Cmp_P4() {test_P1_Cmp_P415146,452361
    type A = PInt<UInt<UTerm, B1>>;A15147,452383
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15148,452419
    type P1CmpP4 = <A as Cmp<B>>::Output;P1CmpP415151,452511
fn test_P1_Add_P5() {test_P1_Add_P515156,452653
    type A = PInt<UInt<UTerm, B1>>;A15157,452675
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15158,452711
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P615159,452767
    type P1AddP5 = <<A as Add<B>>::Output as Same<P6>>::Output;P1AddP515162,452860
fn test_P1_Sub_P5() {test_P1_Sub_P515168,453035
    type A = PInt<UInt<UTerm, B1>>;A15169,453057
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15170,453093
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N415171,453149
    type P1SubP5 = <<A as Sub<B>>::Output as Same<N4>>::Output;P1SubP515174,453242
fn test_P1_Mul_P5() {test_P1_Mul_P515180,453417
    type A = PInt<UInt<UTerm, B1>>;A15181,453439
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15182,453475
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P515183,453531
    type P1MulP5 = <<A as Mul<B>>::Output as Same<P5>>::Output;P1MulP515186,453624
fn test_P1_Min_P5() {test_P1_Min_P515192,453799
    type A = PInt<UInt<UTerm, B1>>;A15193,453821
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15194,453857
    type P1 = PInt<UInt<UTerm, B1>>;P115195,453913
    type P1MinP5 = <<A as Min<B>>::Output as Same<P1>>::Output;P1MinP515198,453986
fn test_P1_Max_P5() {test_P1_Max_P515204,454161
    type A = PInt<UInt<UTerm, B1>>;A15205,454183
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15206,454219
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P515207,454275
    type P1MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;P1MaxP515210,454368
fn test_P1_Gcd_P5() {test_P1_Gcd_P515216,454543
    type A = PInt<UInt<UTerm, B1>>;A15217,454565
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15218,454601
    type P1 = PInt<UInt<UTerm, B1>>;P115219,454657
    type P1GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P1GcdP515222,454730
fn test_P1_Div_P5() {test_P1_Div_P515228,454905
    type A = PInt<UInt<UTerm, B1>>;A15229,454927
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15230,454963
    type _0 = Z0;_015231,455019
    type P1DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;P1DivP515234,455073
fn test_P1_Rem_P5() {test_P1_Rem_P515240,455248
    type A = PInt<UInt<UTerm, B1>>;A15241,455270
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15242,455306
    type P1 = PInt<UInt<UTerm, B1>>;P115243,455362
    type P1RemP5 = <<A as Rem<B>>::Output as Same<P1>>::Output;P1RemP515246,455435
fn test_P1_Pow_P5() {test_P1_Pow_P515252,455610
    type A = PInt<UInt<UTerm, B1>>;A15253,455632
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15254,455668
    type P1 = PInt<UInt<UTerm, B1>>;P115255,455724
    type P1PowP5 = <<A as Pow<B>>::Output as Same<P1>>::Output;P1PowP515258,455797
fn test_P1_Cmp_P5() {test_P1_Cmp_P515264,455972
    type A = PInt<UInt<UTerm, B1>>;A15265,455994
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15266,456030
    type P1CmpP5 = <A as Cmp<B>>::Output;P1CmpP515269,456122
fn test_P2_Add_N5() {test_P2_Add_N515274,456264
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15275,456286
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15276,456332
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N315277,456388
    type P2AddN5 = <<A as Add<B>>::Output as Same<N3>>::Output;P2AddN515280,456471
fn test_P2_Sub_N5() {test_P2_Sub_N515286,456646
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15287,456668
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15288,456714
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P715289,456770
    type P2SubN5 = <<A as Sub<B>>::Output as Same<P7>>::Output;P2SubN515292,456863
fn test_P2_Mul_N5() {test_P2_Mul_N515298,457038
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15299,457060
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15300,457106
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;N1015301,457162
    type P2MulN5 = <<A as Mul<B>>::Output as Same<N10>>::Output;P2MulN515304,457266
fn test_P2_Min_N5() {test_P2_Min_N515310,457443
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15311,457465
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15312,457511
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N515313,457567
    type P2MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;P2MinN515316,457660
fn test_P2_Max_N5() {test_P2_Max_N515322,457835
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15323,457857
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15324,457903
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215325,457959
    type P2MaxN5 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxN515328,458042
fn test_P2_Gcd_N5() {test_P2_Gcd_N515334,458217
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15335,458239
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15336,458285
    type P1 = PInt<UInt<UTerm, B1>>;P115337,458341
    type P2GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P2GcdN515340,458414
fn test_P2_Div_N5() {test_P2_Div_N515346,458589
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15347,458611
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15348,458657
    type _0 = Z0;_015349,458713
    type P2DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;P2DivN515352,458767
fn test_P2_Rem_N5() {test_P2_Rem_N515358,458942
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15359,458964
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15360,459010
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215361,459066
    type P2RemN5 = <<A as Rem<B>>::Output as Same<P2>>::Output;P2RemN515364,459149
fn test_P2_Cmp_N5() {test_P2_Cmp_N515370,459324
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15371,459346
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B15372,459392
    type P2CmpN5 = <A as Cmp<B>>::Output;P2CmpN515375,459484
fn test_P2_Add_N4() {test_P2_Add_N415380,459629
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15381,459651
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15382,459697
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N215383,459753
    type P2AddN4 = <<A as Add<B>>::Output as Same<N2>>::Output;P2AddN415386,459836
fn test_P2_Sub_N4() {test_P2_Sub_N415392,460011
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15393,460033
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15394,460079
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P615395,460135
    type P2SubN4 = <<A as Sub<B>>::Output as Same<P6>>::Output;P2SubN415398,460228
fn test_P2_Mul_N4() {test_P2_Mul_N415404,460403
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15405,460425
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15406,460471
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N815407,460527
    type P2MulN4 = <<A as Mul<B>>::Output as Same<N8>>::Output;P2MulN415410,460630
fn test_P2_Min_N4() {test_P2_Min_N415416,460805
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15417,460827
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15418,460873
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N415419,460929
    type P2MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;P2MinN415422,461022
fn test_P2_Max_N4() {test_P2_Max_N415428,461197
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15429,461219
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15430,461265
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215431,461321
    type P2MaxN4 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxN415434,461404
fn test_P2_Gcd_N4() {test_P2_Gcd_N415440,461579
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15441,461601
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15442,461647
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215443,461703
    type P2GcdN4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P2GcdN415446,461786
fn test_P2_Div_N4() {test_P2_Div_N415452,461961
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15453,461983
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15454,462029
    type _0 = Z0;_015455,462085
    type P2DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;P2DivN415458,462139
fn test_P2_Rem_N4() {test_P2_Rem_N415464,462314
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15465,462336
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15466,462382
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215467,462438
    type P2RemN4 = <<A as Rem<B>>::Output as Same<P2>>::Output;P2RemN415470,462521
fn test_P2_Cmp_N4() {test_P2_Cmp_N415476,462696
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15477,462718
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B15478,462764
    type P2CmpN4 = <A as Cmp<B>>::Output;P2CmpN415481,462856
fn test_P2_Add_N3() {test_P2_Add_N315486,463001
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15487,463023
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15488,463069
    type N1 = NInt<UInt<UTerm, B1>>;N115489,463115
    type P2AddN3 = <<A as Add<B>>::Output as Same<N1>>::Output;P2AddN315492,463188
fn test_P2_Sub_N3() {test_P2_Sub_N315498,463363
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15499,463385
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15500,463431
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P515501,463477
    type P2SubN3 = <<A as Sub<B>>::Output as Same<P5>>::Output;P2SubN315504,463570
fn test_P2_Mul_N3() {test_P2_Mul_N315510,463745
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15511,463767
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15512,463813
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N615513,463859
    type P2MulN3 = <<A as Mul<B>>::Output as Same<N6>>::Output;P2MulN315516,463952
fn test_P2_Min_N3() {test_P2_Min_N315522,464127
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15523,464149
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15524,464195
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N315525,464241
    type P2MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;P2MinN315528,464324
fn test_P2_Max_N3() {test_P2_Max_N315534,464499
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15535,464521
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15536,464567
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215537,464613
    type P2MaxN3 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxN315540,464696
fn test_P2_Gcd_N3() {test_P2_Gcd_N315546,464871
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15547,464893
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15548,464939
    type P1 = PInt<UInt<UTerm, B1>>;P115549,464985
    type P2GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P2GcdN315552,465058
fn test_P2_Div_N3() {test_P2_Div_N315558,465233
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15559,465255
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15560,465301
    type _0 = Z0;_015561,465347
    type P2DivN3 = <<A as Div<B>>::Output as Same<_0>>::Output;P2DivN315564,465401
fn test_P2_Rem_N3() {test_P2_Rem_N315570,465576
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15571,465598
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15572,465644
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215573,465690
    type P2RemN3 = <<A as Rem<B>>::Output as Same<P2>>::Output;P2RemN315576,465773
fn test_P2_Cmp_N3() {test_P2_Cmp_N315582,465948
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15583,465970
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B15584,466016
    type P2CmpN3 = <A as Cmp<B>>::Output;P2CmpN315587,466098
fn test_P2_Add_N2() {test_P2_Add_N215592,466243
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15593,466265
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15594,466311
    type _0 = Z0;_015595,466357
    type P2AddN2 = <<A as Add<B>>::Output as Same<_0>>::Output;P2AddN215598,466411
fn test_P2_Sub_N2() {test_P2_Sub_N215604,466586
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15605,466608
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15606,466654
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P415607,466700
    type P2SubN2 = <<A as Sub<B>>::Output as Same<P4>>::Output;P2SubN215610,466793
fn test_P2_Mul_N2() {test_P2_Mul_N215616,466968
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15617,466990
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15618,467036
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N415619,467082
    type P2MulN2 = <<A as Mul<B>>::Output as Same<N4>>::Output;P2MulN215622,467175
fn test_P2_Min_N2() {test_P2_Min_N215628,467350
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15629,467372
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15630,467418
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N215631,467464
    type P2MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;P2MinN215634,467547
fn test_P2_Max_N2() {test_P2_Max_N215640,467722
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15641,467744
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15642,467790
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215643,467836
    type P2MaxN2 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxN215646,467919
fn test_P2_Gcd_N2() {test_P2_Gcd_N215652,468094
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15653,468116
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15654,468162
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215655,468208
    type P2GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P2GcdN215658,468291
fn test_P2_Div_N2() {test_P2_Div_N215664,468466
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15665,468488
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15666,468534
    type N1 = NInt<UInt<UTerm, B1>>;N115667,468580
    type P2DivN2 = <<A as Div<B>>::Output as Same<N1>>::Output;P2DivN215670,468653
fn test_P2_Rem_N2() {test_P2_Rem_N215676,468828
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15677,468850
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15678,468896
    type _0 = Z0;_015679,468942
    type P2RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;P2RemN215682,468996
fn test_P2_PartialDiv_N2() {test_P2_PartialDiv_N215688,469171
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15689,469200
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15690,469246
    type N1 = NInt<UInt<UTerm, B1>>;N115691,469292
    type P2PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;P2PartialDivN215694,469365
fn test_P2_Cmp_N2() {test_P2_Cmp_N215700,469561
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15701,469583
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B15702,469629
    type P2CmpN2 = <A as Cmp<B>>::Output;P2CmpN215705,469711
fn test_P2_Add_N1() {test_P2_Add_N115710,469856
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15711,469878
    type B = NInt<UInt<UTerm, B1>>;B15712,469924
    type P1 = PInt<UInt<UTerm, B1>>;P115713,469960
    type P2AddN1 = <<A as Add<B>>::Output as Same<P1>>::Output;P2AddN115716,470033
fn test_P2_Sub_N1() {test_P2_Sub_N115722,470208
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15723,470230
    type B = NInt<UInt<UTerm, B1>>;B15724,470276
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P315725,470312
    type P2SubN1 = <<A as Sub<B>>::Output as Same<P3>>::Output;P2SubN115728,470395
fn test_P2_Mul_N1() {test_P2_Mul_N115734,470570
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15735,470592
    type B = NInt<UInt<UTerm, B1>>;B15736,470638
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N215737,470674
    type P2MulN1 = <<A as Mul<B>>::Output as Same<N2>>::Output;P2MulN115740,470757
fn test_P2_Min_N1() {test_P2_Min_N115746,470932
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15747,470954
    type B = NInt<UInt<UTerm, B1>>;B15748,471000
    type N1 = NInt<UInt<UTerm, B1>>;N115749,471036
    type P2MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;P2MinN115752,471109
fn test_P2_Max_N1() {test_P2_Max_N115758,471284
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15759,471306
    type B = NInt<UInt<UTerm, B1>>;B15760,471352
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215761,471388
    type P2MaxN1 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxN115764,471471
fn test_P2_Gcd_N1() {test_P2_Gcd_N115770,471646
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15771,471668
    type B = NInt<UInt<UTerm, B1>>;B15772,471714
    type P1 = PInt<UInt<UTerm, B1>>;P115773,471750
    type P2GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P2GcdN115776,471823
fn test_P2_Div_N1() {test_P2_Div_N115782,471998
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15783,472020
    type B = NInt<UInt<UTerm, B1>>;B15784,472066
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N215785,472102
    type P2DivN1 = <<A as Div<B>>::Output as Same<N2>>::Output;P2DivN115788,472185
fn test_P2_Rem_N1() {test_P2_Rem_N115794,472360
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15795,472382
    type B = NInt<UInt<UTerm, B1>>;B15796,472428
    type _0 = Z0;_015797,472464
    type P2RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P2RemN115800,472518
fn test_P2_PartialDiv_N1() {test_P2_PartialDiv_N115806,472693
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15807,472722
    type B = NInt<UInt<UTerm, B1>>;B15808,472768
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N215809,472804
    type P2PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;P2PartialDivN115812,472887
fn test_P2_Cmp_N1() {test_P2_Cmp_N115818,473083
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15819,473105
    type B = NInt<UInt<UTerm, B1>>;B15820,473151
    type P2CmpN1 = <A as Cmp<B>>::Output;P2CmpN115823,473223
fn test_P2_Add__0() {test_P2_Add__015828,473368
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15829,473390
    type B = Z0;B15830,473436
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215831,473453
    type P2Add_0 = <<A as Add<B>>::Output as Same<P2>>::Output;P2Add_015834,473536
fn test_P2_Sub__0() {test_P2_Sub__015840,473711
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15841,473733
    type B = Z0;B15842,473779
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215843,473796
    type P2Sub_0 = <<A as Sub<B>>::Output as Same<P2>>::Output;P2Sub_015846,473879
fn test_P2_Mul__0() {test_P2_Mul__015852,474054
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15853,474076
    type B = Z0;B15854,474122
    type _0 = Z0;_015855,474139
    type P2Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;P2Mul_015858,474193
fn test_P2_Min__0() {test_P2_Min__015864,474368
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15865,474390
    type B = Z0;B15866,474436
    type _0 = Z0;_015867,474453
    type P2Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;P2Min_015870,474507
fn test_P2_Max__0() {test_P2_Max__015876,474682
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15877,474704
    type B = Z0;B15878,474750
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215879,474767
    type P2Max_0 = <<A as Max<B>>::Output as Same<P2>>::Output;P2Max_015882,474850
fn test_P2_Gcd__0() {test_P2_Gcd__015888,475025
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15889,475047
    type B = Z0;B15890,475093
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215891,475110
    type P2Gcd_0 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P2Gcd_015894,475193
fn test_P2_Pow__0() {test_P2_Pow__015900,475368
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15901,475390
    type B = Z0;B15902,475436
    type P1 = PInt<UInt<UTerm, B1>>;P115903,475453
    type P2Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;P2Pow_015906,475526
fn test_P2_Cmp__0() {test_P2_Cmp__015912,475701
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15913,475723
    type B = Z0;B15914,475769
    type P2Cmp_0 = <A as Cmp<B>>::Output;P2Cmp_015917,475822
fn test_P2_Add_P1() {test_P2_Add_P115922,475967
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15923,475989
    type B = PInt<UInt<UTerm, B1>>;B15924,476035
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P315925,476071
    type P2AddP1 = <<A as Add<B>>::Output as Same<P3>>::Output;P2AddP115928,476154
fn test_P2_Sub_P1() {test_P2_Sub_P115934,476329
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15935,476351
    type B = PInt<UInt<UTerm, B1>>;B15936,476397
    type P1 = PInt<UInt<UTerm, B1>>;P115937,476433
    type P2SubP1 = <<A as Sub<B>>::Output as Same<P1>>::Output;P2SubP115940,476506
fn test_P2_Mul_P1() {test_P2_Mul_P115946,476681
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15947,476703
    type B = PInt<UInt<UTerm, B1>>;B15948,476749
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215949,476785
    type P2MulP1 = <<A as Mul<B>>::Output as Same<P2>>::Output;P2MulP115952,476868
fn test_P2_Min_P1() {test_P2_Min_P115958,477043
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15959,477065
    type B = PInt<UInt<UTerm, B1>>;B15960,477111
    type P1 = PInt<UInt<UTerm, B1>>;P115961,477147
    type P2MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;P2MinP115964,477220
fn test_P2_Max_P1() {test_P2_Max_P115970,477395
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15971,477417
    type B = PInt<UInt<UTerm, B1>>;B15972,477463
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215973,477499
    type P2MaxP1 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxP115976,477582
fn test_P2_Gcd_P1() {test_P2_Gcd_P115982,477757
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15983,477779
    type B = PInt<UInt<UTerm, B1>>;B15984,477825
    type P1 = PInt<UInt<UTerm, B1>>;P115985,477861
    type P2GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P2GcdP115988,477934
fn test_P2_Div_P1() {test_P2_Div_P115994,478109
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A15995,478131
    type B = PInt<UInt<UTerm, B1>>;B15996,478177
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P215997,478213
    type P2DivP1 = <<A as Div<B>>::Output as Same<P2>>::Output;P2DivP116000,478296
fn test_P2_Rem_P1() {test_P2_Rem_P116006,478471
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16007,478493
    type B = PInt<UInt<UTerm, B1>>;B16008,478539
    type _0 = Z0;_016009,478575
    type P2RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P2RemP116012,478629
fn test_P2_PartialDiv_P1() {test_P2_PartialDiv_P116018,478804
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16019,478833
    type B = PInt<UInt<UTerm, B1>>;B16020,478879
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216021,478915
    type P2PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;P2PartialDivP116024,478998
fn test_P2_Pow_P1() {test_P2_Pow_P116030,479194
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16031,479216
    type B = PInt<UInt<UTerm, B1>>;B16032,479262
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216033,479298
    type P2PowP1 = <<A as Pow<B>>::Output as Same<P2>>::Output;P2PowP116036,479381
fn test_P2_Cmp_P1() {test_P2_Cmp_P116042,479556
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16043,479578
    type B = PInt<UInt<UTerm, B1>>;B16044,479624
    type P2CmpP1 = <A as Cmp<B>>::Output;P2CmpP116047,479696
fn test_P2_Add_P2() {test_P2_Add_P216052,479841
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16053,479863
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16054,479909
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P416055,479955
    type P2AddP2 = <<A as Add<B>>::Output as Same<P4>>::Output;P2AddP216058,480048
fn test_P2_Sub_P2() {test_P2_Sub_P216064,480223
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16065,480245
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16066,480291
    type _0 = Z0;_016067,480337
    type P2SubP2 = <<A as Sub<B>>::Output as Same<_0>>::Output;P2SubP216070,480391
fn test_P2_Mul_P2() {test_P2_Mul_P216076,480566
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16077,480588
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16078,480634
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P416079,480680
    type P2MulP2 = <<A as Mul<B>>::Output as Same<P4>>::Output;P2MulP216082,480773
fn test_P2_Min_P2() {test_P2_Min_P216088,480948
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16089,480970
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16090,481016
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216091,481062
    type P2MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;P2MinP216094,481145
fn test_P2_Max_P2() {test_P2_Max_P216100,481320
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16101,481342
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16102,481388
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216103,481434
    type P2MaxP2 = <<A as Max<B>>::Output as Same<P2>>::Output;P2MaxP216106,481517
fn test_P2_Gcd_P2() {test_P2_Gcd_P216112,481692
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16113,481714
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16114,481760
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216115,481806
    type P2GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P2GcdP216118,481889
fn test_P2_Div_P2() {test_P2_Div_P216124,482064
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16125,482086
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16126,482132
    type P1 = PInt<UInt<UTerm, B1>>;P116127,482178
    type P2DivP2 = <<A as Div<B>>::Output as Same<P1>>::Output;P2DivP216130,482251
fn test_P2_Rem_P2() {test_P2_Rem_P216136,482426
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16137,482448
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16138,482494
    type _0 = Z0;_016139,482540
    type P2RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;P2RemP216142,482594
fn test_P2_PartialDiv_P2() {test_P2_PartialDiv_P216148,482769
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16149,482798
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16150,482844
    type P1 = PInt<UInt<UTerm, B1>>;P116151,482890
    type P2PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;P2PartialDivP216154,482963
fn test_P2_Pow_P2() {test_P2_Pow_P216160,483159
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16161,483181
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16162,483227
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P416163,483273
    type P2PowP2 = <<A as Pow<B>>::Output as Same<P4>>::Output;P2PowP216166,483366
fn test_P2_Cmp_P2() {test_P2_Cmp_P216172,483541
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16173,483563
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B16174,483609
    type P2CmpP2 = <A as Cmp<B>>::Output;P2CmpP216177,483691
fn test_P2_Add_P3() {test_P2_Add_P316182,483834
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16183,483856
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16184,483902
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P516185,483948
    type P2AddP3 = <<A as Add<B>>::Output as Same<P5>>::Output;P2AddP316188,484041
fn test_P2_Sub_P3() {test_P2_Sub_P316194,484216
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16195,484238
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16196,484284
    type N1 = NInt<UInt<UTerm, B1>>;N116197,484330
    type P2SubP3 = <<A as Sub<B>>::Output as Same<N1>>::Output;P2SubP316200,484403
fn test_P2_Mul_P3() {test_P2_Mul_P316206,484578
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16207,484600
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16208,484646
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P616209,484692
    type P2MulP3 = <<A as Mul<B>>::Output as Same<P6>>::Output;P2MulP316212,484785
fn test_P2_Min_P3() {test_P2_Min_P316218,484960
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16219,484982
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16220,485028
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216221,485074
    type P2MinP3 = <<A as Min<B>>::Output as Same<P2>>::Output;P2MinP316224,485157
fn test_P2_Max_P3() {test_P2_Max_P316230,485332
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16231,485354
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16232,485400
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316233,485446
    type P2MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;P2MaxP316236,485529
fn test_P2_Gcd_P3() {test_P2_Gcd_P316242,485704
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16243,485726
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16244,485772
    type P1 = PInt<UInt<UTerm, B1>>;P116245,485818
    type P2GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P2GcdP316248,485891
fn test_P2_Div_P3() {test_P2_Div_P316254,486066
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16255,486088
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16256,486134
    type _0 = Z0;_016257,486180
    type P2DivP3 = <<A as Div<B>>::Output as Same<_0>>::Output;P2DivP316260,486234
fn test_P2_Rem_P3() {test_P2_Rem_P316266,486409
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16267,486431
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16268,486477
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216269,486523
    type P2RemP3 = <<A as Rem<B>>::Output as Same<P2>>::Output;P2RemP316272,486606
fn test_P2_Pow_P3() {test_P2_Pow_P316278,486781
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16279,486803
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16280,486849
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P816281,486895
    type P2PowP3 = <<A as Pow<B>>::Output as Same<P8>>::Output;P2PowP316284,486998
fn test_P2_Cmp_P3() {test_P2_Cmp_P316290,487173
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16291,487195
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B16292,487241
    type P2CmpP3 = <A as Cmp<B>>::Output;P2CmpP316295,487323
fn test_P2_Add_P4() {test_P2_Add_P416300,487465
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16301,487487
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16302,487533
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P616303,487589
    type P2AddP4 = <<A as Add<B>>::Output as Same<P6>>::Output;P2AddP416306,487682
fn test_P2_Sub_P4() {test_P2_Sub_P416312,487857
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16313,487879
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16314,487925
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N216315,487981
    type P2SubP4 = <<A as Sub<B>>::Output as Same<N2>>::Output;P2SubP416318,488064
fn test_P2_Mul_P4() {test_P2_Mul_P416324,488239
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16325,488261
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16326,488307
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P816327,488363
    type P2MulP4 = <<A as Mul<B>>::Output as Same<P8>>::Output;P2MulP416330,488466
fn test_P2_Min_P4() {test_P2_Min_P416336,488641
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16337,488663
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16338,488709
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216339,488765
    type P2MinP4 = <<A as Min<B>>::Output as Same<P2>>::Output;P2MinP416342,488848
fn test_P2_Max_P4() {test_P2_Max_P416348,489023
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16349,489045
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16350,489091
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P416351,489147
    type P2MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;P2MaxP416354,489240
fn test_P2_Gcd_P4() {test_P2_Gcd_P416360,489415
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16361,489437
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16362,489483
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216363,489539
    type P2GcdP4 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P2GcdP416366,489622
fn test_P2_Div_P4() {test_P2_Div_P416372,489797
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16373,489819
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16374,489865
    type _0 = Z0;_016375,489921
    type P2DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;P2DivP416378,489975
fn test_P2_Rem_P4() {test_P2_Rem_P416384,490150
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16385,490172
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16386,490218
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216387,490274
    type P2RemP4 = <<A as Rem<B>>::Output as Same<P2>>::Output;P2RemP416390,490357
fn test_P2_Pow_P4() {test_P2_Pow_P416396,490532
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16397,490554
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16398,490600
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;P1616399,490656
    type P2PowP4 = <<A as Pow<B>>::Output as Same<P16>>::Output;P2PowP416402,490770
fn test_P2_Cmp_P4() {test_P2_Cmp_P416408,490947
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16409,490969
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16410,491015
    type P2CmpP4 = <A as Cmp<B>>::Output;P2CmpP416413,491107
fn test_P2_Add_P5() {test_P2_Add_P516418,491249
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16419,491271
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16420,491317
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P716421,491373
    type P2AddP5 = <<A as Add<B>>::Output as Same<P7>>::Output;P2AddP516424,491466
fn test_P2_Sub_P5() {test_P2_Sub_P516430,491641
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16431,491663
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16432,491709
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N316433,491765
    type P2SubP5 = <<A as Sub<B>>::Output as Same<N3>>::Output;P2SubP516436,491848
fn test_P2_Mul_P5() {test_P2_Mul_P516442,492023
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16443,492045
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16444,492091
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;P1016445,492147
    type P2MulP5 = <<A as Mul<B>>::Output as Same<P10>>::Output;P2MulP516448,492251
fn test_P2_Min_P5() {test_P2_Min_P516454,492428
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16455,492450
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16456,492496
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216457,492552
    type P2MinP5 = <<A as Min<B>>::Output as Same<P2>>::Output;P2MinP516460,492635
fn test_P2_Max_P5() {test_P2_Max_P516466,492810
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16467,492832
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16468,492878
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P516469,492934
    type P2MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;P2MaxP516472,493027
fn test_P2_Gcd_P5() {test_P2_Gcd_P516478,493202
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16479,493224
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16480,493270
    type P1 = PInt<UInt<UTerm, B1>>;P116481,493326
    type P2GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P2GcdP516484,493399
fn test_P2_Div_P5() {test_P2_Div_P516490,493574
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16491,493596
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16492,493642
    type _0 = Z0;_016493,493698
    type P2DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;P2DivP516496,493752
fn test_P2_Rem_P5() {test_P2_Rem_P516502,493927
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16503,493949
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16504,493995
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216505,494051
    type P2RemP5 = <<A as Rem<B>>::Output as Same<P2>>::Output;P2RemP516508,494134
fn test_P2_Pow_P5() {test_P2_Pow_P516514,494309
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16515,494331
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16516,494377
    type P32 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>>;P3216517,494433
    type P2PowP5 = <<A as Pow<B>>::Output as Same<P32>>::Output;P2PowP516520,494557
fn test_P2_Cmp_P5() {test_P2_Cmp_P516526,494734
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A16527,494756
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16528,494802
    type P2CmpP5 = <A as Cmp<B>>::Output;P2CmpP516531,494894
fn test_P3_Add_N5() {test_P3_Add_N516536,495036
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16537,495058
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16538,495104
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N216539,495160
    type P3AddN5 = <<A as Add<B>>::Output as Same<N2>>::Output;P3AddN516542,495243
fn test_P3_Sub_N5() {test_P3_Sub_N516548,495418
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16549,495440
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16550,495486
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P816551,495542
    type P3SubN5 = <<A as Sub<B>>::Output as Same<P8>>::Output;P3SubN516554,495645
fn test_P3_Mul_N5() {test_P3_Mul_N516560,495820
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16561,495842
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16562,495888
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;N1516563,495944
    type P3MulN5 = <<A as Mul<B>>::Output as Same<N15>>::Output;P3MulN516566,496048
fn test_P3_Min_N5() {test_P3_Min_N516572,496225
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16573,496247
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16574,496293
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N516575,496349
    type P3MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;P3MinN516578,496442
fn test_P3_Max_N5() {test_P3_Max_N516584,496617
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16585,496639
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16586,496685
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316587,496741
    type P3MaxN5 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxN516590,496824
fn test_P3_Gcd_N5() {test_P3_Gcd_N516596,496999
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16597,497021
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16598,497067
    type P1 = PInt<UInt<UTerm, B1>>;P116599,497123
    type P3GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdN516602,497196
fn test_P3_Div_N5() {test_P3_Div_N516608,497371
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16609,497393
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16610,497439
    type _0 = Z0;_016611,497495
    type P3DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;P3DivN516614,497549
fn test_P3_Rem_N5() {test_P3_Rem_N516620,497724
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16621,497746
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16622,497792
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316623,497848
    type P3RemN5 = <<A as Rem<B>>::Output as Same<P3>>::Output;P3RemN516626,497931
fn test_P3_Cmp_N5() {test_P3_Cmp_N516632,498106
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16633,498128
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B16634,498174
    type P3CmpN5 = <A as Cmp<B>>::Output;P3CmpN516637,498266
fn test_P3_Add_N4() {test_P3_Add_N416642,498411
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16643,498433
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16644,498479
    type N1 = NInt<UInt<UTerm, B1>>;N116645,498535
    type P3AddN4 = <<A as Add<B>>::Output as Same<N1>>::Output;P3AddN416648,498608
fn test_P3_Sub_N4() {test_P3_Sub_N416654,498783
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16655,498805
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16656,498851
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P716657,498907
    type P3SubN4 = <<A as Sub<B>>::Output as Same<P7>>::Output;P3SubN416660,499000
fn test_P3_Mul_N4() {test_P3_Mul_N416666,499175
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16667,499197
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16668,499243
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;N1216669,499299
    type P3MulN4 = <<A as Mul<B>>::Output as Same<N12>>::Output;P3MulN416672,499403
fn test_P3_Min_N4() {test_P3_Min_N416678,499580
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16679,499602
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16680,499648
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N416681,499704
    type P3MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;P3MinN416684,499797
fn test_P3_Max_N4() {test_P3_Max_N416690,499972
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16691,499994
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16692,500040
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316693,500096
    type P3MaxN4 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxN416696,500179
fn test_P3_Gcd_N4() {test_P3_Gcd_N416702,500354
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16703,500376
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16704,500422
    type P1 = PInt<UInt<UTerm, B1>>;P116705,500478
    type P3GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdN416708,500551
fn test_P3_Div_N4() {test_P3_Div_N416714,500726
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16715,500748
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16716,500794
    type _0 = Z0;_016717,500850
    type P3DivN4 = <<A as Div<B>>::Output as Same<_0>>::Output;P3DivN416720,500904
fn test_P3_Rem_N4() {test_P3_Rem_N416726,501079
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16727,501101
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16728,501147
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316729,501203
    type P3RemN4 = <<A as Rem<B>>::Output as Same<P3>>::Output;P3RemN416732,501286
fn test_P3_Cmp_N4() {test_P3_Cmp_N416738,501461
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16739,501483
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B16740,501529
    type P3CmpN4 = <A as Cmp<B>>::Output;P3CmpN416743,501621
fn test_P3_Add_N3() {test_P3_Add_N316748,501766
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16749,501788
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16750,501834
    type _0 = Z0;_016751,501880
    type P3AddN3 = <<A as Add<B>>::Output as Same<_0>>::Output;P3AddN316754,501934
fn test_P3_Sub_N3() {test_P3_Sub_N316760,502109
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16761,502131
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16762,502177
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P616763,502223
    type P3SubN3 = <<A as Sub<B>>::Output as Same<P6>>::Output;P3SubN316766,502316
fn test_P3_Mul_N3() {test_P3_Mul_N316772,502491
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16773,502513
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16774,502559
    type N9 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;N916775,502605
    type P3MulN3 = <<A as Mul<B>>::Output as Same<N9>>::Output;P3MulN316778,502708
fn test_P3_Min_N3() {test_P3_Min_N316784,502883
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16785,502905
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16786,502951
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N316787,502997
    type P3MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;P3MinN316790,503080
fn test_P3_Max_N3() {test_P3_Max_N316796,503255
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16797,503277
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16798,503323
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316799,503369
    type P3MaxN3 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxN316802,503452
fn test_P3_Gcd_N3() {test_P3_Gcd_N316808,503627
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16809,503649
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16810,503695
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316811,503741
    type P3GcdN3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;P3GcdN316814,503824
fn test_P3_Div_N3() {test_P3_Div_N316820,503999
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16821,504021
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16822,504067
    type N1 = NInt<UInt<UTerm, B1>>;N116823,504113
    type P3DivN3 = <<A as Div<B>>::Output as Same<N1>>::Output;P3DivN316826,504186
fn test_P3_Rem_N3() {test_P3_Rem_N316832,504361
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16833,504383
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16834,504429
    type _0 = Z0;_016835,504475
    type P3RemN3 = <<A as Rem<B>>::Output as Same<_0>>::Output;P3RemN316838,504529
fn test_P3_PartialDiv_N3() {test_P3_PartialDiv_N316844,504704
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16845,504733
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16846,504779
    type N1 = NInt<UInt<UTerm, B1>>;N116847,504825
    type P3PartialDivN3 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;P3PartialDivN316850,504898
fn test_P3_Cmp_N3() {test_P3_Cmp_N316856,505094
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16857,505116
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B16858,505162
    type P3CmpN3 = <A as Cmp<B>>::Output;P3CmpN316861,505244
fn test_P3_Add_N2() {test_P3_Add_N216866,505389
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16867,505411
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16868,505457
    type P1 = PInt<UInt<UTerm, B1>>;P116869,505503
    type P3AddN2 = <<A as Add<B>>::Output as Same<P1>>::Output;P3AddN216872,505576
fn test_P3_Sub_N2() {test_P3_Sub_N216878,505751
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16879,505773
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16880,505819
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P516881,505865
    type P3SubN2 = <<A as Sub<B>>::Output as Same<P5>>::Output;P3SubN216884,505958
fn test_P3_Mul_N2() {test_P3_Mul_N216890,506133
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16891,506155
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16892,506201
    type N6 = NInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;N616893,506247
    type P3MulN2 = <<A as Mul<B>>::Output as Same<N6>>::Output;P3MulN216896,506340
fn test_P3_Min_N2() {test_P3_Min_N216902,506515
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16903,506537
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16904,506583
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N216905,506629
    type P3MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;P3MinN216908,506712
fn test_P3_Max_N2() {test_P3_Max_N216914,506887
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16915,506909
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16916,506955
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P316917,507001
    type P3MaxN2 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxN216920,507084
fn test_P3_Gcd_N2() {test_P3_Gcd_N216926,507259
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16927,507281
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16928,507327
    type P1 = PInt<UInt<UTerm, B1>>;P116929,507373
    type P3GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdN216932,507446
fn test_P3_Div_N2() {test_P3_Div_N216938,507621
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16939,507643
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16940,507689
    type N1 = NInt<UInt<UTerm, B1>>;N116941,507735
    type P3DivN2 = <<A as Div<B>>::Output as Same<N1>>::Output;P3DivN216944,507808
fn test_P3_Rem_N2() {test_P3_Rem_N216950,507983
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16951,508005
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16952,508051
    type P1 = PInt<UInt<UTerm, B1>>;P116953,508097
    type P3RemN2 = <<A as Rem<B>>::Output as Same<P1>>::Output;P3RemN216956,508170
fn test_P3_Cmp_N2() {test_P3_Cmp_N216962,508345
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16963,508367
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B16964,508413
    type P3CmpN2 = <A as Cmp<B>>::Output;P3CmpN216967,508495
fn test_P3_Add_N1() {test_P3_Add_N116972,508640
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16973,508662
    type B = NInt<UInt<UTerm, B1>>;B16974,508708
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P216975,508744
    type P3AddN1 = <<A as Add<B>>::Output as Same<P2>>::Output;P3AddN116978,508827
fn test_P3_Sub_N1() {test_P3_Sub_N116984,509002
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16985,509024
    type B = NInt<UInt<UTerm, B1>>;B16986,509070
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P416987,509106
    type P3SubN1 = <<A as Sub<B>>::Output as Same<P4>>::Output;P3SubN116990,509199
fn test_P3_Mul_N1() {test_P3_Mul_N116996,509374
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A16997,509396
    type B = NInt<UInt<UTerm, B1>>;B16998,509442
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N316999,509478
    type P3MulN1 = <<A as Mul<B>>::Output as Same<N3>>::Output;P3MulN117002,509561
fn test_P3_Min_N1() {test_P3_Min_N117008,509736
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17009,509758
    type B = NInt<UInt<UTerm, B1>>;B17010,509804
    type N1 = NInt<UInt<UTerm, B1>>;N117011,509840
    type P3MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;P3MinN117014,509913
fn test_P3_Max_N1() {test_P3_Max_N117020,510088
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17021,510110
    type B = NInt<UInt<UTerm, B1>>;B17022,510156
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317023,510192
    type P3MaxN1 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxN117026,510275
fn test_P3_Gcd_N1() {test_P3_Gcd_N117032,510450
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17033,510472
    type B = NInt<UInt<UTerm, B1>>;B17034,510518
    type P1 = PInt<UInt<UTerm, B1>>;P117035,510554
    type P3GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdN117038,510627
fn test_P3_Div_N1() {test_P3_Div_N117044,510802
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17045,510824
    type B = NInt<UInt<UTerm, B1>>;B17046,510870
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N317047,510906
    type P3DivN1 = <<A as Div<B>>::Output as Same<N3>>::Output;P3DivN117050,510989
fn test_P3_Rem_N1() {test_P3_Rem_N117056,511164
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17057,511186
    type B = NInt<UInt<UTerm, B1>>;B17058,511232
    type _0 = Z0;_017059,511268
    type P3RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P3RemN117062,511322
fn test_P3_PartialDiv_N1() {test_P3_PartialDiv_N117068,511497
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17069,511526
    type B = NInt<UInt<UTerm, B1>>;B17070,511572
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N317071,511608
    type P3PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N3>>::Output;P3PartialDivN117074,511691
fn test_P3_Cmp_N1() {test_P3_Cmp_N117080,511887
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17081,511909
    type B = NInt<UInt<UTerm, B1>>;B17082,511955
    type P3CmpN1 = <A as Cmp<B>>::Output;P3CmpN117085,512027
fn test_P3_Add__0() {test_P3_Add__017090,512172
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17091,512194
    type B = Z0;B17092,512240
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317093,512257
    type P3Add_0 = <<A as Add<B>>::Output as Same<P3>>::Output;P3Add_017096,512340
fn test_P3_Sub__0() {test_P3_Sub__017102,512515
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17103,512537
    type B = Z0;B17104,512583
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317105,512600
    type P3Sub_0 = <<A as Sub<B>>::Output as Same<P3>>::Output;P3Sub_017108,512683
fn test_P3_Mul__0() {test_P3_Mul__017114,512858
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17115,512880
    type B = Z0;B17116,512926
    type _0 = Z0;_017117,512943
    type P3Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;P3Mul_017120,512997
fn test_P3_Min__0() {test_P3_Min__017126,513172
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17127,513194
    type B = Z0;B17128,513240
    type _0 = Z0;_017129,513257
    type P3Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;P3Min_017132,513311
fn test_P3_Max__0() {test_P3_Max__017138,513486
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17139,513508
    type B = Z0;B17140,513554
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317141,513571
    type P3Max_0 = <<A as Max<B>>::Output as Same<P3>>::Output;P3Max_017144,513654
fn test_P3_Gcd__0() {test_P3_Gcd__017150,513829
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17151,513851
    type B = Z0;B17152,513897
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317153,513914
    type P3Gcd_0 = <<A as Gcd<B>>::Output as Same<P3>>::Output;P3Gcd_017156,513997
fn test_P3_Pow__0() {test_P3_Pow__017162,514172
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17163,514194
    type B = Z0;B17164,514240
    type P1 = PInt<UInt<UTerm, B1>>;P117165,514257
    type P3Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;P3Pow_017168,514330
fn test_P3_Cmp__0() {test_P3_Cmp__017174,514505
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17175,514527
    type B = Z0;B17176,514573
    type P3Cmp_0 = <A as Cmp<B>>::Output;P3Cmp_017179,514626
fn test_P3_Add_P1() {test_P3_Add_P117184,514771
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17185,514793
    type B = PInt<UInt<UTerm, B1>>;B17186,514839
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P417187,514875
    type P3AddP1 = <<A as Add<B>>::Output as Same<P4>>::Output;P3AddP117190,514968
fn test_P3_Sub_P1() {test_P3_Sub_P117196,515143
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17197,515165
    type B = PInt<UInt<UTerm, B1>>;B17198,515211
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P217199,515247
    type P3SubP1 = <<A as Sub<B>>::Output as Same<P2>>::Output;P3SubP117202,515330
fn test_P3_Mul_P1() {test_P3_Mul_P117208,515505
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17209,515527
    type B = PInt<UInt<UTerm, B1>>;B17210,515573
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317211,515609
    type P3MulP1 = <<A as Mul<B>>::Output as Same<P3>>::Output;P3MulP117214,515692
fn test_P3_Min_P1() {test_P3_Min_P117220,515867
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17221,515889
    type B = PInt<UInt<UTerm, B1>>;B17222,515935
    type P1 = PInt<UInt<UTerm, B1>>;P117223,515971
    type P3MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;P3MinP117226,516044
fn test_P3_Max_P1() {test_P3_Max_P117232,516219
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17233,516241
    type B = PInt<UInt<UTerm, B1>>;B17234,516287
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317235,516323
    type P3MaxP1 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxP117238,516406
fn test_P3_Gcd_P1() {test_P3_Gcd_P117244,516581
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17245,516603
    type B = PInt<UInt<UTerm, B1>>;B17246,516649
    type P1 = PInt<UInt<UTerm, B1>>;P117247,516685
    type P3GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdP117250,516758
fn test_P3_Div_P1() {test_P3_Div_P117256,516933
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17257,516955
    type B = PInt<UInt<UTerm, B1>>;B17258,517001
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317259,517037
    type P3DivP1 = <<A as Div<B>>::Output as Same<P3>>::Output;P3DivP117262,517120
fn test_P3_Rem_P1() {test_P3_Rem_P117268,517295
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17269,517317
    type B = PInt<UInt<UTerm, B1>>;B17270,517363
    type _0 = Z0;_017271,517399
    type P3RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P3RemP117274,517453
fn test_P3_PartialDiv_P1() {test_P3_PartialDiv_P117280,517628
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17281,517657
    type B = PInt<UInt<UTerm, B1>>;B17282,517703
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317283,517739
    type P3PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P3>>::Output;P3PartialDivP117286,517822
fn test_P3_Pow_P1() {test_P3_Pow_P117292,518018
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17293,518040
    type B = PInt<UInt<UTerm, B1>>;B17294,518086
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317295,518122
    type P3PowP1 = <<A as Pow<B>>::Output as Same<P3>>::Output;P3PowP117298,518205
fn test_P3_Cmp_P1() {test_P3_Cmp_P117304,518380
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17305,518402
    type B = PInt<UInt<UTerm, B1>>;B17306,518448
    type P3CmpP1 = <A as Cmp<B>>::Output;P3CmpP117309,518520
fn test_P3_Add_P2() {test_P3_Add_P217314,518665
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17315,518687
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17316,518733
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P517317,518779
    type P3AddP2 = <<A as Add<B>>::Output as Same<P5>>::Output;P3AddP217320,518872
fn test_P3_Sub_P2() {test_P3_Sub_P217326,519047
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17327,519069
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17328,519115
    type P1 = PInt<UInt<UTerm, B1>>;P117329,519161
    type P3SubP2 = <<A as Sub<B>>::Output as Same<P1>>::Output;P3SubP217332,519234
fn test_P3_Mul_P2() {test_P3_Mul_P217338,519409
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17339,519431
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17340,519477
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P617341,519523
    type P3MulP2 = <<A as Mul<B>>::Output as Same<P6>>::Output;P3MulP217344,519616
fn test_P3_Min_P2() {test_P3_Min_P217350,519791
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17351,519813
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17352,519859
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P217353,519905
    type P3MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;P3MinP217356,519988
fn test_P3_Max_P2() {test_P3_Max_P217362,520163
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17363,520185
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17364,520231
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317365,520277
    type P3MaxP2 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxP217368,520360
fn test_P3_Gcd_P2() {test_P3_Gcd_P217374,520535
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17375,520557
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17376,520603
    type P1 = PInt<UInt<UTerm, B1>>;P117377,520649
    type P3GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdP217380,520722
fn test_P3_Div_P2() {test_P3_Div_P217386,520897
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17387,520919
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17388,520965
    type P1 = PInt<UInt<UTerm, B1>>;P117389,521011
    type P3DivP2 = <<A as Div<B>>::Output as Same<P1>>::Output;P3DivP217392,521084
fn test_P3_Rem_P2() {test_P3_Rem_P217398,521259
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17399,521281
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17400,521327
    type P1 = PInt<UInt<UTerm, B1>>;P117401,521373
    type P3RemP2 = <<A as Rem<B>>::Output as Same<P1>>::Output;P3RemP217404,521446
fn test_P3_Pow_P2() {test_P3_Pow_P217410,521621
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17411,521643
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17412,521689
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P917413,521735
    type P3PowP2 = <<A as Pow<B>>::Output as Same<P9>>::Output;P3PowP217416,521838
fn test_P3_Cmp_P2() {test_P3_Cmp_P217422,522013
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17423,522035
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B17424,522081
    type P3CmpP2 = <A as Cmp<B>>::Output;P3CmpP217427,522163
fn test_P3_Add_P3() {test_P3_Add_P317432,522308
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17433,522330
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17434,522376
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P617435,522422
    type P3AddP3 = <<A as Add<B>>::Output as Same<P6>>::Output;P3AddP317438,522515
fn test_P3_Sub_P3() {test_P3_Sub_P317444,522690
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17445,522712
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17446,522758
    type _0 = Z0;_017447,522804
    type P3SubP3 = <<A as Sub<B>>::Output as Same<_0>>::Output;P3SubP317450,522858
fn test_P3_Mul_P3() {test_P3_Mul_P317456,523033
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17457,523055
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17458,523101
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P917459,523147
    type P3MulP3 = <<A as Mul<B>>::Output as Same<P9>>::Output;P3MulP317462,523250
fn test_P3_Min_P3() {test_P3_Min_P317468,523425
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17469,523447
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17470,523493
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317471,523539
    type P3MinP3 = <<A as Min<B>>::Output as Same<P3>>::Output;P3MinP317474,523622
fn test_P3_Max_P3() {test_P3_Max_P317480,523797
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17481,523819
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17482,523865
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317483,523911
    type P3MaxP3 = <<A as Max<B>>::Output as Same<P3>>::Output;P3MaxP317486,523994
fn test_P3_Gcd_P3() {test_P3_Gcd_P317492,524169
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17493,524191
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17494,524237
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317495,524283
    type P3GcdP3 = <<A as Gcd<B>>::Output as Same<P3>>::Output;P3GcdP317498,524366
fn test_P3_Div_P3() {test_P3_Div_P317504,524541
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17505,524563
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17506,524609
    type P1 = PInt<UInt<UTerm, B1>>;P117507,524655
    type P3DivP3 = <<A as Div<B>>::Output as Same<P1>>::Output;P3DivP317510,524728
fn test_P3_Rem_P3() {test_P3_Rem_P317516,524903
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17517,524925
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17518,524971
    type _0 = Z0;_017519,525017
    type P3RemP3 = <<A as Rem<B>>::Output as Same<_0>>::Output;P3RemP317522,525071
fn test_P3_PartialDiv_P3() {test_P3_PartialDiv_P317528,525246
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17529,525275
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17530,525321
    type P1 = PInt<UInt<UTerm, B1>>;P117531,525367
    type P3PartialDivP3 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;P3PartialDivP317534,525440
fn test_P3_Pow_P3() {test_P3_Pow_P317540,525636
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17541,525658
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17542,525704
    type P27 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B1>, B1>>;P2717543,525750
    type P3PowP3 = <<A as Pow<B>>::Output as Same<P27>>::Output;P3PowP317546,525864
fn test_P3_Cmp_P3() {test_P3_Cmp_P317552,526041
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17553,526063
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B17554,526109
    type P3CmpP3 = <A as Cmp<B>>::Output;P3CmpP317557,526191
fn test_P3_Add_P4() {test_P3_Add_P417562,526334
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17563,526356
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17564,526402
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P717565,526458
    type P3AddP4 = <<A as Add<B>>::Output as Same<P7>>::Output;P3AddP417568,526551
fn test_P3_Sub_P4() {test_P3_Sub_P417574,526726
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17575,526748
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17576,526794
    type N1 = NInt<UInt<UTerm, B1>>;N117577,526850
    type P3SubP4 = <<A as Sub<B>>::Output as Same<N1>>::Output;P3SubP417580,526923
fn test_P3_Mul_P4() {test_P3_Mul_P417586,527098
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17587,527120
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17588,527166
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;P1217589,527222
    type P3MulP4 = <<A as Mul<B>>::Output as Same<P12>>::Output;P3MulP417592,527326
fn test_P3_Min_P4() {test_P3_Min_P417598,527503
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17599,527525
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17600,527571
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317601,527627
    type P3MinP4 = <<A as Min<B>>::Output as Same<P3>>::Output;P3MinP417604,527710
fn test_P3_Max_P4() {test_P3_Max_P417610,527885
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17611,527907
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17612,527953
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P417613,528009
    type P3MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;P3MaxP417616,528102
fn test_P3_Gcd_P4() {test_P3_Gcd_P417622,528277
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17623,528299
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17624,528345
    type P1 = PInt<UInt<UTerm, B1>>;P117625,528401
    type P3GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdP417628,528474
fn test_P3_Div_P4() {test_P3_Div_P417634,528649
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17635,528671
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17636,528717
    type _0 = Z0;_017637,528773
    type P3DivP4 = <<A as Div<B>>::Output as Same<_0>>::Output;P3DivP417640,528827
fn test_P3_Rem_P4() {test_P3_Rem_P417646,529002
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17647,529024
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17648,529070
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317649,529126
    type P3RemP4 = <<A as Rem<B>>::Output as Same<P3>>::Output;P3RemP417652,529209
fn test_P3_Pow_P4() {test_P3_Pow_P417658,529384
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17659,529406
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17660,529452
    type P81 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>, B0>, B1>>P8117661,529508
    type P3PowP4 = <<A as Pow<B>>::Output as Same<P81>>::Output;P3PowP417664,529642
fn test_P3_Cmp_P4() {test_P3_Cmp_P417670,529819
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17671,529841
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17672,529887
    type P3CmpP4 = <A as Cmp<B>>::Output;P3CmpP417675,529979
fn test_P3_Add_P5() {test_P3_Add_P517680,530121
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17681,530143
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17682,530189
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P817683,530245
    type P3AddP5 = <<A as Add<B>>::Output as Same<P8>>::Output;P3AddP517686,530348
fn test_P3_Sub_P5() {test_P3_Sub_P517692,530523
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17693,530545
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17694,530591
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N217695,530647
    type P3SubP5 = <<A as Sub<B>>::Output as Same<N2>>::Output;P3SubP517698,530730
fn test_P3_Mul_P5() {test_P3_Mul_P517704,530905
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17705,530927
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17706,530973
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;P1517707,531029
    type P3MulP5 = <<A as Mul<B>>::Output as Same<P15>>::Output;P3MulP517710,531133
fn test_P3_Min_P5() {test_P3_Min_P517716,531310
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17717,531332
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17718,531378
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317719,531434
    type P3MinP5 = <<A as Min<B>>::Output as Same<P3>>::Output;P3MinP517722,531517
fn test_P3_Max_P5() {test_P3_Max_P517728,531692
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17729,531714
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17730,531760
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P517731,531816
    type P3MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;P3MaxP517734,531909
fn test_P3_Gcd_P5() {test_P3_Gcd_P517740,532084
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17741,532106
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17742,532152
    type P1 = PInt<UInt<UTerm, B1>>;P117743,532208
    type P3GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P3GcdP517746,532281
fn test_P3_Div_P5() {test_P3_Div_P517752,532456
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17753,532478
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17754,532524
    type _0 = Z0;_017755,532580
    type P3DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;P3DivP517758,532634
fn test_P3_Rem_P5() {test_P3_Rem_P517764,532809
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17765,532831
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17766,532877
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P317767,532933
    type P3RemP5 = <<A as Rem<B>>::Output as Same<P3>>::Output;P3RemP517770,533016
fn test_P3_Pow_P5() {test_P3_Pow_P517776,533191
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17777,533213
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17778,533259
    type P243 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B0>, B0>P24317779,533315
    type P3PowP5 = <<A as Pow<B>>::Output as Same<P243>>::Output;P3PowP517782,533460
fn test_P3_Cmp_P5() {test_P3_Cmp_P517788,533639
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A17789,533661
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17790,533707
    type P3CmpP5 = <A as Cmp<B>>::Output;P3CmpP517793,533799
fn test_P4_Add_N5() {test_P4_Add_N517798,533941
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17799,533963
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17800,534019
    type N1 = NInt<UInt<UTerm, B1>>;N117801,534075
    type P4AddN5 = <<A as Add<B>>::Output as Same<N1>>::Output;P4AddN517804,534148
fn test_P4_Sub_N5() {test_P4_Sub_N517810,534323
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17811,534345
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17812,534401
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P917813,534457
    type P4SubN5 = <<A as Sub<B>>::Output as Same<P9>>::Output;P4SubN517816,534560
fn test_P4_Mul_N5() {test_P4_Mul_N517822,534735
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17823,534757
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17824,534813
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;N2017825,534869
    type P4MulN5 = <<A as Mul<B>>::Output as Same<N20>>::Output;P4MulN517828,534983
fn test_P4_Min_N5() {test_P4_Min_N517834,535160
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17835,535182
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17836,535238
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N517837,535294
    type P4MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;P4MinN517840,535387
fn test_P4_Max_N5() {test_P4_Max_N517846,535562
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17847,535584
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17848,535640
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P417849,535696
    type P4MaxN5 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxN517852,535789
fn test_P4_Gcd_N5() {test_P4_Gcd_N517858,535964
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17859,535986
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17860,536042
    type P1 = PInt<UInt<UTerm, B1>>;P117861,536098
    type P4GcdN5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P4GcdN517864,536171
fn test_P4_Div_N5() {test_P4_Div_N517870,536346
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17871,536368
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17872,536424
    type _0 = Z0;_017873,536480
    type P4DivN5 = <<A as Div<B>>::Output as Same<_0>>::Output;P4DivN517876,536534
fn test_P4_Rem_N5() {test_P4_Rem_N517882,536709
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17883,536731
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17884,536787
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P417885,536843
    type P4RemN5 = <<A as Rem<B>>::Output as Same<P4>>::Output;P4RemN517888,536936
fn test_P4_Cmp_N5() {test_P4_Cmp_N517894,537111
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17895,537133
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B17896,537189
    type P4CmpN5 = <A as Cmp<B>>::Output;P4CmpN517899,537281
fn test_P4_Add_N4() {test_P4_Add_N417904,537426
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17905,537448
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17906,537504
    type _0 = Z0;_017907,537560
    type P4AddN4 = <<A as Add<B>>::Output as Same<_0>>::Output;P4AddN417910,537614
fn test_P4_Sub_N4() {test_P4_Sub_N417916,537789
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17917,537811
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17918,537867
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P817919,537923
    type P4SubN4 = <<A as Sub<B>>::Output as Same<P8>>::Output;P4SubN417922,538026
fn test_P4_Mul_N4() {test_P4_Mul_N417928,538201
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17929,538223
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17930,538279
    type N16 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;N1617931,538335
    type P4MulN4 = <<A as Mul<B>>::Output as Same<N16>>::Output;P4MulN417934,538449
fn test_P4_Min_N4() {test_P4_Min_N417940,538626
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17941,538648
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17942,538704
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N417943,538760
    type P4MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;P4MinN417946,538853
fn test_P4_Max_N4() {test_P4_Max_N417952,539028
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17953,539050
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17954,539106
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P417955,539162
    type P4MaxN4 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxN417958,539255
fn test_P4_Gcd_N4() {test_P4_Gcd_N417964,539430
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17965,539452
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17966,539508
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P417967,539564
    type P4GcdN4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;P4GcdN417970,539657
fn test_P4_Div_N4() {test_P4_Div_N417976,539832
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17977,539854
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17978,539910
    type N1 = NInt<UInt<UTerm, B1>>;N117979,539966
    type P4DivN4 = <<A as Div<B>>::Output as Same<N1>>::Output;P4DivN417982,540039
fn test_P4_Rem_N4() {test_P4_Rem_N417988,540214
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A17989,540236
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B17990,540292
    type _0 = Z0;_017991,540348
    type P4RemN4 = <<A as Rem<B>>::Output as Same<_0>>::Output;P4RemN417994,540402
fn test_P4_PartialDiv_N4() {test_P4_PartialDiv_N418000,540577
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18001,540606
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18002,540662
    type N1 = NInt<UInt<UTerm, B1>>;N118003,540718
    type P4PartialDivN4 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;P4PartialDivN418006,540791
fn test_P4_Cmp_N4() {test_P4_Cmp_N418012,540987
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18013,541009
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18014,541065
    type P4CmpN4 = <A as Cmp<B>>::Output;P4CmpN418017,541157
fn test_P4_Add_N3() {test_P4_Add_N318022,541302
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18023,541324
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18024,541380
    type P1 = PInt<UInt<UTerm, B1>>;P118025,541426
    type P4AddN3 = <<A as Add<B>>::Output as Same<P1>>::Output;P4AddN318028,541499
fn test_P4_Sub_N3() {test_P4_Sub_N318034,541674
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18035,541696
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18036,541752
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P718037,541798
    type P4SubN3 = <<A as Sub<B>>::Output as Same<P7>>::Output;P4SubN318040,541891
fn test_P4_Mul_N3() {test_P4_Mul_N318046,542066
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18047,542088
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18048,542144
    type N12 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;N1218049,542190
    type P4MulN3 = <<A as Mul<B>>::Output as Same<N12>>::Output;P4MulN318052,542294
fn test_P4_Min_N3() {test_P4_Min_N318058,542471
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18059,542493
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18060,542549
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N318061,542595
    type P4MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;P4MinN318064,542678
fn test_P4_Max_N3() {test_P4_Max_N318070,542853
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18071,542875
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18072,542931
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418073,542977
    type P4MaxN3 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxN318076,543070
fn test_P4_Gcd_N3() {test_P4_Gcd_N318082,543245
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18083,543267
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18084,543323
    type P1 = PInt<UInt<UTerm, B1>>;P118085,543369
    type P4GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P4GcdN318088,543442
fn test_P4_Div_N3() {test_P4_Div_N318094,543617
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18095,543639
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18096,543695
    type N1 = NInt<UInt<UTerm, B1>>;N118097,543741
    type P4DivN3 = <<A as Div<B>>::Output as Same<N1>>::Output;P4DivN318100,543814
fn test_P4_Rem_N3() {test_P4_Rem_N318106,543989
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18107,544011
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18108,544067
    type P1 = PInt<UInt<UTerm, B1>>;P118109,544113
    type P4RemN3 = <<A as Rem<B>>::Output as Same<P1>>::Output;P4RemN318112,544186
fn test_P4_Cmp_N3() {test_P4_Cmp_N318118,544361
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18119,544383
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B18120,544439
    type P4CmpN3 = <A as Cmp<B>>::Output;P4CmpN318123,544521
fn test_P4_Add_N2() {test_P4_Add_N218128,544666
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18129,544688
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18130,544744
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218131,544790
    type P4AddN2 = <<A as Add<B>>::Output as Same<P2>>::Output;P4AddN218134,544873
fn test_P4_Sub_N2() {test_P4_Sub_N218140,545048
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18141,545070
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18142,545126
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P618143,545172
    type P4SubN2 = <<A as Sub<B>>::Output as Same<P6>>::Output;P4SubN218146,545265
fn test_P4_Mul_N2() {test_P4_Mul_N218152,545440
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18153,545462
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18154,545518
    type N8 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;N818155,545564
    type P4MulN2 = <<A as Mul<B>>::Output as Same<N8>>::Output;P4MulN218158,545667
fn test_P4_Min_N2() {test_P4_Min_N218164,545842
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18165,545864
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18166,545920
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N218167,545966
    type P4MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;P4MinN218170,546049
fn test_P4_Max_N2() {test_P4_Max_N218176,546224
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18177,546246
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18178,546302
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418179,546348
    type P4MaxN2 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxN218182,546441
fn test_P4_Gcd_N2() {test_P4_Gcd_N218188,546616
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18189,546638
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18190,546694
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218191,546740
    type P4GcdN2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P4GcdN218194,546823
fn test_P4_Div_N2() {test_P4_Div_N218200,546998
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18201,547020
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18202,547076
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N218203,547122
    type P4DivN2 = <<A as Div<B>>::Output as Same<N2>>::Output;P4DivN218206,547205
fn test_P4_Rem_N2() {test_P4_Rem_N218212,547380
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18213,547402
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18214,547458
    type _0 = Z0;_018215,547504
    type P4RemN2 = <<A as Rem<B>>::Output as Same<_0>>::Output;P4RemN218218,547558
fn test_P4_PartialDiv_N2() {test_P4_PartialDiv_N218224,547733
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18225,547762
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18226,547818
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N218227,547864
    type P4PartialDivN2 = <<A as PartialDiv<B>>::Output as Same<N2>>::Output;P4PartialDivN218230,547947
fn test_P4_Cmp_N2() {test_P4_Cmp_N218236,548143
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18237,548165
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B18238,548221
    type P4CmpN2 = <A as Cmp<B>>::Output;P4CmpN218241,548303
fn test_P4_Add_N1() {test_P4_Add_N118246,548448
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18247,548470
    type B = NInt<UInt<UTerm, B1>>;B18248,548526
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P318249,548562
    type P4AddN1 = <<A as Add<B>>::Output as Same<P3>>::Output;P4AddN118252,548645
fn test_P4_Sub_N1() {test_P4_Sub_N118258,548820
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18259,548842
    type B = NInt<UInt<UTerm, B1>>;B18260,548898
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P518261,548934
    type P4SubN1 = <<A as Sub<B>>::Output as Same<P5>>::Output;P4SubN118264,549027
fn test_P4_Mul_N1() {test_P4_Mul_N118270,549202
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18271,549224
    type B = NInt<UInt<UTerm, B1>>;B18272,549280
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N418273,549316
    type P4MulN1 = <<A as Mul<B>>::Output as Same<N4>>::Output;P4MulN118276,549409
fn test_P4_Min_N1() {test_P4_Min_N118282,549584
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18283,549606
    type B = NInt<UInt<UTerm, B1>>;B18284,549662
    type N1 = NInt<UInt<UTerm, B1>>;N118285,549698
    type P4MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;P4MinN118288,549771
fn test_P4_Max_N1() {test_P4_Max_N118294,549946
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18295,549968
    type B = NInt<UInt<UTerm, B1>>;B18296,550024
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418297,550060
    type P4MaxN1 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxN118300,550153
fn test_P4_Gcd_N1() {test_P4_Gcd_N118306,550328
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18307,550350
    type B = NInt<UInt<UTerm, B1>>;B18308,550406
    type P1 = PInt<UInt<UTerm, B1>>;P118309,550442
    type P4GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P4GcdN118312,550515
fn test_P4_Div_N1() {test_P4_Div_N118318,550690
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18319,550712
    type B = NInt<UInt<UTerm, B1>>;B18320,550768
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N418321,550804
    type P4DivN1 = <<A as Div<B>>::Output as Same<N4>>::Output;P4DivN118324,550897
fn test_P4_Rem_N1() {test_P4_Rem_N118330,551072
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18331,551094
    type B = NInt<UInt<UTerm, B1>>;B18332,551150
    type _0 = Z0;_018333,551186
    type P4RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P4RemN118336,551240
fn test_P4_PartialDiv_N1() {test_P4_PartialDiv_N118342,551415
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18343,551444
    type B = NInt<UInt<UTerm, B1>>;B18344,551500
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N418345,551536
    type P4PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N4>>::Output;P4PartialDivN118348,551629
fn test_P4_Cmp_N1() {test_P4_Cmp_N118354,551825
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18355,551847
    type B = NInt<UInt<UTerm, B1>>;B18356,551903
    type P4CmpN1 = <A as Cmp<B>>::Output;P4CmpN118359,551975
fn test_P4_Add__0() {test_P4_Add__018364,552120
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18365,552142
    type B = Z0;B18366,552198
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418367,552215
    type P4Add_0 = <<A as Add<B>>::Output as Same<P4>>::Output;P4Add_018370,552308
fn test_P4_Sub__0() {test_P4_Sub__018376,552483
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18377,552505
    type B = Z0;B18378,552561
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418379,552578
    type P4Sub_0 = <<A as Sub<B>>::Output as Same<P4>>::Output;P4Sub_018382,552671
fn test_P4_Mul__0() {test_P4_Mul__018388,552846
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18389,552868
    type B = Z0;B18390,552924
    type _0 = Z0;_018391,552941
    type P4Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;P4Mul_018394,552995
fn test_P4_Min__0() {test_P4_Min__018400,553170
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18401,553192
    type B = Z0;B18402,553248
    type _0 = Z0;_018403,553265
    type P4Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;P4Min_018406,553319
fn test_P4_Max__0() {test_P4_Max__018412,553494
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18413,553516
    type B = Z0;B18414,553572
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418415,553589
    type P4Max_0 = <<A as Max<B>>::Output as Same<P4>>::Output;P4Max_018418,553682
fn test_P4_Gcd__0() {test_P4_Gcd__018424,553857
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18425,553879
    type B = Z0;B18426,553935
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418427,553952
    type P4Gcd_0 = <<A as Gcd<B>>::Output as Same<P4>>::Output;P4Gcd_018430,554045
fn test_P4_Pow__0() {test_P4_Pow__018436,554220
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18437,554242
    type B = Z0;B18438,554298
    type P1 = PInt<UInt<UTerm, B1>>;P118439,554315
    type P4Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;P4Pow_018442,554388
fn test_P4_Cmp__0() {test_P4_Cmp__018448,554563
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18449,554585
    type B = Z0;B18450,554641
    type P4Cmp_0 = <A as Cmp<B>>::Output;P4Cmp_018453,554694
fn test_P4_Add_P1() {test_P4_Add_P118458,554839
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18459,554861
    type B = PInt<UInt<UTerm, B1>>;B18460,554917
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P518461,554953
    type P4AddP1 = <<A as Add<B>>::Output as Same<P5>>::Output;P4AddP118464,555046
fn test_P4_Sub_P1() {test_P4_Sub_P118470,555221
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18471,555243
    type B = PInt<UInt<UTerm, B1>>;B18472,555299
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P318473,555335
    type P4SubP1 = <<A as Sub<B>>::Output as Same<P3>>::Output;P4SubP118476,555418
fn test_P4_Mul_P1() {test_P4_Mul_P118482,555593
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18483,555615
    type B = PInt<UInt<UTerm, B1>>;B18484,555671
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418485,555707
    type P4MulP1 = <<A as Mul<B>>::Output as Same<P4>>::Output;P4MulP118488,555800
fn test_P4_Min_P1() {test_P4_Min_P118494,555975
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18495,555997
    type B = PInt<UInt<UTerm, B1>>;B18496,556053
    type P1 = PInt<UInt<UTerm, B1>>;P118497,556089
    type P4MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;P4MinP118500,556162
fn test_P4_Max_P1() {test_P4_Max_P118506,556337
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18507,556359
    type B = PInt<UInt<UTerm, B1>>;B18508,556415
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418509,556451
    type P4MaxP1 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxP118512,556544
fn test_P4_Gcd_P1() {test_P4_Gcd_P118518,556719
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18519,556741
    type B = PInt<UInt<UTerm, B1>>;B18520,556797
    type P1 = PInt<UInt<UTerm, B1>>;P118521,556833
    type P4GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P4GcdP118524,556906
fn test_P4_Div_P1() {test_P4_Div_P118530,557081
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18531,557103
    type B = PInt<UInt<UTerm, B1>>;B18532,557159
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418533,557195
    type P4DivP1 = <<A as Div<B>>::Output as Same<P4>>::Output;P4DivP118536,557288
fn test_P4_Rem_P1() {test_P4_Rem_P118542,557463
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18543,557485
    type B = PInt<UInt<UTerm, B1>>;B18544,557541
    type _0 = Z0;_018545,557577
    type P4RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P4RemP118548,557631
fn test_P4_PartialDiv_P1() {test_P4_PartialDiv_P118554,557806
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18555,557835
    type B = PInt<UInt<UTerm, B1>>;B18556,557891
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418557,557927
    type P4PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P4>>::Output;P4PartialDivP118560,558020
fn test_P4_Pow_P1() {test_P4_Pow_P118566,558216
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18567,558238
    type B = PInt<UInt<UTerm, B1>>;B18568,558294
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418569,558330
    type P4PowP1 = <<A as Pow<B>>::Output as Same<P4>>::Output;P4PowP118572,558423
fn test_P4_Cmp_P1() {test_P4_Cmp_P118578,558598
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18579,558620
    type B = PInt<UInt<UTerm, B1>>;B18580,558676
    type P4CmpP1 = <A as Cmp<B>>::Output;P4CmpP118583,558748
fn test_P4_Add_P2() {test_P4_Add_P218588,558893
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18589,558915
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18590,558971
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P618591,559017
    type P4AddP2 = <<A as Add<B>>::Output as Same<P6>>::Output;P4AddP218594,559110
fn test_P4_Sub_P2() {test_P4_Sub_P218600,559285
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18601,559307
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18602,559363
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218603,559409
    type P4SubP2 = <<A as Sub<B>>::Output as Same<P2>>::Output;P4SubP218606,559492
fn test_P4_Mul_P2() {test_P4_Mul_P218612,559667
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18613,559689
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18614,559745
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P818615,559791
    type P4MulP2 = <<A as Mul<B>>::Output as Same<P8>>::Output;P4MulP218618,559894
fn test_P4_Min_P2() {test_P4_Min_P218624,560069
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18625,560091
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18626,560147
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218627,560193
    type P4MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;P4MinP218630,560276
fn test_P4_Max_P2() {test_P4_Max_P218636,560451
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18637,560473
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18638,560529
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418639,560575
    type P4MaxP2 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxP218642,560668
fn test_P4_Gcd_P2() {test_P4_Gcd_P218648,560843
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18649,560865
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18650,560921
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218651,560967
    type P4GcdP2 = <<A as Gcd<B>>::Output as Same<P2>>::Output;P4GcdP218654,561050
fn test_P4_Div_P2() {test_P4_Div_P218660,561225
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18661,561247
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18662,561303
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218663,561349
    type P4DivP2 = <<A as Div<B>>::Output as Same<P2>>::Output;P4DivP218666,561432
fn test_P4_Rem_P2() {test_P4_Rem_P218672,561607
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18673,561629
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18674,561685
    type _0 = Z0;_018675,561731
    type P4RemP2 = <<A as Rem<B>>::Output as Same<_0>>::Output;P4RemP218678,561785
fn test_P4_PartialDiv_P2() {test_P4_PartialDiv_P218684,561960
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18685,561989
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18686,562045
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P218687,562091
    type P4PartialDivP2 = <<A as PartialDiv<B>>::Output as Same<P2>>::Output;P4PartialDivP218690,562174
fn test_P4_Pow_P2() {test_P4_Pow_P218696,562370
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18697,562392
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18698,562448
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;P1618699,562494
    type P4PowP2 = <<A as Pow<B>>::Output as Same<P16>>::Output;P4PowP218702,562608
fn test_P4_Cmp_P2() {test_P4_Cmp_P218708,562785
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18709,562807
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B18710,562863
    type P4CmpP2 = <A as Cmp<B>>::Output;P4CmpP218713,562945
fn test_P4_Add_P3() {test_P4_Add_P318718,563090
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18719,563112
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18720,563168
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P718721,563214
    type P4AddP3 = <<A as Add<B>>::Output as Same<P7>>::Output;P4AddP318724,563307
fn test_P4_Sub_P3() {test_P4_Sub_P318730,563482
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18731,563504
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18732,563560
    type P1 = PInt<UInt<UTerm, B1>>;P118733,563606
    type P4SubP3 = <<A as Sub<B>>::Output as Same<P1>>::Output;P4SubP318736,563679
fn test_P4_Mul_P3() {test_P4_Mul_P318742,563854
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18743,563876
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18744,563932
    type P12 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>>;P1218745,563978
    type P4MulP3 = <<A as Mul<B>>::Output as Same<P12>>::Output;P4MulP318748,564082
fn test_P4_Min_P3() {test_P4_Min_P318754,564259
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18755,564281
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18756,564337
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P318757,564383
    type P4MinP3 = <<A as Min<B>>::Output as Same<P3>>::Output;P4MinP318760,564466
fn test_P4_Max_P3() {test_P4_Max_P318766,564641
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18767,564663
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18768,564719
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418769,564765
    type P4MaxP3 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxP318772,564858
fn test_P4_Gcd_P3() {test_P4_Gcd_P318778,565033
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18779,565055
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18780,565111
    type P1 = PInt<UInt<UTerm, B1>>;P118781,565157
    type P4GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P4GcdP318784,565230
fn test_P4_Div_P3() {test_P4_Div_P318790,565405
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18791,565427
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18792,565483
    type P1 = PInt<UInt<UTerm, B1>>;P118793,565529
    type P4DivP3 = <<A as Div<B>>::Output as Same<P1>>::Output;P4DivP318796,565602
fn test_P4_Rem_P3() {test_P4_Rem_P318802,565777
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18803,565799
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18804,565855
    type P1 = PInt<UInt<UTerm, B1>>;P118805,565901
    type P4RemP3 = <<A as Rem<B>>::Output as Same<P1>>::Output;P4RemP318808,565974
fn test_P4_Pow_P3() {test_P4_Pow_P318814,566149
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18815,566171
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18816,566227
    type P64 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>, B0>, B0>>P6418817,566273
    type P4PowP3 = <<A as Pow<B>>::Output as Same<P64>>::Output;P4PowP318820,566407
fn test_P4_Cmp_P3() {test_P4_Cmp_P318826,566584
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18827,566606
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B18828,566662
    type P4CmpP3 = <A as Cmp<B>>::Output;P4CmpP318831,566744
fn test_P4_Add_P4() {test_P4_Add_P418836,566889
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18837,566911
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18838,566967
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P818839,567023
    type P4AddP4 = <<A as Add<B>>::Output as Same<P8>>::Output;P4AddP418842,567126
fn test_P4_Sub_P4() {test_P4_Sub_P418848,567301
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18849,567323
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18850,567379
    type _0 = Z0;_018851,567435
    type P4SubP4 = <<A as Sub<B>>::Output as Same<_0>>::Output;P4SubP418854,567489
fn test_P4_Mul_P4() {test_P4_Mul_P418860,567664
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18861,567686
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18862,567742
    type P16 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>>;P1618863,567798
    type P4MulP4 = <<A as Mul<B>>::Output as Same<P16>>::Output;P4MulP418866,567912
fn test_P4_Min_P4() {test_P4_Min_P418872,568089
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18873,568111
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18874,568167
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418875,568223
    type P4MinP4 = <<A as Min<B>>::Output as Same<P4>>::Output;P4MinP418878,568316
fn test_P4_Max_P4() {test_P4_Max_P418884,568491
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18885,568513
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18886,568569
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418887,568625
    type P4MaxP4 = <<A as Max<B>>::Output as Same<P4>>::Output;P4MaxP418890,568718
fn test_P4_Gcd_P4() {test_P4_Gcd_P418896,568893
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18897,568915
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18898,568971
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P418899,569027
    type P4GcdP4 = <<A as Gcd<B>>::Output as Same<P4>>::Output;P4GcdP418902,569120
fn test_P4_Div_P4() {test_P4_Div_P418908,569295
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18909,569317
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18910,569373
    type P1 = PInt<UInt<UTerm, B1>>;P118911,569429
    type P4DivP4 = <<A as Div<B>>::Output as Same<P1>>::Output;P4DivP418914,569502
fn test_P4_Rem_P4() {test_P4_Rem_P418920,569677
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18921,569699
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18922,569755
    type _0 = Z0;_018923,569811
    type P4RemP4 = <<A as Rem<B>>::Output as Same<_0>>::Output;P4RemP418926,569865
fn test_P4_PartialDiv_P4() {test_P4_PartialDiv_P418932,570040
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18933,570069
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18934,570125
    type P1 = PInt<UInt<UTerm, B1>>;P118935,570181
    type P4PartialDivP4 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;P4PartialDivP418938,570254
fn test_P4_Pow_P4() {test_P4_Pow_P418944,570450
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18945,570472
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18946,570528
    type P256 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>, B0>P25618947,570584
    type P4PowP4 = <<A as Pow<B>>::Output as Same<P256>>::Output;P4PowP418950,570739
fn test_P4_Cmp_P4() {test_P4_Cmp_P418956,570918
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18957,570940
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B18958,570996
    type P4CmpP4 = <A as Cmp<B>>::Output;P4CmpP418961,571088
fn test_P4_Add_P5() {test_P4_Add_P518966,571231
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18967,571253
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B18968,571309
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P918969,571365
    type P4AddP5 = <<A as Add<B>>::Output as Same<P9>>::Output;P4AddP518972,571468
fn test_P4_Sub_P5() {test_P4_Sub_P518978,571643
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18979,571665
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B18980,571721
    type N1 = NInt<UInt<UTerm, B1>>;N118981,571777
    type P4SubP5 = <<A as Sub<B>>::Output as Same<N1>>::Output;P4SubP518984,571850
fn test_P4_Mul_P5() {test_P4_Mul_P518990,572025
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A18991,572047
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B18992,572103
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;P2018993,572159
    type P4MulP5 = <<A as Mul<B>>::Output as Same<P20>>::Output;P4MulP518996,572273
fn test_P4_Min_P5() {test_P4_Min_P519002,572450
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19003,572472
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19004,572528
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P419005,572584
    type P4MinP5 = <<A as Min<B>>::Output as Same<P4>>::Output;P4MinP519008,572677
fn test_P4_Max_P5() {test_P4_Max_P519014,572852
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19015,572874
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19016,572930
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519017,572986
    type P4MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;P4MaxP519020,573079
fn test_P4_Gcd_P5() {test_P4_Gcd_P519026,573254
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19027,573276
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19028,573332
    type P1 = PInt<UInt<UTerm, B1>>;P119029,573388
    type P4GcdP5 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P4GcdP519032,573461
fn test_P4_Div_P5() {test_P4_Div_P519038,573636
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19039,573658
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19040,573714
    type _0 = Z0;_019041,573770
    type P4DivP5 = <<A as Div<B>>::Output as Same<_0>>::Output;P4DivP519044,573824
fn test_P4_Rem_P5() {test_P4_Rem_P519050,573999
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19051,574021
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19052,574077
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P419053,574133
    type P4RemP5 = <<A as Rem<B>>::Output as Same<P4>>::Output;P4RemP519056,574226
fn test_P4_Pow_P5() {test_P4_Pow_P519062,574401
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19063,574423
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19064,574479
    type P1024 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0P102419065,574535
    type P4PowP5 = <<A as Pow<B>>::Output as Same<P1024>>::Output;P4PowP519068,574711
fn test_P4_Cmp_P5() {test_P4_Cmp_P519074,574892
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A19075,574914
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19076,574970
    type P4CmpP5 = <A as Cmp<B>>::Output;P4CmpP519079,575062
fn test_P5_Add_N5() {test_P5_Add_N519084,575204
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19085,575226
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19086,575282
    type _0 = Z0;_019087,575338
    type P5AddN5 = <<A as Add<B>>::Output as Same<_0>>::Output;P5AddN519090,575392
fn test_P5_Sub_N5() {test_P5_Sub_N519096,575567
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19097,575589
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19098,575645
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;P1019099,575701
    type P5SubN5 = <<A as Sub<B>>::Output as Same<P10>>::Output;P5SubN519102,575805
fn test_P5_Mul_N5() {test_P5_Mul_N519108,575982
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19109,576004
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19110,576060
    type N25 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;N2519111,576116
    type P5MulN5 = <<A as Mul<B>>::Output as Same<N25>>::Output;P5MulN519114,576230
fn test_P5_Min_N5() {test_P5_Min_N519120,576407
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19121,576429
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19122,576485
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N519123,576541
    type P5MinN5 = <<A as Min<B>>::Output as Same<N5>>::Output;P5MinN519126,576634
fn test_P5_Max_N5() {test_P5_Max_N519132,576809
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19133,576831
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19134,576887
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519135,576943
    type P5MaxN5 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxN519138,577036
fn test_P5_Gcd_N5() {test_P5_Gcd_N519144,577211
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19145,577233
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19146,577289
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519147,577345
    type P5GcdN5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;P5GcdN519150,577438
fn test_P5_Div_N5() {test_P5_Div_N519156,577613
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19157,577635
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19158,577691
    type N1 = NInt<UInt<UTerm, B1>>;N119159,577747
    type P5DivN5 = <<A as Div<B>>::Output as Same<N1>>::Output;P5DivN519162,577820
fn test_P5_Rem_N5() {test_P5_Rem_N519168,577995
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19169,578017
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19170,578073
    type _0 = Z0;_019171,578129
    type P5RemN5 = <<A as Rem<B>>::Output as Same<_0>>::Output;P5RemN519174,578183
fn test_P5_PartialDiv_N5() {test_P5_PartialDiv_N519180,578358
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19181,578387
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19182,578443
    type N1 = NInt<UInt<UTerm, B1>>;N119183,578499
    type P5PartialDivN5 = <<A as PartialDiv<B>>::Output as Same<N1>>::Output;P5PartialDivN519186,578572
fn test_P5_Cmp_N5() {test_P5_Cmp_N519192,578768
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19193,578790
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B19194,578846
    type P5CmpN5 = <A as Cmp<B>>::Output;P5CmpN519197,578938
fn test_P5_Add_N4() {test_P5_Add_N419202,579083
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19203,579105
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19204,579161
    type P1 = PInt<UInt<UTerm, B1>>;P119205,579217
    type P5AddN4 = <<A as Add<B>>::Output as Same<P1>>::Output;P5AddN419208,579290
fn test_P5_Sub_N4() {test_P5_Sub_N419214,579465
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19215,579487
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19216,579543
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P919217,579599
    type P5SubN4 = <<A as Sub<B>>::Output as Same<P9>>::Output;P5SubN419220,579702
fn test_P5_Mul_N4() {test_P5_Mul_N419226,579877
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19227,579899
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19228,579955
    type N20 = NInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;N2019229,580011
    type P5MulN4 = <<A as Mul<B>>::Output as Same<N20>>::Output;P5MulN419232,580125
fn test_P5_Min_N4() {test_P5_Min_N419238,580302
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19239,580324
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19240,580380
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N419241,580436
    type P5MinN4 = <<A as Min<B>>::Output as Same<N4>>::Output;P5MinN419244,580529
fn test_P5_Max_N4() {test_P5_Max_N419250,580704
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19251,580726
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19252,580782
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519253,580838
    type P5MaxN4 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxN419256,580931
fn test_P5_Gcd_N4() {test_P5_Gcd_N419262,581106
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19263,581128
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19264,581184
    type P1 = PInt<UInt<UTerm, B1>>;P119265,581240
    type P5GcdN4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdN419268,581313
fn test_P5_Div_N4() {test_P5_Div_N419274,581488
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19275,581510
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19276,581566
    type N1 = NInt<UInt<UTerm, B1>>;N119277,581622
    type P5DivN4 = <<A as Div<B>>::Output as Same<N1>>::Output;P5DivN419280,581695
fn test_P5_Rem_N4() {test_P5_Rem_N419286,581870
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19287,581892
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19288,581948
    type P1 = PInt<UInt<UTerm, B1>>;P119289,582004
    type P5RemN4 = <<A as Rem<B>>::Output as Same<P1>>::Output;P5RemN419292,582077
fn test_P5_Cmp_N4() {test_P5_Cmp_N419298,582252
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19299,582274
    type B = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B19300,582330
    type P5CmpN4 = <A as Cmp<B>>::Output;P5CmpN419303,582422
fn test_P5_Add_N3() {test_P5_Add_N319308,582567
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19309,582589
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19310,582645
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P219311,582691
    type P5AddN3 = <<A as Add<B>>::Output as Same<P2>>::Output;P5AddN319314,582774
fn test_P5_Sub_N3() {test_P5_Sub_N319320,582949
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19321,582971
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19322,583027
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P819323,583073
    type P5SubN3 = <<A as Sub<B>>::Output as Same<P8>>::Output;P5SubN319326,583176
fn test_P5_Mul_N3() {test_P5_Mul_N319332,583351
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19333,583373
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19334,583429
    type N15 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;N1519335,583475
    type P5MulN3 = <<A as Mul<B>>::Output as Same<N15>>::Output;P5MulN319338,583579
fn test_P5_Min_N3() {test_P5_Min_N319344,583756
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19345,583778
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19346,583834
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N319347,583880
    type P5MinN3 = <<A as Min<B>>::Output as Same<N3>>::Output;P5MinN319350,583963
fn test_P5_Max_N3() {test_P5_Max_N319356,584138
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19357,584160
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19358,584216
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519359,584262
    type P5MaxN3 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxN319362,584355
fn test_P5_Gcd_N3() {test_P5_Gcd_N319368,584530
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19369,584552
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19370,584608
    type P1 = PInt<UInt<UTerm, B1>>;P119371,584654
    type P5GcdN3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdN319374,584727
fn test_P5_Div_N3() {test_P5_Div_N319380,584902
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19381,584924
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19382,584980
    type N1 = NInt<UInt<UTerm, B1>>;N119383,585026
    type P5DivN3 = <<A as Div<B>>::Output as Same<N1>>::Output;P5DivN319386,585099
fn test_P5_Rem_N3() {test_P5_Rem_N319392,585274
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19393,585296
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19394,585352
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P219395,585398
    type P5RemN3 = <<A as Rem<B>>::Output as Same<P2>>::Output;P5RemN319398,585481
fn test_P5_Cmp_N3() {test_P5_Cmp_N319404,585656
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19405,585678
    type B = NInt<UInt<UInt<UTerm, B1>, B1>>;B19406,585734
    type P5CmpN3 = <A as Cmp<B>>::Output;P5CmpN319409,585816
fn test_P5_Add_N2() {test_P5_Add_N219414,585961
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19415,585983
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19416,586039
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P319417,586085
    type P5AddN2 = <<A as Add<B>>::Output as Same<P3>>::Output;P5AddN219420,586168
fn test_P5_Sub_N2() {test_P5_Sub_N219426,586343
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19427,586365
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19428,586421
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P719429,586467
    type P5SubN2 = <<A as Sub<B>>::Output as Same<P7>>::Output;P5SubN219432,586560
fn test_P5_Mul_N2() {test_P5_Mul_N219438,586735
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19439,586757
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19440,586813
    type N10 = NInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;N1019441,586859
    type P5MulN2 = <<A as Mul<B>>::Output as Same<N10>>::Output;P5MulN219444,586963
fn test_P5_Min_N2() {test_P5_Min_N219450,587140
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19451,587162
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19452,587218
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N219453,587264
    type P5MinN2 = <<A as Min<B>>::Output as Same<N2>>::Output;P5MinN219456,587347
fn test_P5_Max_N2() {test_P5_Max_N219462,587522
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19463,587544
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19464,587600
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519465,587646
    type P5MaxN2 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxN219468,587739
fn test_P5_Gcd_N2() {test_P5_Gcd_N219474,587914
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19475,587936
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19476,587992
    type P1 = PInt<UInt<UTerm, B1>>;P119477,588038
    type P5GcdN2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdN219480,588111
fn test_P5_Div_N2() {test_P5_Div_N219486,588286
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19487,588308
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19488,588364
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N219489,588410
    type P5DivN2 = <<A as Div<B>>::Output as Same<N2>>::Output;P5DivN219492,588493
fn test_P5_Rem_N2() {test_P5_Rem_N219498,588668
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19499,588690
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19500,588746
    type P1 = PInt<UInt<UTerm, B1>>;P119501,588792
    type P5RemN2 = <<A as Rem<B>>::Output as Same<P1>>::Output;P5RemN219504,588865
fn test_P5_Cmp_N2() {test_P5_Cmp_N219510,589040
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19511,589062
    type B = NInt<UInt<UInt<UTerm, B1>, B0>>;B19512,589118
    type P5CmpN2 = <A as Cmp<B>>::Output;P5CmpN219515,589200
fn test_P5_Add_N1() {test_P5_Add_N119520,589345
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19521,589367
    type B = NInt<UInt<UTerm, B1>>;B19522,589423
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P419523,589459
    type P5AddN1 = <<A as Add<B>>::Output as Same<P4>>::Output;P5AddN119526,589552
fn test_P5_Sub_N1() {test_P5_Sub_N119532,589727
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19533,589749
    type B = NInt<UInt<UTerm, B1>>;B19534,589805
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P619535,589841
    type P5SubN1 = <<A as Sub<B>>::Output as Same<P6>>::Output;P5SubN119538,589934
fn test_P5_Mul_N1() {test_P5_Mul_N119544,590109
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19545,590131
    type B = NInt<UInt<UTerm, B1>>;B19546,590187
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N519547,590223
    type P5MulN1 = <<A as Mul<B>>::Output as Same<N5>>::Output;P5MulN119550,590316
fn test_P5_Min_N1() {test_P5_Min_N119556,590491
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19557,590513
    type B = NInt<UInt<UTerm, B1>>;B19558,590569
    type N1 = NInt<UInt<UTerm, B1>>;N119559,590605
    type P5MinN1 = <<A as Min<B>>::Output as Same<N1>>::Output;P5MinN119562,590678
fn test_P5_Max_N1() {test_P5_Max_N119568,590853
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19569,590875
    type B = NInt<UInt<UTerm, B1>>;B19570,590931
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519571,590967
    type P5MaxN1 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxN119574,591060
fn test_P5_Gcd_N1() {test_P5_Gcd_N119580,591235
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19581,591257
    type B = NInt<UInt<UTerm, B1>>;B19582,591313
    type P1 = PInt<UInt<UTerm, B1>>;P119583,591349
    type P5GcdN1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdN119586,591422
fn test_P5_Div_N1() {test_P5_Div_N119592,591597
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19593,591619
    type B = NInt<UInt<UTerm, B1>>;B19594,591675
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N519595,591711
    type P5DivN1 = <<A as Div<B>>::Output as Same<N5>>::Output;P5DivN119598,591804
fn test_P5_Rem_N1() {test_P5_Rem_N119604,591979
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19605,592001
    type B = NInt<UInt<UTerm, B1>>;B19606,592057
    type _0 = Z0;_019607,592093
    type P5RemN1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P5RemN119610,592147
fn test_P5_PartialDiv_N1() {test_P5_PartialDiv_N119616,592322
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19617,592351
    type B = NInt<UInt<UTerm, B1>>;B19618,592407
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N519619,592443
    type P5PartialDivN1 = <<A as PartialDiv<B>>::Output as Same<N5>>::Output;P5PartialDivN119622,592536
fn test_P5_Cmp_N1() {test_P5_Cmp_N119628,592732
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19629,592754
    type B = NInt<UInt<UTerm, B1>>;B19630,592810
    type P5CmpN1 = <A as Cmp<B>>::Output;P5CmpN119633,592882
fn test_P5_Add__0() {test_P5_Add__019638,593027
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19639,593049
    type B = Z0;B19640,593105
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519641,593122
    type P5Add_0 = <<A as Add<B>>::Output as Same<P5>>::Output;P5Add_019644,593215
fn test_P5_Sub__0() {test_P5_Sub__019650,593390
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19651,593412
    type B = Z0;B19652,593468
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519653,593485
    type P5Sub_0 = <<A as Sub<B>>::Output as Same<P5>>::Output;P5Sub_019656,593578
fn test_P5_Mul__0() {test_P5_Mul__019662,593753
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19663,593775
    type B = Z0;B19664,593831
    type _0 = Z0;_019665,593848
    type P5Mul_0 = <<A as Mul<B>>::Output as Same<_0>>::Output;P5Mul_019668,593902
fn test_P5_Min__0() {test_P5_Min__019674,594077
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19675,594099
    type B = Z0;B19676,594155
    type _0 = Z0;_019677,594172
    type P5Min_0 = <<A as Min<B>>::Output as Same<_0>>::Output;P5Min_019680,594226
fn test_P5_Max__0() {test_P5_Max__019686,594401
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19687,594423
    type B = Z0;B19688,594479
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519689,594496
    type P5Max_0 = <<A as Max<B>>::Output as Same<P5>>::Output;P5Max_019692,594589
fn test_P5_Gcd__0() {test_P5_Gcd__019698,594764
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19699,594786
    type B = Z0;B19700,594842
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519701,594859
    type P5Gcd_0 = <<A as Gcd<B>>::Output as Same<P5>>::Output;P5Gcd_019704,594952
fn test_P5_Pow__0() {test_P5_Pow__019710,595127
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19711,595149
    type B = Z0;B19712,595205
    type P1 = PInt<UInt<UTerm, B1>>;P119713,595222
    type P5Pow_0 = <<A as Pow<B>>::Output as Same<P1>>::Output;P5Pow_019716,595295
fn test_P5_Cmp__0() {test_P5_Cmp__019722,595470
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19723,595492
    type B = Z0;B19724,595548
    type P5Cmp_0 = <A as Cmp<B>>::Output;P5Cmp_019727,595601
fn test_P5_Add_P1() {test_P5_Add_P119732,595746
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19733,595768
    type B = PInt<UInt<UTerm, B1>>;B19734,595824
    type P6 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>>;P619735,595860
    type P5AddP1 = <<A as Add<B>>::Output as Same<P6>>::Output;P5AddP119738,595953
fn test_P5_Sub_P1() {test_P5_Sub_P119744,596128
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19745,596150
    type B = PInt<UInt<UTerm, B1>>;B19746,596206
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P419747,596242
    type P5SubP1 = <<A as Sub<B>>::Output as Same<P4>>::Output;P5SubP119750,596335
fn test_P5_Mul_P1() {test_P5_Mul_P119756,596510
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19757,596532
    type B = PInt<UInt<UTerm, B1>>;B19758,596588
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519759,596624
    type P5MulP1 = <<A as Mul<B>>::Output as Same<P5>>::Output;P5MulP119762,596717
fn test_P5_Min_P1() {test_P5_Min_P119768,596892
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19769,596914
    type B = PInt<UInt<UTerm, B1>>;B19770,596970
    type P1 = PInt<UInt<UTerm, B1>>;P119771,597006
    type P5MinP1 = <<A as Min<B>>::Output as Same<P1>>::Output;P5MinP119774,597079
fn test_P5_Max_P1() {test_P5_Max_P119780,597254
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19781,597276
    type B = PInt<UInt<UTerm, B1>>;B19782,597332
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519783,597368
    type P5MaxP1 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxP119786,597461
fn test_P5_Gcd_P1() {test_P5_Gcd_P119792,597636
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19793,597658
    type B = PInt<UInt<UTerm, B1>>;B19794,597714
    type P1 = PInt<UInt<UTerm, B1>>;P119795,597750
    type P5GcdP1 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdP119798,597823
fn test_P5_Div_P1() {test_P5_Div_P119804,597998
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19805,598020
    type B = PInt<UInt<UTerm, B1>>;B19806,598076
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519807,598112
    type P5DivP1 = <<A as Div<B>>::Output as Same<P5>>::Output;P5DivP119810,598205
fn test_P5_Rem_P1() {test_P5_Rem_P119816,598380
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19817,598402
    type B = PInt<UInt<UTerm, B1>>;B19818,598458
    type _0 = Z0;_019819,598494
    type P5RemP1 = <<A as Rem<B>>::Output as Same<_0>>::Output;P5RemP119822,598548
fn test_P5_PartialDiv_P1() {test_P5_PartialDiv_P119828,598723
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19829,598752
    type B = PInt<UInt<UTerm, B1>>;B19830,598808
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519831,598844
    type P5PartialDivP1 = <<A as PartialDiv<B>>::Output as Same<P5>>::Output;P5PartialDivP119834,598937
fn test_P5_Pow_P1() {test_P5_Pow_P119840,599133
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19841,599155
    type B = PInt<UInt<UTerm, B1>>;B19842,599211
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519843,599247
    type P5PowP1 = <<A as Pow<B>>::Output as Same<P5>>::Output;P5PowP119846,599340
fn test_P5_Cmp_P1() {test_P5_Cmp_P119852,599515
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19853,599537
    type B = PInt<UInt<UTerm, B1>>;B19854,599593
    type P5CmpP1 = <A as Cmp<B>>::Output;P5CmpP119857,599665
fn test_P5_Add_P2() {test_P5_Add_P219862,599810
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19863,599832
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19864,599888
    type P7 = PInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>>;P719865,599934
    type P5AddP2 = <<A as Add<B>>::Output as Same<P7>>::Output;P5AddP219868,600027
fn test_P5_Sub_P2() {test_P5_Sub_P219874,600202
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19875,600224
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19876,600280
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P319877,600326
    type P5SubP2 = <<A as Sub<B>>::Output as Same<P3>>::Output;P5SubP219880,600409
fn test_P5_Mul_P2() {test_P5_Mul_P219886,600584
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19887,600606
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19888,600662
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;P1019889,600708
    type P5MulP2 = <<A as Mul<B>>::Output as Same<P10>>::Output;P5MulP219892,600812
fn test_P5_Min_P2() {test_P5_Min_P219898,600989
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19899,601011
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19900,601067
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P219901,601113
    type P5MinP2 = <<A as Min<B>>::Output as Same<P2>>::Output;P5MinP219904,601196
fn test_P5_Max_P2() {test_P5_Max_P219910,601371
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19911,601393
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19912,601449
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P519913,601495
    type P5MaxP2 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxP219916,601588
fn test_P5_Gcd_P2() {test_P5_Gcd_P219922,601763
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19923,601785
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19924,601841
    type P1 = PInt<UInt<UTerm, B1>>;P119925,601887
    type P5GcdP2 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdP219928,601960
fn test_P5_Div_P2() {test_P5_Div_P219934,602135
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19935,602157
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19936,602213
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P219937,602259
    type P5DivP2 = <<A as Div<B>>::Output as Same<P2>>::Output;P5DivP219940,602342
fn test_P5_Rem_P2() {test_P5_Rem_P219946,602517
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19947,602539
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19948,602595
    type P1 = PInt<UInt<UTerm, B1>>;P119949,602641
    type P5RemP2 = <<A as Rem<B>>::Output as Same<P1>>::Output;P5RemP219952,602714
fn test_P5_Pow_P2() {test_P5_Pow_P219958,602889
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19959,602911
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19960,602967
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;P2519961,603013
    type P5PowP2 = <<A as Pow<B>>::Output as Same<P25>>::Output;P5PowP219964,603127
fn test_P5_Cmp_P2() {test_P5_Cmp_P219970,603304
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19971,603326
    type B = PInt<UInt<UInt<UTerm, B1>, B0>>;B19972,603382
    type P5CmpP2 = <A as Cmp<B>>::Output;P5CmpP219975,603464
fn test_P5_Add_P3() {test_P5_Add_P319980,603609
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19981,603631
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B19982,603687
    type P8 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B0>>;P819983,603733
    type P5AddP3 = <<A as Add<B>>::Output as Same<P8>>::Output;P5AddP319986,603836
fn test_P5_Sub_P3() {test_P5_Sub_P319992,604011
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A19993,604033
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B19994,604089
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P219995,604135
    type P5SubP3 = <<A as Sub<B>>::Output as Same<P2>>::Output;P5SubP319998,604218
fn test_P5_Mul_P3() {test_P5_Mul_P320004,604393
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20005,604415
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20006,604471
    type P15 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>>;P1520007,604517
    type P5MulP3 = <<A as Mul<B>>::Output as Same<P15>>::Output;P5MulP320010,604621
fn test_P5_Min_P3() {test_P5_Min_P320016,604798
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20017,604820
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20018,604876
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P320019,604922
    type P5MinP3 = <<A as Min<B>>::Output as Same<P3>>::Output;P5MinP320022,605005
fn test_P5_Max_P3() {test_P5_Max_P320028,605180
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20029,605202
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20030,605258
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520031,605304
    type P5MaxP3 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxP320034,605397
fn test_P5_Gcd_P3() {test_P5_Gcd_P320040,605572
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20041,605594
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20042,605650
    type P1 = PInt<UInt<UTerm, B1>>;P120043,605696
    type P5GcdP3 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdP320046,605769
fn test_P5_Div_P3() {test_P5_Div_P320052,605944
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20053,605966
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20054,606022
    type P1 = PInt<UInt<UTerm, B1>>;P120055,606068
    type P5DivP3 = <<A as Div<B>>::Output as Same<P1>>::Output;P5DivP320058,606141
fn test_P5_Rem_P3() {test_P5_Rem_P320064,606316
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20065,606338
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20066,606394
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P220067,606440
    type P5RemP3 = <<A as Rem<B>>::Output as Same<P2>>::Output;P5RemP320070,606523
fn test_P5_Pow_P3() {test_P5_Pow_P320076,606698
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20077,606720
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20078,606776
    type P125 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B1>, B1>, B1>, B0>, B1>P12520079,606822
    type P5PowP3 = <<A as Pow<B>>::Output as Same<P125>>::Output;P5PowP320082,606957
fn test_P5_Cmp_P3() {test_P5_Cmp_P320088,607136
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20089,607158
    type B = PInt<UInt<UInt<UTerm, B1>, B1>>;B20090,607214
    type P5CmpP3 = <A as Cmp<B>>::Output;P5CmpP320093,607296
fn test_P5_Add_P4() {test_P5_Add_P420098,607441
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20099,607463
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20100,607519
    type P9 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>>;P920101,607575
    type P5AddP4 = <<A as Add<B>>::Output as Same<P9>>::Output;P5AddP420104,607678
fn test_P5_Sub_P4() {test_P5_Sub_P420110,607853
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20111,607875
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20112,607931
    type P1 = PInt<UInt<UTerm, B1>>;P120113,607987
    type P5SubP4 = <<A as Sub<B>>::Output as Same<P1>>::Output;P5SubP420116,608060
fn test_P5_Mul_P4() {test_P5_Mul_P420122,608235
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20123,608257
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20124,608313
    type P20 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>, B0>>;P2020125,608369
    type P5MulP4 = <<A as Mul<B>>::Output as Same<P20>>::Output;P5MulP420128,608483
fn test_P5_Min_P4() {test_P5_Min_P420134,608660
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20135,608682
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20136,608738
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P420137,608794
    type P5MinP4 = <<A as Min<B>>::Output as Same<P4>>::Output;P5MinP420140,608887
fn test_P5_Max_P4() {test_P5_Max_P420146,609062
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20147,609084
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20148,609140
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520149,609196
    type P5MaxP4 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxP420152,609289
fn test_P5_Gcd_P4() {test_P5_Gcd_P420158,609464
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20159,609486
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20160,609542
    type P1 = PInt<UInt<UTerm, B1>>;P120161,609598
    type P5GcdP4 = <<A as Gcd<B>>::Output as Same<P1>>::Output;P5GcdP420164,609671
fn test_P5_Div_P4() {test_P5_Div_P420170,609846
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20171,609868
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20172,609924
    type P1 = PInt<UInt<UTerm, B1>>;P120173,609980
    type P5DivP4 = <<A as Div<B>>::Output as Same<P1>>::Output;P5DivP420176,610053
fn test_P5_Rem_P4() {test_P5_Rem_P420182,610228
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20183,610250
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20184,610306
    type P1 = PInt<UInt<UTerm, B1>>;P120185,610362
    type P5RemP4 = <<A as Rem<B>>::Output as Same<P1>>::Output;P5RemP420188,610435
fn test_P5_Pow_P4() {test_P5_Pow_P420194,610610
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20195,610632
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20196,610688
    type P625 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>, B1>P62520197,610744
    type P5PowP4 = <<A as Pow<B>>::Output as Same<P625>>::Output;P5PowP420200,610909
fn test_P5_Cmp_P4() {test_P5_Cmp_P420206,611088
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20207,611110
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;B20208,611166
    type P5CmpP4 = <A as Cmp<B>>::Output;P5CmpP420211,611258
fn test_P5_Add_P5() {test_P5_Add_P520216,611403
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20217,611425
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20218,611481
    type P10 = PInt<UInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>, B0>>;P1020219,611537
    type P5AddP5 = <<A as Add<B>>::Output as Same<P10>>::Output;P5AddP520222,611641
fn test_P5_Sub_P5() {test_P5_Sub_P520228,611818
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20229,611840
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20230,611896
    type _0 = Z0;_020231,611952
    type P5SubP5 = <<A as Sub<B>>::Output as Same<_0>>::Output;P5SubP520234,612006
fn test_P5_Mul_P5() {test_P5_Mul_P520240,612181
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20241,612203
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20242,612259
    type P25 = PInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1>, B0>, B0>, B1>>;P2520243,612315
    type P5MulP5 = <<A as Mul<B>>::Output as Same<P25>>::Output;P5MulP520246,612429
fn test_P5_Min_P5() {test_P5_Min_P520252,612606
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20253,612628
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20254,612684
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520255,612740
    type P5MinP5 = <<A as Min<B>>::Output as Same<P5>>::Output;P5MinP520258,612833
fn test_P5_Max_P5() {test_P5_Max_P520264,613008
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20265,613030
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20266,613086
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520267,613142
    type P5MaxP5 = <<A as Max<B>>::Output as Same<P5>>::Output;P5MaxP520270,613235
fn test_P5_Gcd_P5() {test_P5_Gcd_P520276,613410
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20277,613432
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20278,613488
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520279,613544
    type P5GcdP5 = <<A as Gcd<B>>::Output as Same<P5>>::Output;P5GcdP520282,613637
fn test_P5_Div_P5() {test_P5_Div_P520288,613812
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20289,613834
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20290,613890
    type P1 = PInt<UInt<UTerm, B1>>;P120291,613946
    type P5DivP5 = <<A as Div<B>>::Output as Same<P1>>::Output;P5DivP520294,614019
fn test_P5_Rem_P5() {test_P5_Rem_P520300,614194
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20301,614216
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20302,614272
    type _0 = Z0;_020303,614328
    type P5RemP5 = <<A as Rem<B>>::Output as Same<_0>>::Output;P5RemP520306,614382
fn test_P5_PartialDiv_P5() {test_P5_PartialDiv_P520312,614557
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20313,614586
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20314,614642
    type P1 = PInt<UInt<UTerm, B1>>;P120315,614698
    type P5PartialDivP5 = <<A as PartialDiv<B>>::Output as Same<P1>>::Output;P5PartialDivP520318,614771
fn test_P5_Pow_P5() {test_P5_Pow_P520324,614967
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20325,614989
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20326,615045
    type P3125 = PInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UInt<UTerm, B1>, B1P312520327,615101
    type P5PowP5 = <<A as Pow<B>>::Output as Same<P3125>>::Output;P5PowP520330,615287
fn test_P5_Cmp_P5() {test_P5_Cmp_P520336,615468
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20337,615490
    type B = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;B20338,615546
    type P5CmpP5 = <A as Cmp<B>>::Output;P5CmpP520341,615638
fn test_N5_Neg() {test_N5_Neg20346,615781
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20347,615800
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520348,615856
    type NegN5 = <<A as Neg>::Output as Same<P5>>::Output;NegN520351,615949
fn test_N5_Abs() {test_N5_Abs20356,616116
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20357,616135
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520358,616191
    type AbsN5 = <<A as Abs>::Output as Same<P5>>::Output;AbsN520361,616284
fn test_N4_Neg() {test_N4_Neg20366,616451
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A20367,616470
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P420368,616526
    type NegN4 = <<A as Neg>::Output as Same<P4>>::Output;NegN420371,616619
fn test_N4_Abs() {test_N4_Abs20376,616786
    type A = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A20377,616805
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P420378,616861
    type AbsN4 = <<A as Abs>::Output as Same<P4>>::Output;AbsN420381,616954
fn test_N3_Neg() {test_N3_Neg20386,617121
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A20387,617140
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P320388,617186
    type NegN3 = <<A as Neg>::Output as Same<P3>>::Output;NegN320391,617269
fn test_N3_Abs() {test_N3_Abs20396,617436
    type A = NInt<UInt<UInt<UTerm, B1>, B1>>;A20397,617455
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P320398,617501
    type AbsN3 = <<A as Abs>::Output as Same<P3>>::Output;AbsN320401,617584
fn test_N2_Neg() {test_N2_Neg20406,617751
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A20407,617770
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P220408,617816
    type NegN2 = <<A as Neg>::Output as Same<P2>>::Output;NegN220411,617899
fn test_N2_Abs() {test_N2_Abs20416,618066
    type A = NInt<UInt<UInt<UTerm, B1>, B0>>;A20417,618085
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P220418,618131
    type AbsN2 = <<A as Abs>::Output as Same<P2>>::Output;AbsN220421,618214
fn test_N1_Neg() {test_N1_Neg20426,618381
    type A = NInt<UInt<UTerm, B1>>;A20427,618400
    type P1 = PInt<UInt<UTerm, B1>>;P120428,618436
    type NegN1 = <<A as Neg>::Output as Same<P1>>::Output;NegN120431,618509
fn test_N1_Abs() {test_N1_Abs20436,618676
    type A = NInt<UInt<UTerm, B1>>;A20437,618695
    type P1 = PInt<UInt<UTerm, B1>>;P120438,618731
    type AbsN1 = <<A as Abs>::Output as Same<P1>>::Output;AbsN120441,618804
fn test__0_Neg() {test__0_Neg20446,618971
    type A = Z0;A20447,618990
    type _0 = Z0;_020448,619007
    type Neg_0 = <<A as Neg>::Output as Same<_0>>::Output;Neg_020451,619061
fn test__0_Abs() {test__0_Abs20456,619228
    type A = Z0;A20457,619247
    type _0 = Z0;_020458,619264
    type Abs_0 = <<A as Abs>::Output as Same<_0>>::Output;Abs_020461,619318
fn test_P1_Neg() {test_P1_Neg20466,619485
    type A = PInt<UInt<UTerm, B1>>;A20467,619504
    type N1 = NInt<UInt<UTerm, B1>>;N120468,619540
    type NegP1 = <<A as Neg>::Output as Same<N1>>::Output;NegP120471,619613
fn test_P1_Abs() {test_P1_Abs20476,619780
    type A = PInt<UInt<UTerm, B1>>;A20477,619799
    type P1 = PInt<UInt<UTerm, B1>>;P120478,619835
    type AbsP1 = <<A as Abs>::Output as Same<P1>>::Output;AbsP120481,619908
fn test_P2_Neg() {test_P2_Neg20486,620075
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A20487,620094
    type N2 = NInt<UInt<UInt<UTerm, B1>, B0>>;N220488,620140
    type NegP2 = <<A as Neg>::Output as Same<N2>>::Output;NegP220491,620223
fn test_P2_Abs() {test_P2_Abs20496,620390
    type A = PInt<UInt<UInt<UTerm, B1>, B0>>;A20497,620409
    type P2 = PInt<UInt<UInt<UTerm, B1>, B0>>;P220498,620455
    type AbsP2 = <<A as Abs>::Output as Same<P2>>::Output;AbsP220501,620538
fn test_P3_Neg() {test_P3_Neg20506,620705
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A20507,620724
    type N3 = NInt<UInt<UInt<UTerm, B1>, B1>>;N320508,620770
    type NegP3 = <<A as Neg>::Output as Same<N3>>::Output;NegP320511,620853
fn test_P3_Abs() {test_P3_Abs20516,621020
    type A = PInt<UInt<UInt<UTerm, B1>, B1>>;A20517,621039
    type P3 = PInt<UInt<UInt<UTerm, B1>, B1>>;P320518,621085
    type AbsP3 = <<A as Abs>::Output as Same<P3>>::Output;AbsP320521,621168
fn test_P4_Neg() {test_P4_Neg20526,621335
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A20527,621354
    type N4 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;N420528,621410
    type NegP4 = <<A as Neg>::Output as Same<N4>>::Output;NegP420531,621503
fn test_P4_Abs() {test_P4_Abs20536,621670
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;A20537,621689
    type P4 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B0>>;P420538,621745
    type AbsP4 = <<A as Abs>::Output as Same<P4>>::Output;AbsP420541,621838
fn test_P5_Neg() {test_P5_Neg20546,622005
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20547,622024
    type N5 = NInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;N520548,622080
    type NegP5 = <<A as Neg>::Output as Same<N5>>::Output;NegP520551,622173
fn test_P5_Abs() {test_P5_Abs20556,622340
    type A = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;A20557,622359
    type P5 = PInt<UInt<UInt<UInt<UTerm, B1>, B0>, B1>>;P520558,622415
    type AbsP5 = <<A as Abs>::Output as Same<P5>>::Output;AbsP520561,622508

target/debug/build/mime_guess-708365a32823311b/out/mime_types_generated.rs,328
static REV_MAPPINGS: &'static [(UniCase<&'static str>, TopLevelExts)] = &[(UniCase::ascii("appliREV_MAPPINGS1,0
static REV_MAPPINGS: &'static [(UniCase<&'static str>, TopLevelExts)] = &[(UniCase::ascii("applistr1,0
const EXTS: &'static [&'static str] = &["dwg", "ez", "anx", "aw", "atom", "atomcat", "atomsvc", str2,45652

target/debug/build/mime_guess-978074c458a074c9/out/mime_types_generated.rs,328
static REV_MAPPINGS: &'static [(UniCase<&'static str>, TopLevelExts)] = &[(UniCase::ascii("appliREV_MAPPINGS1,0
static REV_MAPPINGS: &'static [(UniCase<&'static str>, TopLevelExts)] = &[(UniCase::ascii("applistr1,0
const EXTS: &'static [&'static str] = &["dwg", "ez", "anx", "aw", "atom", "atomcat", "atomsvc", str2,45652

target/debug/build/pq-sys-ab8d18ae04da98fc/out/bindings.rs,21032
pub type Oid = ::std::os::raw::c_uint;Oid40,1647
pub type pg_int64 = ::std::os::raw::c_long;pg_int6441,1686
pub enum ConnStatusType {ConnStatusType44,1794
    CONNECTION_OK = 0,CONNECTION_OK45,1820
    CONNECTION_BAD = 1,CONNECTION_BAD46,1843
    CONNECTION_STARTED = 2,CONNECTION_STARTED47,1867
    CONNECTION_MADE = 3,CONNECTION_MADE48,1895
    CONNECTION_AWAITING_RESPONSE = 4,CONNECTION_AWAITING_RESPONSE49,1920
    CONNECTION_AUTH_OK = 5,CONNECTION_AUTH_OK50,1958
    CONNECTION_SETENV = 6,CONNECTION_SETENV51,1986
    CONNECTION_SSL_STARTUP = 7,CONNECTION_SSL_STARTUP52,2013
    CONNECTION_NEEDED = 8,CONNECTION_NEEDED53,2045
    CONNECTION_CHECK_WRITABLE = 9,CONNECTION_CHECK_WRITABLE54,2072
    CONNECTION_CONSUME = 10,CONNECTION_CONSUME55,2107
    CONNECTION_GSS_STARTUP = 11,CONNECTION_GSS_STARTUP56,2136
    CONNECTION_CHECK_TARGET = 12,CONNECTION_CHECK_TARGET57,2169
    CONNECTION_CHECK_STANDBY = 13,CONNECTION_CHECK_STANDBY58,2203
    CONNECTION_ALLOCATED = 14,CONNECTION_ALLOCATED59,2238
pub enum PostgresPollingStatusType {PostgresPollingStatusType63,2335
    PGRES_POLLING_FAILED = 0,PGRES_POLLING_FAILED64,2372
    PGRES_POLLING_READING = 1,PGRES_POLLING_READING65,2402
    PGRES_POLLING_WRITING = 2,PGRES_POLLING_WRITING66,2433
    PGRES_POLLING_OK = 3,PGRES_POLLING_OK67,2464
    PGRES_POLLING_ACTIVE = 4,PGRES_POLLING_ACTIVE68,2490
pub enum ExecStatusType {ExecStatusType72,2586
    PGRES_EMPTY_QUERY = 0,PGRES_EMPTY_QUERY73,2612
    PGRES_COMMAND_OK = 1,PGRES_COMMAND_OK74,2639
    PGRES_TUPLES_OK = 2,PGRES_TUPLES_OK75,2665
    PGRES_COPY_OUT = 3,PGRES_COPY_OUT76,2690
    PGRES_COPY_IN = 4,PGRES_COPY_IN77,2714
    PGRES_BAD_RESPONSE = 5,PGRES_BAD_RESPONSE78,2737
    PGRES_NONFATAL_ERROR = 6,PGRES_NONFATAL_ERROR79,2765
    PGRES_FATAL_ERROR = 7,PGRES_FATAL_ERROR80,2795
    PGRES_COPY_BOTH = 8,PGRES_COPY_BOTH81,2822
    PGRES_SINGLE_TUPLE = 9,PGRES_SINGLE_TUPLE82,2847
    PGRES_PIPELINE_SYNC = 10,PGRES_PIPELINE_SYNC83,2875
    PGRES_PIPELINE_ABORTED = 11,PGRES_PIPELINE_ABORTED84,2905
    PGRES_TUPLES_CHUNK = 12,PGRES_TUPLES_CHUNK85,2938
pub enum PGTransactionStatusType {PGTransactionStatusType89,3033
    PQTRANS_IDLE = 0,PQTRANS_IDLE90,3068
    PQTRANS_ACTIVE = 1,PQTRANS_ACTIVE91,3090
    PQTRANS_INTRANS = 2,PQTRANS_INTRANS92,3114
    PQTRANS_INERROR = 3,PQTRANS_INERROR93,3139
    PQTRANS_UNKNOWN = 4,PQTRANS_UNKNOWN94,3164
pub enum PGVerbosity {PGVerbosity98,3255
    PQERRORS_TERSE = 0,PQERRORS_TERSE99,3278
    PQERRORS_DEFAULT = 1,PQERRORS_DEFAULT100,3302
    PQERRORS_VERBOSE = 2,PQERRORS_VERBOSE101,3328
    PQERRORS_SQLSTATE = 3,PQERRORS_SQLSTATE102,3354
pub enum PGContextVisibility {PGContextVisibility106,3447
    PQSHOW_CONTEXT_NEVER = 0,PQSHOW_CONTEXT_NEVER107,3478
    PQSHOW_CONTEXT_ERRORS = 1,PQSHOW_CONTEXT_ERRORS108,3508
    PQSHOW_CONTEXT_ALWAYS = 2,PQSHOW_CONTEXT_ALWAYS109,3539
pub enum PGPing {PGPing113,3636
    PQPING_OK = 0,PQPING_OK114,3654
    PQPING_REJECT = 1,PQPING_REJECT115,3673
    PQPING_NO_RESPONSE = 2,PQPING_NO_RESPONSE116,3696
    PQPING_NO_ATTEMPT = 3,PQPING_NO_ATTEMPT117,3724
pub enum PGpipelineStatus {PGpipelineStatus121,3817
    PQ_PIPELINE_OFF = 0,PQ_PIPELINE_OFF122,3845
    PQ_PIPELINE_ON = 1,PQ_PIPELINE_ON123,3870
    PQ_PIPELINE_ABORTED = 2,PQ_PIPELINE_ABORTED124,3894
pub struct pg_conn {pg_conn128,3966
    _unused: [u8; 0],_unused129,3987
pub type PGconn = pg_conn;PGconn131,4011
pub struct pg_cancel_conn {pg_cancel_conn134,4079
    _unused: [u8; 0],_unused135,4107
pub type PGcancelConn = pg_cancel_conn;PGcancelConn137,4131
pub struct pg_result {pg_result140,4212
    _unused: [u8; 0],_unused141,4235
pub type PGresult = pg_result;PGresult143,4259
pub struct pg_cancel {pg_cancel146,4331
    _unused: [u8; 0],_unused147,4354
pub type PGcancel = pg_cancel;PGcancel149,4378
pub struct pgNotify {pgNotify152,4450
    pub relname: *mut ::std::os::raw::c_char,relname153,4472
    pub be_pid: ::std::os::raw::c_int,be_pid154,4518
    pub extra: *mut ::std::os::raw::c_char,extra155,4557
    pub next: *mut pgNotify,next156,4601
pub type PGnotify = pgNotify;PGnotify167,5233
pub type pg_usec_time_t = pg_int64;pg_usec_time_t168,5263
pub type PQnoticeReceiver = ::std::option::Option<PQnoticeReceiver169,5299
pub type PQnoticeProcessor = ::std::option::Option<PQnoticeProcessor172,5435
pub type pqbool = ::std::os::raw::c_char;pqbool175,5590
pub struct _PQprintOpt {_PQprintOpt178,5673
    pub header: pqbool,header179,5698
    pub align: pqbool,align180,5722
    pub standard: pqbool,standard181,5745
    pub html3: pqbool,html3182,5771
    pub expanded: pqbool,expanded183,5794
    pub pager: pqbool,pager184,5820
    pub fieldSep: *mut ::std::os::raw::c_char,fieldSep185,5843
    pub tableOpt: *mut ::std::os::raw::c_char,tableOpt186,5890
    pub caption: *mut ::std::os::raw::c_char,caption187,5937
    pub fieldName: *mut *mut ::std::os::raw::c_char,fieldName188,5983
pub type PQprintOpt = _PQprintOpt;PQprintOpt211,7352
pub struct _PQconninfoOption {_PQconninfoOption214,7428
    pub keyword: *mut ::std::os::raw::c_char,keyword215,7459
    pub envvar: *mut ::std::os::raw::c_char,envvar216,7505
    pub compiled: *mut ::std::os::raw::c_char,compiled217,7550
    pub val: *mut ::std::os::raw::c_char,val218,7597
    pub label: *mut ::std::os::raw::c_char,label219,7639
    pub dispchar: *mut ::std::os::raw::c_char,dispchar220,7683
    pub dispsize: ::std::os::raw::c_int,dispsize221,7730
pub type PQconninfoOption = _PQconninfoOption;PQconninfoOption242,8894
pub struct PQArgBlock {PQArgBlock245,8975
    pub len: ::std::os::raw::c_int,len246,8999
    pub isint: ::std::os::raw::c_int,isint247,9035
    pub u: PQArgBlock__bindgen_ty_1,u248,9073
pub struct pgresAttDesc {pgresAttDesc277,10392
    pub name: *mut ::std::os::raw::c_char,name278,10418
    pub tableid: Oid,tableid279,10461
    pub columnid: ::std::os::raw::c_int,columnid280,10483
    pub format: ::std::os::raw::c_int,format281,10524
    pub typid: Oid,typid282,10563
    pub typlen: ::std::os::raw::c_int,typlen283,10583
    pub atttypmod: ::std::os::raw::c_int,atttypmod284,10622
pub type PGresAttDesc = pgresAttDesc;PGresAttDesc303,11679
    pub fn PQconnectStart(conninfo: *const ::std::os::raw::c_char) -> *mut PGconn;PQconnectStart305,11737
    pub fn PQconnectStartParams(PQconnectStartParams308,11842
    pub fn PQconnectPoll(conn: *mut PGconn) -> PostgresPollingStatusType;PQconnectPoll315,12075
    pub fn PQconnectdb(conninfo: *const ::std::os::raw::c_char) -> *mut PGconn;PQconnectdb318,12171
    pub fn PQconnectdbParams(PQconnectdbParams321,12273
    pub fn PQsetdbLogin(PQsetdbLogin328,12503
    pub fn PQfinish(conn: *mut PGconn);PQfinish339,12899
    pub fn PQconndefaults() -> *mut PQconninfoOption;PQconndefaults342,12961
    pub fn PQconninfoParse(PQconninfoParse345,13037
    pub fn PQconninfo(conn: *mut PGconn) -> *mut PQconninfoOption;PQconninfo351,13218
    pub fn PQconninfoFree(connOptions: *mut PQconninfoOption);PQconninfoFree354,13307
    pub fn PQresetStart(conn: *mut PGconn) -> ::std::os::raw::c_int;PQresetStart357,13392
    pub fn PQresetPoll(conn: *mut PGconn) -> PostgresPollingStatusType;PQresetPoll360,13483
    pub fn PQreset(conn: *mut PGconn);PQreset363,13577
    pub fn PQcancelCreate(conn: *mut PGconn) -> *mut PGcancelConn;PQcancelCreate366,13638
    pub fn PQcancelStart(cancelConn: *mut PGcancelConn) -> ::std::os::raw::c_int;PQcancelStart369,13727
    pub fn PQcancelBlocking(cancelConn: *mut PGcancelConn) -> ::std::os::raw::c_int;PQcancelBlocking372,13831
    pub fn PQcancelPoll(cancelConn: *mut PGcancelConn) -> PostgresPollingStatusType;PQcancelPoll375,13938
    pub fn PQcancelStatus(cancelConn: *const PGcancelConn) -> ConnStatusType;PQcancelStatus378,14045
    pub fn PQcancelSocket(cancelConn: *const PGcancelConn) -> ::std::os::raw::c_int;PQcancelSocket381,14145
    pub fn PQcancelErrorMessage(cancelConn: *const PGcancelConn) -> *mut ::std::os::raw::c_char;PQcancelErrorMessage384,14252
    pub fn PQcancelReset(cancelConn: *mut PGcancelConn);PQcancelReset387,14371
    pub fn PQcancelFinish(cancelConn: *mut PGcancelConn);PQcancelFinish390,14450
    pub fn PQgetCancel(conn: *mut PGconn) -> *mut PGcancel;PQgetCancel393,14530
    pub fn PQfreeCancel(cancel: *mut PGcancel);PQfreeCancel396,14612
    pub fn PQcancel(PQcancel399,14682
    pub fn PQrequestCancel(conn: *mut PGconn) -> ::std::os::raw::c_int;PQrequestCancel406,14876
    pub fn PQdb(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQdb409,14970
    pub fn PQuser(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQuser412,15061
    pub fn PQpass(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQpass415,15154
    pub fn PQhost(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQhost418,15247
    pub fn PQhostaddr(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQhostaddr421,15340
    pub fn PQport(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQport424,15437
    pub fn PQtty(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQtty427,15530
    pub fn PQoptions(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQoptions430,15622
    pub fn PQstatus(conn: *const PGconn) -> ConnStatusType;PQstatus433,15718
    pub fn PQtransactionStatus(conn: *const PGconn) -> PGTransactionStatusType;PQtransactionStatus436,15800
    pub fn PQparameterStatus(PQparameterStatus439,15902
    pub fn PQprotocolVersion(conn: *const PGconn) -> ::std::os::raw::c_int;PQprotocolVersion445,16073
    pub fn PQserverVersion(conn: *const PGconn) -> ::std::os::raw::c_int;PQserverVersion448,16171
    pub fn PQerrorMessage(conn: *const PGconn) -> *mut ::std::os::raw::c_char;PQerrorMessage451,16267
    pub fn PQsocket(conn: *const PGconn) -> ::std::os::raw::c_int;PQsocket454,16368
    pub fn PQbackendPID(conn: *const PGconn) -> ::std::os::raw::c_int;PQbackendPID457,16457
    pub fn PQpipelineStatus(conn: *const PGconn) -> PGpipelineStatus;PQpipelineStatus460,16550
    pub fn PQconnectionNeedsPassword(conn: *const PGconn) -> ::std::os::raw::c_int;PQconnectionNeedsPassword463,16642
    pub fn PQconnectionUsedPassword(conn: *const PGconn) -> ::std::os::raw::c_int;PQconnectionUsedPassword466,16748
    pub fn PQconnectionUsedGSSAPI(conn: *const PGconn) -> ::std::os::raw::c_int;PQconnectionUsedGSSAPI469,16853
    pub fn PQclientEncoding(conn: *const PGconn) -> ::std::os::raw::c_int;PQclientEncoding472,16956
    pub fn PQsetClientEncoding(PQsetClientEncoding475,17053
    pub fn PQsslInUse(conn: *mut PGconn) -> ::std::os::raw::c_int;PQsslInUse481,17215
    pub fn PQsslStruct(PQsslStruct484,17304
    pub fn PQsslAttribute(PQsslAttribute490,17467
    pub fn PQsslAttributeNames(conn: *mut PGconn) -> *const *const ::std::os::raw::c_char;PQsslAttributeNames496,17638
    pub fn PQgetssl(conn: *mut PGconn) -> *mut ::std::os::raw::c_void;PQgetssl499,17751
    pub fn PQinitSSL(do_init: ::std::os::raw::c_int);PQinitSSL502,17844
    pub fn PQinitOpenSSL(do_ssl: ::std::os::raw::c_int, do_crypto: ::std::os::raw::c_int);PQinitOpenSSL505,17920
    pub fn PQgssEncInUse(conn: *mut PGconn) -> ::std::os::raw::c_int;PQgssEncInUse508,18033
    pub fn PQgetgssctx(conn: *mut PGconn) -> *mut ::std::os::raw::c_void;PQgetgssctx511,18125
    pub fn PQsetErrorVerbosity(conn: *mut PGconn, verbosity: PGVerbosity) -> PGVerbosity;PQsetErrorVerbosity514,18221
    pub fn PQsetErrorContextVisibility(PQsetErrorContextVisibility517,18333
    pub fn PQsetNoticeReceiver(PQsetNoticeReceiver523,18495
    pub fn PQsetNoticeProcessor(PQsetNoticeProcessor530,18678
pub type pgthreadlock_t =pgthreadlock_t536,18844
    pub fn PQregisterThreadLock(newhandler: pgthreadlock_t) -> pgthreadlock_t;PQregisterThreadLock539,18971
    pub fn PQtrace(conn: *mut PGconn, debug_port: *mut FILE);PQtrace542,19072
    pub fn PQuntrace(conn: *mut PGconn);PQuntrace545,19156
    pub fn PQsetTraceFlags(conn: *mut PGconn, flags: ::std::os::raw::c_int);PQsetTraceFlags548,19219
    pub fn PQexec(conn: *mut PGconn, query: *const ::std::os::raw::c_char) -> *mut PGresult;PQexec551,19318
    pub fn PQexecParams(PQexecParams554,19433
    pub fn PQprepare(PQprepare566,19859
    pub fn PQexecPrepared(PQexecPrepared575,20121
    pub fn PQsendQuery(PQsendQuery586,20518
    pub fn PQsendQueryParams(PQsendQueryParams592,20669
    pub fn PQsendPrepare(PQsendPrepare604,21108
    pub fn PQsendQueryPrepared(PQsendQueryPrepared613,21382
    pub fn PQsetSingleRowMode(conn: *mut PGconn) -> ::std::os::raw::c_int;PQsetSingleRowMode624,21792
    pub fn PQsetChunkedRowsMode(PQsetChunkedRowsMode627,21889
    pub fn PQgetResult(conn: *mut PGconn) -> *mut PGresult;PQgetResult633,22045
    pub fn PQisBusy(conn: *mut PGconn) -> ::std::os::raw::c_int;PQisBusy636,22127
    pub fn PQconsumeInput(conn: *mut PGconn) -> ::std::os::raw::c_int;PQconsumeInput639,22214
    pub fn PQenterPipelineMode(conn: *mut PGconn) -> ::std::os::raw::c_int;PQenterPipelineMode642,22307
    pub fn PQexitPipelineMode(conn: *mut PGconn) -> ::std::os::raw::c_int;PQexitPipelineMode645,22405
    pub fn PQpipelineSync(conn: *mut PGconn) -> ::std::os::raw::c_int;PQpipelineSync648,22502
    pub fn PQsendFlushRequest(conn: *mut PGconn) -> ::std::os::raw::c_int;PQsendFlushRequest651,22595
    pub fn PQsendPipelineSync(conn: *mut PGconn) -> ::std::os::raw::c_int;PQsendPipelineSync654,22692
    pub fn PQnotifies(conn: *mut PGconn) -> *mut PGnotify;PQnotifies657,22789
    pub fn PQputCopyData(PQputCopyData660,22870
    pub fn PQputCopyEnd(PQputCopyEnd667,23063
    pub fn PQgetCopyData(PQgetCopyData673,23218
    pub fn PQgetline(PQgetline680,23414
    pub fn PQputline(PQputline687,23601
    pub fn PQgetlineAsync(PQgetlineAsync693,23751
    pub fn PQputnbytes(PQputnbytes700,23944
    pub fn PQendcopy(conn: *mut PGconn) -> ::std::os::raw::c_int;PQendcopy707,24135
    pub fn PQsetnonblocking(conn: *mut PGconn, arg: ::std::os::raw::c_int)PQsetnonblocking710,24223
    pub fn PQisnonblocking(conn: *const PGconn) -> ::std::os::raw::c_int;PQisnonblocking714,24354
    pub fn PQisthreadsafe() -> ::std::os::raw::c_int;PQisthreadsafe717,24450
    pub fn PQping(conninfo: *const ::std::os::raw::c_char) -> PGPing;PQping720,24526
    pub fn PQpingParams(PQpingParams723,24618
    pub fn PQflush(conn: *mut PGconn) -> ::std::os::raw::c_int;PQflush730,24838
    pub fn PQfn(PQfn733,24924
    pub fn PQresultStatus(res: *const PGresult) -> ExecStatusType;PQresultStatus744,25264
    pub fn PQresStatus(status: ExecStatusType) -> *mut ::std::os::raw::c_char;PQresStatus747,25353
    pub fn PQresultErrorMessage(res: *const PGresult) -> *mut ::std::os::raw::c_char;PQresultErrorMessage750,25454
    pub fn PQresultVerboseErrorMessage(PQresultVerboseErrorMessage753,25562
    pub fn PQresultErrorField(PQresultErrorField760,25767
    pub fn PQntuples(res: *const PGresult) -> ::std::os::raw::c_int;PQntuples766,25930
    pub fn PQnfields(res: *const PGresult) -> ::std::os::raw::c_int;PQnfields769,26021
    pub fn PQbinaryTuples(res: *const PGresult) -> ::std::os::raw::c_int;PQbinaryTuples772,26112
    pub fn PQfname(PQfname775,26208
    pub fn PQfnumber(PQfnumber781,26360
    pub fn PQftable(res: *const PGresult, field_num: ::std::os::raw::c_int) -> Oid;PQftable787,26517
    pub fn PQftablecol(PQftablecol790,26623
    pub fn PQfformat(PQfformat796,26773
    pub fn PQftype(res: *const PGresult, field_num: ::std::os::raw::c_int) -> Oid;PQftype802,26921
    pub fn PQfsize(res: *const PGresult, field_num: ::std::os::raw::c_int)PQfsize805,27026
    pub fn PQfmod(res: *const PGresult, field_num: ::std::os::raw::c_int) -> ::std::os::raw::c_iPQfmod809,27157
    pub fn PQcmdStatus(res: *mut PGresult) -> *mut ::std::os::raw::c_char;PQcmdStatus812,27279
    pub fn PQoidStatus(res: *const PGresult) -> *mut ::std::os::raw::c_char;PQoidStatus815,27376
    pub fn PQoidValue(res: *const PGresult) -> Oid;PQoidValue818,27475
    pub fn PQcmdTuples(res: *mut PGresult) -> *mut ::std::os::raw::c_char;PQcmdTuples821,27549
    pub fn PQgetvalue(PQgetvalue824,27646
    pub fn PQgetlength(PQgetlength831,27841
    pub fn PQgetisnull(PQgetisnull838,28031
    pub fn PQnparams(res: *const PGresult) -> ::std::os::raw::c_int;PQnparams845,28221
    pub fn PQparamtype(res: *const PGresult, param_num: ::std::os::raw::c_int) -> Oid;PQparamtype848,28312
    pub fn PQdescribePrepared(PQdescribePrepared851,28421
    pub fn PQdescribePortal(PQdescribePortal857,28570
    pub fn PQsendDescribePrepared(PQsendDescribePrepared863,28719
    pub fn PQsendDescribePortal(PQsendDescribePortal869,28880
    pub fn PQclosePrepared(conn: *mut PGconn, stmt: *const ::std::os::raw::c_char)PQclosePrepared875,29041
    pub fn PQclosePortal(conn: *mut PGconn, portal: *const ::std::os::raw::c_char)PQclosePortal879,29172
    pub fn PQsendClosePrepared(PQsendClosePrepared883,29303
    pub fn PQsendClosePortal(PQsendClosePortal889,29461
    pub fn PQclear(res: *mut PGresult);PQclear895,29619
    pub fn PQfreemem(ptr: *mut ::std::os::raw::c_void);PQfreemem898,29681
    pub fn PQmakeEmptyPGresult(conn: *mut PGconn, status: ExecStatusType) -> *mut PGresult;PQmakeEmptyPGresult901,29759
    pub fn PQcopyResult(src: *const PGresult, flags: ::std::os::raw::c_int) -> *mut PGresult;PQcopyResult904,29873
    pub fn PQsetResultAttrs(PQsetResultAttrs907,29989
    pub fn PQresultAlloc(res: *mut PGresult, nBytes: usize) -> *mut ::std::os::raw::c_void;PQresultAlloc914,30183
    pub fn PQresultMemorySize(res: *const PGresult) -> usize;PQresultMemorySize917,30297
    pub fn PQsetvalue(PQsetvalue920,30381
    pub fn PQescapeStringConn(PQescapeStringConn929,30648
    pub fn PQescapeLiteral(PQescapeLiteral938,30896
    pub fn PQescapeIdentifier(PQescapeIdentifier945,31076
    pub fn PQescapeByteaConn(PQescapeByteaConn952,31259
    pub fn PQunescapeBytea(PQunescapeBytea960,31482
    pub fn PQescapeString(PQescapeString966,31651
    pub fn PQescapeBytea(PQescapeBytea973,31825
    pub fn PQprint(fout: *mut FILE, res: *const PGresult, po: *const PQprintOpt);PQprint980,32017
    pub fn PQdisplayTuples(PQdisplayTuples983,32121
    pub fn PQprintTuples(PQprintTuples993,32404
    pub fn lo_open(lo_open1002,32645
    pub fn lo_close(conn: *mut PGconn, fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;lo_close1009,32804
    pub fn lo_read(lo_read1012,32918
    pub fn lo_write(lo_write1020,33116
    pub fn lo_lseek(lo_lseek1028,33317
    pub fn lo_lseek64(lo_lseek641036,33532
    pub fn lo_creat(conn: *mut PGconn, mode: ::std::os::raw::c_int) -> Oid;lo_creat1044,33723
    pub fn lo_create(conn: *mut PGconn, lobjId: Oid) -> Oid;lo_create1047,33821
    pub fn lo_tell(conn: *mut PGconn, fd: ::std::os::raw::c_int) -> ::std::os::raw::c_int;lo_tell1050,33904
    pub fn lo_tell64(conn: *mut PGconn, fd: ::std::os::raw::c_int) -> pg_int64;lo_tell641053,34017
    pub fn lo_truncate(lo_truncate1056,34119
    pub fn lo_truncate64(lo_truncate641063,34279
    pub fn lo_unlink(conn: *mut PGconn, lobjId: Oid) -> ::std::os::raw::c_int;lo_unlink1070,34444
    pub fn lo_import(conn: *mut PGconn, filename: *const ::std::os::raw::c_char) -> Oid;lo_import1073,34545
    pub fn lo_import_with_oid(lo_import_with_oid1076,34656
    pub fn lo_export(lo_export1083,34820
    pub fn PQlibVersion() -> ::std::os::raw::c_int;PQlibVersion1090,34993
    pub fn PQsocketPoll(PQsocketPoll1093,35067
    pub fn PQgetCurrentTimeUSec() -> pg_usec_time_t;PQgetCurrentTimeUSec1101,35298
    pub fn PQmblen(PQmblen1104,35373
    pub fn PQmblenBounded(PQmblenBounded1110,35530
    pub fn PQdsplen(PQdsplen1116,35694
    pub fn PQenv2encoding() -> ::std::os::raw::c_int;PQenv2encoding1122,35852
    pub fn PQencryptPassword(PQencryptPassword1125,35928
    pub fn PQencryptPasswordConn(PQencryptPasswordConn1131,36110
    pub fn PQchangePassword(PQchangePassword1139,36373
    pub fn pg_char_to_encoding(name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;pg_char_to_encoding1146,36567
    pub fn pg_encoding_to_char(encoding: ::std::os::raw::c_int) -> *const ::std::os::raw::c_charpg_encoding_to_char1149,36683
    pub fn pg_valid_server_encoding_id(encoding: ::std::os::raw::c_int) -> ::std::os::raw::c_intpg_valid_server_encoding_id1152,36803
pub type PQsslKeyPassHook_OpenSSL_type = ::std::option::Option<PQsslKeyPassHook_OpenSSL_type1154,36903
    pub fn PQgetSSLKeyPassHook_OpenSSL() -> PQsslKeyPassHook_OpenSSL_type;PQgetSSLKeyPassHook_OpenSSL1162,37154
    pub fn PQsetSSLKeyPassHook_OpenSSL(hook: PQsslKeyPassHook_OpenSSL_type);PQsetSSLKeyPassHook_OpenSSL1165,37251
    pub fn PQdefaultSSLKeyPassHook_OpenSSL(PQdefaultSSLKeyPassHook_OpenSSL1168,37350
